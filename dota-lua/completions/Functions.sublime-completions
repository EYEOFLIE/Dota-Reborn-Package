// This file is auto generated by a tool
{
	"scope": 	"source.lua",
	"completions":
	[
		{ "trigger": "AddFOWViewer", "contents": "AddFOWViewer(${1:nTeamID},${2:vLocation},${3:flRadius},${4:flDuration},${5:bObstructedVision})" },
		{ "trigger": "AngleDiff", "contents": "AngleDiff(${1:float_1},${2:float_2})" },
		{ "trigger": "AppendToLogFile", "contents": "AppendToLogFile(${1:string_1},${2:string_2})" },
		{ "trigger": "ApplyDamage", "contents": "ApplyDamage(${1:handle_1})" },
		{ "trigger": "AxisAngleToQuaternion", "contents": "AxisAngleToQuaternion(${1:vector},${2:float})" },
		{ "trigger": "CalcClosestPointOnEntityOBB", "contents": "CalcClosestPointOnEntityOBB(${1:handle_1},${2:Vector_2})" },
		{ "trigger": "CalcDistanceBetweenEntityOBB", "contents": "CalcDistanceBetweenEntityOBB(${1:handle_1},${2:handle_2})" },
		{ "trigger": "CancelEntityIOEvents", "contents": "CancelEntityIOEvents(${1:ehandle_1})" },
		{ "trigger": "ClearTeamCustomHealthbarColor", "contents": "ClearTeamCustomHealthbarColor(${1:teamNumber})" },
		{ "trigger": "CreateEffect", "contents": "CreateEffect(${1:handle_1})" },
		{ "trigger": "CreateHTTPRequest", "contents": "CreateHTTPRequest(${1:string_1},${2:string_2})" },
		{ "trigger": "CreateHeroForPlayer", "contents": "CreateHeroForPlayer(${1:string_1},${2:handle_2})" },
		{ "trigger": "CreateItem", "contents": "CreateItem(${1:string_1},${2:handle_2},${3:handle_3})" },
		{ "trigger": "CreateItemOnPositionForLaunch", "contents": "CreateItemOnPositionForLaunch(${1:but doesn't clear a space},${2:handle_2})" },
		{ "trigger": "CreateItemOnPositionSync", "contents": "CreateItemOnPositionSync(${1:Vector_1},${2:handle_2})" },
		{ "trigger": "CreateModifierThinker", "contents": "CreateModifierThinker(${1:hCaster},${2:hAbility},${3:modifierName},${4:paramTable},${5:vOrigin},${6:nTeamNumber},${7:bPhantomBlocker})" },
		{ "trigger": "CreateTempTree", "contents": "CreateTempTree(${1:vLocation},${2:flDuration})" },
		{ "trigger": "CreateTrigger", "contents": "CreateTrigger(${1:vecMin},${2:vecMax},${3:Vector_3})" },
		{ "trigger": "CreateTriggerRadiusApproximate", "contents": "CreateTriggerRadiusApproximate(${1:vecOrigin},${2:flRadius})" },
		{ "trigger": "CreateUnitByName", "contents": "CreateUnitByName(${1:string_1},${2:Vector_2},${3:bool_3},${4:handle_4},${5:handle_5},${6:int_6})" },
		{ "trigger": "CreateUnitByNameAsync", "contents": "CreateUnitByNameAsync(${1:string_1},${2:Vector_2},${3:bool_3},${4:handle_4},${5:handle_5},${6:int_6},${7:handle_7})" },
		{ "trigger": "CreateUnitFromTable", "contents": "CreateUnitFromTable(${1:handle_1},${2:Vector_2})" },
		{ "trigger": "DebugBreak", "contents": "DebugBreak()" },
		{ "trigger": "DebugDrawBox", "contents": "DebugDrawBox(${1:origin},${2:mins},${3:maxs},${4:forward},${5:r},${6:g},${7:b},${8:a})" },
		{ "trigger": "DebugDrawBoxDirection", "contents": "DebugDrawBoxDirection(${1:cent},${2:min},${3:max},${4:forward},${5:vRgb},${6:a},${7:duration})" },
		{ "trigger": "DebugDrawCircle", "contents": "DebugDrawCircle(${1:center},${2:vRgb},${3:a},${4:rad},${5:ztest},${6:duration})" },
		{ "trigger": "DebugDrawClear", "contents": "DebugDrawClear()" },
		{ "trigger": "DebugDrawLine", "contents": "DebugDrawLine(${1:origin},${2:target},${3:r},${4:g},${5:b},${6:ztest},${7:duration})" },
		{ "trigger": "DebugDrawLine_vCol", "contents": "DebugDrawLine_vCol(${1:start},${2:end},${3:vRgb},${4:a},${5:ztest})" },
		{ "trigger": "DebugDrawScreenTextLine", "contents": "DebugDrawScreenTextLine(${1:x},${2:y},${3:lineOffset},${4:text},${5:r},${6:g},${7:b},${8:a},${9:duration})" },
		{ "trigger": "DebugDrawSphere", "contents": "DebugDrawSphere(${1:center},${2:vRgb},${3:a},${4:rad},${5:ztest},${6:duration})" },
		{ "trigger": "DebugDrawText", "contents": "DebugDrawText(${1:origin},${2:text},${3:bViewCheck},${4:duration})" },
		{ "trigger": "DebugScreenTextPretty", "contents": "DebugScreenTextPretty(${1:x},${2:y},${3:lineOffset},${4:text},${5:r},${6:g},${7:b},${8:a},${9:duration},${10:font},${11:size},${12:bBold})" },
		{ "trigger": "DoCleaveAttack", "contents": "DoCleaveAttack(${1:hAttacker},${2:hTarget},${3:hAbility},${4:fDamage},${5:fRadius},${6:effectName})" },
		{ "trigger": "DoEntFire", "contents": "DoEntFire(${1:string_1},${2:string_2},${3:string_3},${4:float_4},${5:handle_5},${6:handle_6})" },
		{ "trigger": "DoEntFireByInstanceHandle", "contents": "DoEntFireByInstanceHandle(${1:handle_1},${2:string_2},${3:string_3},${4:float_4},${5:handle_5},${6:handle_6})" },
		{ "trigger": "DoIncludeScript", "contents": "DoIncludeScript(${1:internal},${2:handle_2})" },
		{ "trigger": "DoScriptAssert", "contents": "DoScriptAssert(${1:bool_1},${2:string_2})" },
		{ "trigger": "DoUniqueString", "contents": "DoUniqueString(${1:string_1})" },
		{ "trigger": "EmitAnnouncerSound", "contents": "EmitAnnouncerSound(${1:string_1})" },
		{ "trigger": "EmitAnnouncerSoundForPlayer", "contents": "EmitAnnouncerSoundForPlayer(${1:string_1},${2:int_2})" },
		{ "trigger": "EmitAnnouncerSoundForTeam", "contents": "EmitAnnouncerSoundForTeam(${1:string_1},${2:int_2})" },
		{ "trigger": "EmitAnnouncerSoundForTeamOnLocation", "contents": "EmitAnnouncerSoundForTeamOnLocation(${1:string_1},${2:int_2},${3:Vector_3})" },
		{ "trigger": "EmitGlobalSound", "contents": "EmitGlobalSound(${1:string_1})" },
		{ "trigger": "EmitSoundOn", "contents": "EmitSoundOn(${1:string_1},${2:handle_2})" },
		{ "trigger": "EmitSoundOnClient", "contents": "EmitSoundOnClient(${1:string_1},${2:handle_2})" },
		{ "trigger": "EmitSoundOnLocationForAllies", "contents": "EmitSoundOnLocationForAllies(${1:Vector_1},${2:string_2},${3:handle_3})" },
		{ "trigger": "EmitSoundOnLocationWithCaster", "contents": "EmitSoundOnLocationWithCaster(${1:vLocation},${2:soundName},${3:hCaster})" },
		{ "trigger": "EntIndexToHScript", "contents": "EntIndexToHScript(${1:int_1})" },
		{ "trigger": "ExecuteOrderFromTable", "contents": "ExecuteOrderFromTable(${1:handle_1})" },
		{ "trigger": "ExponentialDecay", "contents": "ExponentialDecay(${1:float_1},${2:float_2},${3:float_3})" },
		{ "trigger": "FindClearSpaceForUnit", "contents": "FindClearSpaceForUnit(${1:handle_1},${2:Vector_2},${3:bool_3})" },
		{ "trigger": "FindUnitsInLine", "contents": "FindUnitsInLine(${1:int_1},${2:Vector_2},${3:Vector_3},${4:handle_4},${5:float_5},${6:int_6},${7:int_7},${8:int_8})" },
		{ "trigger": "FindUnitsInRadius", "contents": "FindUnitsInRadius(${1:int_1},${2:Vector_2},${3:handle_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9})" },
		{ "trigger": "FireEntityIOInputNameOnly", "contents": "FireEntityIOInputNameOnly(${1:ehandle_1},${2:string_2})" },
		{ "trigger": "FireEntityIOInputString", "contents": "FireEntityIOInputString(${1:ehandle_1},${2:string_2},${3:string_3})" },
		{ "trigger": "FireEntityIOInputVec", "contents": "FireEntityIOInputVec(${1:ehandle_1},${2:string_2},${3:Vector_3})" },
		{ "trigger": "FireGameEvent", "contents": "FireGameEvent(${1:string_1},${2:handle_2})" },
		{ "trigger": "FireGameEventLocal", "contents": "FireGameEventLocal(${1:string_1},${2:handle_2})" },
		{ "trigger": "FrameTime", "contents": "FrameTime()" },
		{ "trigger": "GetEntityIndexForTreeId", "contents": "GetEntityIndexForTreeId(${1:unsigned_1})" },
		{ "trigger": "GetFrameCount", "contents": "GetFrameCount()" },
		{ "trigger": "GetFrostyBoostAmount", "contents": "GetFrostyBoostAmount(${1:int_1},${2:int_2})" },
		{ "trigger": "GetFrostyPointsForRound", "contents": "GetFrostyPointsForRound(${1:int_1},${2:int_2},${3:int_3})" },
		{ "trigger": "GetGoldFrostyBoostAmount", "contents": "GetGoldFrostyBoostAmount(${1:int_1},${2:int_2})" },
		{ "trigger": "GetGoldFrostyPointsForRound", "contents": "GetGoldFrostyPointsForRound(${1:int_1},${2:int_2},${3:int_3})" },
		{ "trigger": "GetGroundHeight", "contents": "GetGroundHeight(${1:Vector_1},${2:handle_2})" },
		{ "trigger": "GetGroundPosition", "contents": "GetGroundPosition(${1:Vector_1},${2:handle_2})" },
		{ "trigger": "GetItemCost", "contents": "GetItemCost(${1:string_1})" },
		{ "trigger": "GetListenServerHost", "contents": "GetListenServerHost()" },
		{ "trigger": "GetMapName", "contents": "GetMapName()" },
		{ "trigger": "GetMaxOutputDelay", "contents": "GetMaxOutputDelay(${1:ehandle_1},${2:string_2})" },
		{ "trigger": "GetPhysAngularVelocity", "contents": "GetPhysAngularVelocity(${1:handle_1})" },
		{ "trigger": "GetPhysVelocity", "contents": "GetPhysVelocity(${1:handle_1})" },
		{ "trigger": "GetSystemDate", "contents": "GetSystemDate()" },
		{ "trigger": "GetSystemTime", "contents": "GetSystemTime()" },
		{ "trigger": "GetTeamHeroKills", "contents": "GetTeamHeroKills(${1:int teamID})" },
		{ "trigger": "GetTeamName", "contents": "GetTeamName(${1:int teamID})" },
		{ "trigger": "GetTreeIdForEntityIndex", "contents": "GetTreeIdForEntityIndex(${1:int_1})" },
		{ "trigger": "GetWorldMaxX", "contents": "GetWorldMaxX()" },
		{ "trigger": "GetWorldMaxY", "contents": "GetWorldMaxY()" },
		{ "trigger": "GetWorldMinX", "contents": "GetWorldMinX()" },
		{ "trigger": "GetWorldMinY", "contents": "GetWorldMinY()" },
		{ "trigger": "InitLogFile", "contents": "InitLogFile(${1:string_1},${2:string_2})" },
		{ "trigger": "IsClient", "contents": "IsClient()" },
		{ "trigger": "IsDedicatedServer", "contents": "IsDedicatedServer()" },
		{ "trigger": "IsInToolsMode", "contents": "IsInToolsMode()" },
		{ "trigger": "IsMarkedForDeletion", "contents": "IsMarkedForDeletion(${1:handle_1})" },
		{ "trigger": "IsServer", "contents": "IsServer()" },
		{ "trigger": "IsValidEntity", "contents": "IsValidEntity(${1:handle_1})" },
		{ "trigger": "LimitPathingSearchDepth", "contents": "LimitPathingSearchDepth(${1:float_1})" },
		{ "trigger": "LinkLuaModifier", "contents": "LinkLuaModifier(${1:className},${2:fileName},${3:LuaModifierType})" },
		{ "trigger": "ListenToGameEvent", "contents": "ListenToGameEvent(${1:string_1},${2:handle_2},${3:handle_3})" },
		{ "trigger": "LoadKeyValues", "contents": "LoadKeyValues(${1:string_1})" },
		{ "trigger": "LoadKeyValuesFromString", "contents": "LoadKeyValuesFromString(${1:string_1})" },
		{ "trigger": "MakeStringToken", "contents": "MakeStringToken(${1:string_1})" },
		{ "trigger": "MinimapEvent", "contents": "MinimapEvent(${1:nTeamID},${2:hEntity},${3:nXCoord},${4:nYCoord},${5:nEventType},${6:nEventDuration})" },
		{ "trigger": "Msg", "contents": "Msg(${1:string_1})" },
		{ "trigger": "PauseGame", "contents": "PauseGame(${1:bool_1})" },
		{ "trigger": "PlayerInstanceFromIndex", "contents": "PlayerInstanceFromIndex(${1:int_1})" },
		{ "trigger": "PrecacheEntityFromTable", "contents": "PrecacheEntityFromTable(${1:string_1},${2:handle_2},${3:handle_3})" },
		{ "trigger": "PrecacheEntityListFromTable", "contents": "PrecacheEntityListFromTable(${1:handle_1},${2:handle_2})" },
		{ "trigger": "PrecacheItemByNameAsync", "contents": "PrecacheItemByNameAsync(${1:string_1},${2:handle_2})" },
		{ "trigger": "PrecacheItemByNameSync", "contents": "PrecacheItemByNameSync(${1:string_1},${2:handle_2})" },
		{ "trigger": "PrecacheModel", "contents": "PrecacheModel(${1:modelName},${2:context})" },
		{ "trigger": "PrecacheResource", "contents": "PrecacheResource(${1:string_1},${2:string_2},${3:handle_3})" },
		{ "trigger": "PrecacheUnitByNameAsync", "contents": "PrecacheUnitByNameAsync(${1:string_1},${2:handle_2},${3:int_3})" },
		{ "trigger": "PrecacheUnitByNameSync", "contents": "PrecacheUnitByNameSync(${1:string_1},${2:handle_2},${3:int_3})" },
		{ "trigger": "PrecacheUnitFromTableAsync", "contents": "PrecacheUnitFromTableAsync(${1:handle_1},${2:handle_2})" },
		{ "trigger": "PrecacheUnitFromTableSync", "contents": "PrecacheUnitFromTableSync(${1:handle_1},${2:handle_2})" },
		{ "trigger": "PrintLinkedConsoleMessage", "contents": "PrintLinkedConsoleMessage(${1:string_1},${2:string_2})" },
		{ "trigger": "RandomFloat", "contents": "RandomFloat(${1:float_1},${2:float_2})" },
		{ "trigger": "RandomInt", "contents": "RandomInt(${1:int_1},${2:int_2})" },
		{ "trigger": "RandomVector", "contents": "RandomVector(${1:float_1})" },
		{ "trigger": "RegisterSpawnGroupFilterProxy", "contents": "RegisterSpawnGroupFilterProxy(${1:string_1})" },
		{ "trigger": "ReloadMOTD", "contents": "ReloadMOTD()" },
		{ "trigger": "RemoveSpawnGroupFilterProxy", "contents": "RemoveSpawnGroupFilterProxy(${1:string_1})" },
		{ "trigger": "ResolveNPCPositions", "contents": "ResolveNPCPositions(${1:Vector_1},${2:float_2})" },
		{ "trigger": "RollPercentage", "contents": "RollPercentage(${1:int nPct})" },
		{ "trigger": "RotateOrientation", "contents": "RotateOrientation(${1:QAngle_1},${2:QAngle_2})" },
		{ "trigger": "RotatePosition", "contents": "RotatePosition(${1:Vector_1},${2:QAngle_2},${3:Vector_3})" },
		{ "trigger": "RotateQuaternionByAxisAngle", "contents": "RotateQuaternionByAxisAngle(${1:quaternion},${2:vector},${3:float})" },
		{ "trigger": "RotationDelta", "contents": "RotationDelta(${1:QAngle_1},${2:QAngle_2})" },
		{ "trigger": "Say", "contents": "Say(${1:handle_1},${2:string_2},${3:bool_3})" },
		{ "trigger": "ScreenShake", "contents": "ScreenShake(${1:SHAKE_START = 0},${2:SHAKE_STOP = 1},${3:float_3},${4:float_4},${5:float_5},${6:int_6},${7:bool_7})" },
		{ "trigger": "SendFrostivusTimeElapsedToGC", "contents": "SendFrostivusTimeElapsedToGC()" },
		{ "trigger": "SendFrostyPointsMessageToGC", "contents": "SendFrostyPointsMessageToGC(${1:handle_1})" },
		{ "trigger": "SendOverheadEventMessage", "contents": "SendOverheadEventMessage(${1:DOTAPlayer sendToPlayer},${2:int iMessageType},${3:Entity targetEntity},${4:int iValue},${5:DOTAPlayer sourcePlayer})" },
		{ "trigger": "SendToConsole", "contents": "SendToConsole(${1:string_1})" },
		{ "trigger": "SendToServerConsole", "contents": "SendToServerConsole(${1:string_1})" },
		{ "trigger": "SetOpvarFloatAll", "contents": "SetOpvarFloatAll(${1:string_1},${2:string_2},${3:string_3},${4:float_4})" },
		{ "trigger": "SetOpvarFloatPlayer", "contents": "SetOpvarFloatPlayer(${1:string_1},${2:string_2},${3:string_3},${4:float_4},${5:handle_5})" },
		{ "trigger": "SetQuestName", "contents": "SetQuestName(${1:string_1})" },
		{ "trigger": "SetQuestPhase", "contents": "SetQuestPhase(${1:int_1})" },
		{ "trigger": "SetRenderingEnabled", "contents": "SetRenderingEnabled(${1:ehandle_1},${2:bool_2})" },
		{ "trigger": "SetTeamCustomHealthbarColor", "contents": "SetTeamCustomHealthbarColor(${1:teamNumber},${2:r},${3:g},${4:b})" },
		{ "trigger": "ShowCustomHeaderMessage", "contents": "ShowCustomHeaderMessage(${1:const char *pszMessage},${2:int nPlayerID},${3:int nValue},${4:float flTime})" },
		{ "trigger": "ShowGenericPopup", "contents": "ShowGenericPopup(${1:string_1},${2:string_2},${3:string_3},${4:string_4},${5:int_5})" },
		{ "trigger": "ShowGenericPopupToPlayer", "contents": "ShowGenericPopupToPlayer(${1:handle_1},${2:string_2},${3:string_3},${4:string_4},${5:string_5},${6:int_6})" },
		{ "trigger": "ShowMessage", "contents": "ShowMessage(${1:string_1})" },
		{ "trigger": "SpawnEntityFromTableSynchronous", "contents": "SpawnEntityFromTableSynchronous(${1:string_1},${2:handle_2})" },
		{ "trigger": "SpawnEntityGroupFromTable", "contents": "SpawnEntityGroupFromTable(${1:handle_1},${2:bool_2},${3:handle_3})" },
		{ "trigger": "SpawnEntityListFromTableAsynchronous", "contents": "SpawnEntityListFromTableAsynchronous(${1:handle_1},${2:handle_2})" },
		{ "trigger": "SpawnEntityListFromTableSynchronous", "contents": "SpawnEntityListFromTableSynchronous(${1:handle_1})" },
		{ "trigger": "SplineQuaternions", "contents": "SplineQuaternions(${1:quaternion},${2:quaternion},${3:float})" },
		{ "trigger": "SplineVectors", "contents": "SplineVectors(${1:vector},${2:vector},${3:float})" },
		{ "trigger": "StartSoundEvent", "contents": "StartSoundEvent(${1:string_1},${2:handle_2})" },
		{ "trigger": "StartSoundEventFromPosition", "contents": "StartSoundEventFromPosition(${1:string_1},${2:Vector_2})" },
		{ "trigger": "StartSoundEventFromPositionReliable", "contents": "StartSoundEventFromPositionReliable(${1:string_1},${2:Vector_2})" },
		{ "trigger": "StartSoundEventFromPositionUnreliable", "contents": "StartSoundEventFromPositionUnreliable(${1:string_1},${2:Vector_2})" },
		{ "trigger": "StartSoundEventReliable", "contents": "StartSoundEventReliable(${1:string_1},${2:handle_2})" },
		{ "trigger": "StartSoundEventUnreliable", "contents": "StartSoundEventUnreliable(${1:string_1},${2:handle_2})" },
		{ "trigger": "StopEffect", "contents": "StopEffect(${1:handle_1},${2:string_2})" },
		{ "trigger": "StopListeningToAllGameEvents", "contents": "StopListeningToAllGameEvents(${1:handle_1})" },
		{ "trigger": "StopListeningToGameEvent", "contents": "StopListeningToGameEvent(${1:int_1})" },
		{ "trigger": "StopSoundEvent", "contents": "StopSoundEvent(${1:string_1},${2:handle_2})" },
		{ "trigger": "StopSoundOn", "contents": "StopSoundOn(${1:string_1},${2:handle_2})" },
		{ "trigger": "Time", "contents": "Time()" },
		{ "trigger": "TraceCollideable", "contents": "TraceCollideable(${1:optional mins})" },
		{ "trigger": "TraceHull", "contents": "TraceHull(${1:handle_1})" },
		{ "trigger": "TraceLine", "contents": "TraceLine(${1:handle_1})" },
		{ "trigger": "UTIL_MessageText", "contents": "UTIL_MessageText(${1:int_1},${2:string_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6})" },
		{ "trigger": "UTIL_MessageTextAll", "contents": "UTIL_MessageTextAll(${1:string_1},${2:int_2},${3:int_3},${4:int_4},${5:int_5})" },
		{ "trigger": "UTIL_MessageTextAll_WithContext", "contents": "UTIL_MessageTextAll_WithContext(${1:Valid context keys: player_id},${2:value},${3:team_id},${4:int_4},${5:int_5},${6:handle_6})" },
		{ "trigger": "UTIL_MessageText_WithContext", "contents": "UTIL_MessageText_WithContext(${1:Valid context keys: player_id},${2:value},${3:team_id},${4:int_4},${5:int_5},${6:int_6},${7:handle_7})" },
		{ "trigger": "UTIL_Remove", "contents": "UTIL_Remove(${1:handle_1})" },
		{ "trigger": "UTIL_RemoveImmediate", "contents": "UTIL_RemoveImmediate(${1:handle_1})" },
		{ "trigger": "UTIL_ResetMessageText", "contents": "UTIL_ResetMessageText(${1:int_1})" },
		{ "trigger": "UTIL_ResetMessageTextAll", "contents": "UTIL_ResetMessageTextAll()" },
		{ "trigger": "UnitFilter", "contents": "UnitFilter(${1:handle_1},${2:int_2},${3:int_3},${4:int_4},${5:int_5})" },
		{ "trigger": "UnloadSpawnGroup", "contents": "UnloadSpawnGroup(${1:string_1})" },
		{ "trigger": "UnloadSpawnGroupByHandle", "contents": "UnloadSpawnGroupByHandle(${1:int_1})" },
		{ "trigger": "UpdateEventPoints", "contents": "UpdateEventPoints(${1:handle_1})" },
		{ "trigger": "VectorToAngles", "contents": "VectorToAngles(${1:with no roll})" },
		{ "trigger": "Warning", "contents": "Warning(${1:string_1})" },
		{ "trigger": "cvar_getf", "contents": "cvar_getf(${1:string_1})" },
		{ "trigger": "cvar_setf", "contents": "cvar_setf(${1:string_1},${2:float_2})" },
		{ "trigger": "rr_AddDecisionRule", "contents": "rr_AddDecisionRule(${1:handle_1})" },
		{ "trigger": "rr_CommitAIResponse", "contents": "rr_CommitAIResponse(${1:entity},${2:airesponse})" },
		{ "trigger": "rr_GetResponseTargets", "contents": "rr_GetResponseTargets()" },
		{ "trigger": "rr_QueryBestResponse", "contents": "rr_QueryBestResponse(${1:entity},${2:query},${3:handle_3})" },
		{ "trigger": "CBaseAnimating_GetAttachmentAngles", "contents": "GetAttachmentAngles(${1:iAttachment})" },
		{ "trigger": "GetAttachmentAngles", "contents": "GetAttachmentAngles(${1:iAttachment})" },
		{ "trigger": "CBaseAnimating_GetAttachmentOrigin", "contents": "GetAttachmentOrigin(${1:iAttachment})" },
		{ "trigger": "GetAttachmentOrigin", "contents": "GetAttachmentOrigin(${1:iAttachment})" },
		{ "trigger": "CBaseAnimating_GetModelScale", "contents": "GetModelScale()" },
		{ "trigger": "GetModelScale", "contents": "GetModelScale()" },
		{ "trigger": "CBaseAnimating_IsSequenceFinished", "contents": "IsSequenceFinished()" },
		{ "trigger": "IsSequenceFinished", "contents": "IsSequenceFinished()" },
		{ "trigger": "CBaseAnimating_ScriptLookupAttachment", "contents": "ScriptLookupAttachment(${1:pAttachmentName})" },
		{ "trigger": "ScriptLookupAttachment", "contents": "ScriptLookupAttachment(${1:pAttachmentName})" },
		{ "trigger": "CBaseAnimating_SetBodygroup", "contents": "SetBodygroup(${1:iGroup},${2:iValue})" },
		{ "trigger": "SetBodygroup", "contents": "SetBodygroup(${1:iGroup},${2:iValue})" },
		{ "trigger": "CBaseAnimating_SetModelScale", "contents": "SetModelScale(${1:flScale})" },
		{ "trigger": "SetModelScale", "contents": "SetModelScale(${1:flScale})" },
		{ "trigger": "CBaseAnimating_SetPoseParameter", "contents": "SetPoseParameter(${1:szName},${2:fValue})" },
		{ "trigger": "SetPoseParameter", "contents": "SetPoseParameter(${1:szName},${2:fValue})" },
		{ "trigger": "CBaseCombatCharacter_GetEquippedWeapons", "contents": "GetEquippedWeapons()" },
		{ "trigger": "GetEquippedWeapons", "contents": "GetEquippedWeapons()" },
		{ "trigger": "CBaseCombatCharacter_GetFaction", "contents": "GetFaction()" },
		{ "trigger": "GetFaction", "contents": "GetFaction()" },
		{ "trigger": "CBaseCombatCharacter_GetWeaponCount", "contents": "GetWeaponCount()" },
		{ "trigger": "GetWeaponCount", "contents": "GetWeaponCount()" },
		{ "trigger": "CBaseCombatCharacter_ShootPosition", "contents": "ShootPosition(${1:or hand in VR})" },
		{ "trigger": "ShootPosition", "contents": "ShootPosition(${1:or hand in VR})" },
		{ "trigger": "CBaseEntity_AddEffects", "contents": "AddEffects(${1:int})" },
		{ "trigger": "AddEffects", "contents": "AddEffects(${1:int})" },
		{ "trigger": "CBaseEntity_ApplyAbsVelocityImpulse", "contents": "ApplyAbsVelocityImpulse(${1:vecImpulse})" },
		{ "trigger": "ApplyAbsVelocityImpulse", "contents": "ApplyAbsVelocityImpulse(${1:vecImpulse})" },
		{ "trigger": "CBaseEntity_ApplyLocalAngularVelocityImpulse", "contents": "ApplyLocalAngularVelocityImpulse(${1:angImpulse})" },
		{ "trigger": "ApplyLocalAngularVelocityImpulse", "contents": "ApplyLocalAngularVelocityImpulse(${1:angImpulse})" },
		{ "trigger": "CBaseEntity_Attribute_GetFloatValue", "contents": "Attribute_GetFloatValue(${1:pName},${2:flDefault})" },
		{ "trigger": "Attribute_GetFloatValue", "contents": "Attribute_GetFloatValue(${1:pName},${2:flDefault})" },
		{ "trigger": "CBaseEntity_Attribute_GetIntValue", "contents": "Attribute_GetIntValue(${1:pName},${2:nDefault})" },
		{ "trigger": "Attribute_GetIntValue", "contents": "Attribute_GetIntValue(${1:pName},${2:nDefault})" },
		{ "trigger": "CBaseEntity_Attribute_SetFloatValue", "contents": "Attribute_SetFloatValue(${1:pName},${2:flValue})" },
		{ "trigger": "Attribute_SetFloatValue", "contents": "Attribute_SetFloatValue(${1:pName},${2:flValue})" },
		{ "trigger": "CBaseEntity_Attribute_SetIntValue", "contents": "Attribute_SetIntValue(${1:pName},${2:nValue})" },
		{ "trigger": "Attribute_SetIntValue", "contents": "Attribute_SetIntValue(${1:pName},${2:nValue})" },
		{ "trigger": "CBaseEntity_DeleteAttribute", "contents": "DeleteAttribute(${1:pName})" },
		{ "trigger": "DeleteAttribute", "contents": "DeleteAttribute(${1:pName})" },
		{ "trigger": "CBaseEntity_EmitSound", "contents": "EmitSound(${1:soundname})" },
		{ "trigger": "EmitSound", "contents": "EmitSound(${1:soundname})" },
		{ "trigger": "CBaseEntity_EmitSoundParams", "contents": "EmitSoundParams(${1:soundname},${2:nPitch},${3:flVolume},${4:flDelay})" },
		{ "trigger": "EmitSoundParams", "contents": "EmitSoundParams(${1:soundname},${2:nPitch},${3:flVolume},${4:flDelay})" },
		{ "trigger": "CBaseEntity_EyeAngles", "contents": "EyeAngles()" },
		{ "trigger": "EyeAngles", "contents": "EyeAngles()" },
		{ "trigger": "CBaseEntity_EyePosition", "contents": "EyePosition()" },
		{ "trigger": "EyePosition", "contents": "EyePosition()" },
		{ "trigger": "CBaseEntity_FirstMoveChild", "contents": "FirstMoveChild()" },
		{ "trigger": "FirstMoveChild", "contents": "FirstMoveChild()" },
		{ "trigger": "CBaseEntity_GatherCriteria", "contents": "GatherCriteria(${1:hResult})" },
		{ "trigger": "GatherCriteria", "contents": "GatherCriteria(${1:hResult})" },
		{ "trigger": "CBaseEntity_GetAbsOrigin", "contents": "GetAbsOrigin()" },
		{ "trigger": "GetAbsOrigin", "contents": "GetAbsOrigin()" },
		{ "trigger": "CBaseEntity_GetAngles", "contents": "GetAngles()" },
		{ "trigger": "GetAngles", "contents": "GetAngles()" },
		{ "trigger": "CBaseEntity_GetAnglesAsVector", "contents": "GetAnglesAsVector()" },
		{ "trigger": "GetAnglesAsVector", "contents": "GetAnglesAsVector()" },
		{ "trigger": "CBaseEntity_GetAngularVelocity", "contents": "GetAngularVelocity()" },
		{ "trigger": "GetAngularVelocity", "contents": "GetAngularVelocity()" },
		{ "trigger": "CBaseEntity_GetBaseVelocity", "contents": "GetBaseVelocity()" },
		{ "trigger": "GetBaseVelocity", "contents": "GetBaseVelocity()" },
		{ "trigger": "CBaseEntity_GetBoundingMaxs", "contents": "GetBoundingMaxs()" },
		{ "trigger": "GetBoundingMaxs", "contents": "GetBoundingMaxs()" },
		{ "trigger": "CBaseEntity_GetBoundingMins", "contents": "GetBoundingMins()" },
		{ "trigger": "GetBoundingMins", "contents": "GetBoundingMins()" },
		{ "trigger": "CBaseEntity_GetBounds", "contents": "GetBounds()" },
		{ "trigger": "GetBounds", "contents": "GetBounds()" },
		{ "trigger": "CBaseEntity_GetCenter", "contents": "GetCenter()" },
		{ "trigger": "GetCenter", "contents": "GetCenter()" },
		{ "trigger": "CBaseEntity_GetChildren", "contents": "GetChildren()" },
		{ "trigger": "GetChildren", "contents": "GetChildren()" },
		{ "trigger": "CBaseEntity_GetContext", "contents": "GetContext(${1:name})" },
		{ "trigger": "GetContext", "contents": "GetContext(${1:name})" },
		{ "trigger": "CBaseEntity_GetForwardVector", "contents": "GetForwardVector()" },
		{ "trigger": "GetForwardVector", "contents": "GetForwardVector()" },
		{ "trigger": "CBaseEntity_GetHealth", "contents": "GetHealth()" },
		{ "trigger": "GetHealth", "contents": "GetHealth()" },
		{ "trigger": "CBaseEntity_GetLocalAngularVelocity", "contents": "GetLocalAngularVelocity()" },
		{ "trigger": "GetLocalAngularVelocity", "contents": "GetLocalAngularVelocity()" },
		{ "trigger": "CBaseEntity_GetLocalVelocity", "contents": "GetLocalVelocity()" },
		{ "trigger": "GetLocalVelocity", "contents": "GetLocalVelocity()" },
		{ "trigger": "CBaseEntity_GetMaxHealth", "contents": "GetMaxHealth()" },
		{ "trigger": "GetMaxHealth", "contents": "GetMaxHealth()" },
		{ "trigger": "CBaseEntity_GetModelName", "contents": "GetModelName()" },
		{ "trigger": "GetModelName", "contents": "GetModelName()" },
		{ "trigger": "CBaseEntity_GetMoveParent", "contents": "GetMoveParent()" },
		{ "trigger": "GetMoveParent", "contents": "GetMoveParent()" },
		{ "trigger": "CBaseEntity_GetOrigin", "contents": "GetOrigin()" },
		{ "trigger": "GetOrigin", "contents": "GetOrigin()" },
		{ "trigger": "CBaseEntity_GetOwner", "contents": "GetOwner()" },
		{ "trigger": "GetOwner", "contents": "GetOwner()" },
		{ "trigger": "CBaseEntity_GetOwnerEntity", "contents": "GetOwnerEntity()" },
		{ "trigger": "GetOwnerEntity", "contents": "GetOwnerEntity()" },
		{ "trigger": "CBaseEntity_GetRightVector", "contents": "GetRightVector()" },
		{ "trigger": "GetRightVector", "contents": "GetRightVector()" },
		{ "trigger": "CBaseEntity_GetRootMoveParent", "contents": "GetRootMoveParent()" },
		{ "trigger": "GetRootMoveParent", "contents": "GetRootMoveParent()" },
		{ "trigger": "CBaseEntity_GetSoundDuration", "contents": "GetSoundDuration(${1:soundname},${2:actormodel})" },
		{ "trigger": "GetSoundDuration", "contents": "GetSoundDuration(${1:soundname},${2:actormodel})" },
		{ "trigger": "CBaseEntity_GetTeam", "contents": "GetTeam()" },
		{ "trigger": "GetTeam", "contents": "GetTeam()" },
		{ "trigger": "CBaseEntity_GetTeamNumber", "contents": "GetTeamNumber()" },
		{ "trigger": "GetTeamNumber", "contents": "GetTeamNumber()" },
		{ "trigger": "CBaseEntity_GetUpVector", "contents": "GetUpVector()" },
		{ "trigger": "GetUpVector", "contents": "GetUpVector()" },
		{ "trigger": "CBaseEntity_GetVelocity", "contents": "GetVelocity()" },
		{ "trigger": "GetVelocity", "contents": "GetVelocity()" },
		{ "trigger": "CBaseEntity_HasAttribute", "contents": "HasAttribute(${1:pName})" },
		{ "trigger": "HasAttribute", "contents": "HasAttribute(${1:pName})" },
		{ "trigger": "CBaseEntity_IsAlive", "contents": "IsAlive()" },
		{ "trigger": "IsAlive", "contents": "IsAlive()" },
		{ "trigger": "CBaseEntity_IsPlayer", "contents": "IsPlayer()" },
		{ "trigger": "IsPlayer", "contents": "IsPlayer()" },
		{ "trigger": "CBaseEntity_Kill", "contents": "Kill()" },
		{ "trigger": "Kill", "contents": "Kill()" },
		{ "trigger": "CBaseEntity_NextMovePeer", "contents": "NextMovePeer()" },
		{ "trigger": "NextMovePeer", "contents": "NextMovePeer()" },
		{ "trigger": "CBaseEntity_OverrideFriction", "contents": "OverrideFriction(${1:duration},${2:friction})" },
		{ "trigger": "OverrideFriction", "contents": "OverrideFriction(${1:duration},${2:friction})" },
		{ "trigger": "CBaseEntity_PrecacheScriptSound", "contents": "PrecacheScriptSound(${1:soundname})" },
		{ "trigger": "PrecacheScriptSound", "contents": "PrecacheScriptSound(${1:soundname})" },
		{ "trigger": "CBaseEntity_RemoveEffects", "contents": "RemoveEffects(${1:int})" },
		{ "trigger": "RemoveEffects", "contents": "RemoveEffects(${1:int})" },
		{ "trigger": "CBaseEntity_SetAbsOrigin", "contents": "SetAbsOrigin(${1:origin})" },
		{ "trigger": "SetAbsOrigin", "contents": "SetAbsOrigin(${1:origin})" },
		{ "trigger": "CBaseEntity_SetAngles", "contents": "SetAngles(${1:fPitch},${2:fYaw},${3:fRoll})" },
		{ "trigger": "SetAngles", "contents": "SetAngles(${1:fPitch},${2:fYaw},${3:fRoll})" },
		{ "trigger": "CBaseEntity_SetAngularVelocity", "contents": "SetAngularVelocity(${1:pitchVel},${2:yawVel},${3:rollVel})" },
		{ "trigger": "SetAngularVelocity", "contents": "SetAngularVelocity(${1:pitchVel},${2:yawVel},${3:rollVel})" },
		{ "trigger": "CBaseEntity_SetConstraint", "contents": "SetConstraint(${1:vPos})" },
		{ "trigger": "SetConstraint", "contents": "SetConstraint(${1:vPos})" },
		{ "trigger": "CBaseEntity_SetContext", "contents": "SetContext(${1:name},${2:value},${3:duration})" },
		{ "trigger": "SetContext", "contents": "SetContext(${1:name},${2:value},${3:duration})" },
		{ "trigger": "CBaseEntity_SetContextNum", "contents": "SetContextNum(${1:name},${2:value},${3:duration})" },
		{ "trigger": "SetContextNum", "contents": "SetContextNum(${1:name},${2:value},${3:duration})" },
		{ "trigger": "CBaseEntity_SetContextThink", "contents": "SetContextThink(${1:pszContextName},${2:hThinkFunc},${3:flInterval})" },
		{ "trigger": "SetContextThink", "contents": "SetContextThink(${1:pszContextName},${2:hThinkFunc},${3:flInterval})" },
		{ "trigger": "CBaseEntity_SetForwardVector", "contents": "SetForwardVector(${1:v})" },
		{ "trigger": "SetForwardVector", "contents": "SetForwardVector(${1:v})" },
		{ "trigger": "CBaseEntity_SetFriction", "contents": "SetFriction(${1:flFriction})" },
		{ "trigger": "SetFriction", "contents": "SetFriction(${1:flFriction})" },
		{ "trigger": "CBaseEntity_SetGravity", "contents": "SetGravity(${1:flGravity})" },
		{ "trigger": "SetGravity", "contents": "SetGravity(${1:flGravity})" },
		{ "trigger": "CBaseEntity_SetHealth", "contents": "SetHealth(${1:nHealth})" },
		{ "trigger": "SetHealth", "contents": "SetHealth(${1:nHealth})" },
		{ "trigger": "CBaseEntity_SetMaxHealth", "contents": "SetMaxHealth(${1:amt})" },
		{ "trigger": "SetMaxHealth", "contents": "SetMaxHealth(${1:amt})" },
		{ "trigger": "CBaseEntity_SetOrigin", "contents": "SetOrigin(${1:v})" },
		{ "trigger": "SetOrigin", "contents": "SetOrigin(${1:v})" },
		{ "trigger": "CBaseEntity_SetOwner", "contents": "SetOwner(${1:pOwner})" },
		{ "trigger": "SetOwner", "contents": "SetOwner(${1:pOwner})" },
		{ "trigger": "CBaseEntity_SetParent", "contents": "SetParent(${1:hParent},${2:pAttachmentname})" },
		{ "trigger": "SetParent", "contents": "SetParent(${1:hParent},${2:pAttachmentname})" },
		{ "trigger": "CBaseEntity_SetTeam", "contents": "SetTeam(${1:iTeamNum})" },
		{ "trigger": "SetTeam", "contents": "SetTeam(${1:iTeamNum})" },
		{ "trigger": "CBaseEntity_SetVelocity", "contents": "SetVelocity(${1:vecVelocity})" },
		{ "trigger": "SetVelocity", "contents": "SetVelocity(${1:vecVelocity})" },
		{ "trigger": "CBaseEntity_StopSound", "contents": "StopSound(${1:soundname})" },
		{ "trigger": "StopSound", "contents": "StopSound(${1:soundname})" },
		{ "trigger": "CBaseEntity_Trigger", "contents": "Trigger()" },
		{ "trigger": "Trigger", "contents": "Trigger()" },
		{ "trigger": "CBaseFlex_GetCurrentScene", "contents": "GetCurrentScene()" },
		{ "trigger": "GetCurrentScene", "contents": "GetCurrentScene()" },
		{ "trigger": "CBaseFlex_GetSceneByIndex", "contents": "GetSceneByIndex(${1:index})" },
		{ "trigger": "GetSceneByIndex", "contents": "GetSceneByIndex(${1:index})" },
		{ "trigger": "CBaseModelEntity_GetRenderAlpha", "contents": "GetRenderAlpha()" },
		{ "trigger": "GetRenderAlpha", "contents": "GetRenderAlpha()" },
		{ "trigger": "CBaseModelEntity_SetLightGroup", "contents": "SetLightGroup(${1:string})" },
		{ "trigger": "SetLightGroup", "contents": "SetLightGroup(${1:string})" },
		{ "trigger": "CBaseModelEntity_SetModel", "contents": "SetModel(${1:pModelName})" },
		{ "trigger": "SetModel", "contents": "SetModel(${1:pModelName})" },
		{ "trigger": "CBaseModelEntity_SetRenderAlpha", "contents": "SetRenderAlpha(${1:int})" },
		{ "trigger": "SetRenderAlpha", "contents": "SetRenderAlpha(${1:int})" },
		{ "trigger": "CBaseModelEntity_SetRenderColor", "contents": "SetRenderColor(${1:r},${2:g},${3:b})" },
		{ "trigger": "SetRenderColor", "contents": "SetRenderColor(${1:r},${2:g},${3:b})" },
		{ "trigger": "CBaseModelEntity_SetRenderMode", "contents": "SetRenderMode(${1:int})" },
		{ "trigger": "SetRenderMode", "contents": "SetRenderMode(${1:int})" },
		{ "trigger": "CBaseModelEntity_SetSize", "contents": "SetSize(${1:mins},${2:maxs})" },
		{ "trigger": "SetSize", "contents": "SetSize(${1:mins},${2:maxs})" },
		{ "trigger": "CBasePlayer_GetHMDAvatar", "contents": "GetHMDAvatar()" },
		{ "trigger": "GetHMDAvatar", "contents": "GetHMDAvatar()" },
		{ "trigger": "CBasePlayer_GetUserID", "contents": "GetUserID()" },
		{ "trigger": "GetUserID", "contents": "GetUserID()" },
		{ "trigger": "CBasePlayer_IsNoclipping", "contents": "IsNoclipping()" },
		{ "trigger": "IsNoclipping", "contents": "IsNoclipping()" },
		{ "trigger": "CBasePlayer_IsUsePressed", "contents": "IsUsePressed()" },
		{ "trigger": "IsUsePressed", "contents": "IsUsePressed()" },
		{ "trigger": "CBasePlayer_IsVRControllerButtonPressed", "contents": "IsVRControllerButtonPressed(${1:nButton})" },
		{ "trigger": "IsVRControllerButtonPressed", "contents": "IsVRControllerButtonPressed(${1:nButton})" },
		{ "trigger": "CBasePlayer_Quit", "contents": "Quit()" },
		{ "trigger": "Quit", "contents": "Quit()" },
		{ "trigger": "CBaseTrigger_Disable", "contents": "Disable()" },
		{ "trigger": "Disable", "contents": "Disable()" },
		{ "trigger": "CBaseTrigger_Enable", "contents": "Enable()" },
		{ "trigger": "Enable", "contents": "Enable()" },
		{ "trigger": "CBaseTrigger_IsTouching", "contents": "IsTouching(${1:hEnt})" },
		{ "trigger": "IsTouching", "contents": "IsTouching(${1:hEnt})" },
		{ "trigger": "CBodyComponent_AddImpulseAtPosition", "contents": "AddImpulseAtPosition(${1:Vector_1},${2:Vector_2})" },
		{ "trigger": "AddImpulseAtPosition", "contents": "AddImpulseAtPosition(${1:Vector_1},${2:Vector_2})" },
		{ "trigger": "CBodyComponent_AddVelocity", "contents": "AddVelocity(${1:Vector_1},${2:Vector_2})" },
		{ "trigger": "AddVelocity", "contents": "AddVelocity(${1:Vector_1},${2:Vector_2})" },
		{ "trigger": "CBodyComponent_DetachFromParent", "contents": "DetachFromParent()" },
		{ "trigger": "DetachFromParent", "contents": "DetachFromParent()" },
		{ "trigger": "CBodyComponent_GetSequence", "contents": "GetSequence()" },
		{ "trigger": "GetSequence", "contents": "GetSequence()" },
		{ "trigger": "CBodyComponent_IsAttachedToParent", "contents": "IsAttachedToParent()" },
		{ "trigger": "IsAttachedToParent", "contents": "IsAttachedToParent()" },
		{ "trigger": "CBodyComponent_LookupSequence", "contents": "LookupSequence(${1:string_1})" },
		{ "trigger": "LookupSequence", "contents": "LookupSequence(${1:string_1})" },
		{ "trigger": "CBodyComponent_SequenceDuration", "contents": "SequenceDuration(${1:string_1})" },
		{ "trigger": "SequenceDuration", "contents": "SequenceDuration(${1:string_1})" },
		{ "trigger": "CBodyComponent_SetAngularVelocity", "contents": "SetAngularVelocity(${1:Vector_1})" },
		{ "trigger": "SetAngularVelocity", "contents": "SetAngularVelocity(${1:Vector_1})" },
		{ "trigger": "CBodyComponent_SetAnimation", "contents": "SetAnimation(${1:string_1})" },
		{ "trigger": "SetAnimation", "contents": "SetAnimation(${1:string_1})" },
		{ "trigger": "CBodyComponent_SetBodyGroup", "contents": "SetBodyGroup(${1:string_1})" },
		{ "trigger": "SetBodyGroup", "contents": "SetBodyGroup(${1:string_1})" },
		{ "trigger": "CBodyComponent_SetMaterialGroup", "contents": "SetMaterialGroup(${1:utlstringtoken_1})" },
		{ "trigger": "SetMaterialGroup", "contents": "SetMaterialGroup(${1:utlstringtoken_1})" },
		{ "trigger": "CBodyComponent_SetVelocity", "contents": "SetVelocity(${1:Vector_1})" },
		{ "trigger": "SetVelocity", "contents": "SetVelocity(${1:Vector_1})" },
		{ "trigger": "CustomGameEventManager_RegisterListener", "contents": "RegisterListener(${1:string EventName},${2:func CallbackFunction})" },
		{ "trigger": "RegisterListener", "contents": "RegisterListener(${1:string EventName},${2:func CallbackFunction})" },
		{ "trigger": "CustomGameEventManager_Send_ServerToAllClients", "contents": "Send_ServerToAllClients(${1:string EventName},${2:table EventData})" },
		{ "trigger": "Send_ServerToAllClients", "contents": "Send_ServerToAllClients(${1:string EventName},${2:table EventData})" },
		{ "trigger": "CustomGameEventManager_Send_ServerToPlayer", "contents": "Send_ServerToPlayer(${1:Entity Player},${2:string EventName},${3:table EventData})" },
		{ "trigger": "Send_ServerToPlayer", "contents": "Send_ServerToPlayer(${1:Entity Player},${2:string EventName},${3:table EventData})" },
		{ "trigger": "CustomGameEventManager_Send_ServerToTeam", "contents": "Send_ServerToTeam(${1:int TeamNumber},${2:string EventName},${3:table EventData})" },
		{ "trigger": "Send_ServerToTeam", "contents": "Send_ServerToTeam(${1:int TeamNumber},${2:string EventName},${3:table EventData})" },
		{ "trigger": "CustomGameEventManager_UnregisterListener", "contents": "UnregisterListener(${1:int ListnerID})" },
		{ "trigger": "UnregisterListener", "contents": "UnregisterListener(${1:int ListnerID})" },
		{ "trigger": "CustomNetTables_GetTableValue", "contents": "GetTableValue(${1:string TableName},${2:string KeyName})" },
		{ "trigger": "GetTableValue", "contents": "GetTableValue(${1:string TableName},${2:string KeyName})" },
		{ "trigger": "CustomNetTables_SetTableValue", "contents": "SetTableValue(${1:string TableName},${2:string KeyName},${3:script_table Value})" },
		{ "trigger": "SetTableValue", "contents": "SetTableValue(${1:string TableName},${2:string KeyName},${3:script_table Value})" },
		{ "trigger": "CDOTABaseAbility_CanAbilityBeUpgraded", "contents": "CanAbilityBeUpgraded()" },
		{ "trigger": "CanAbilityBeUpgraded", "contents": "CanAbilityBeUpgraded()" },
		{ "trigger": "CDOTABaseAbility_CastAbility", "contents": "CastAbility()" },
		{ "trigger": "CastAbility", "contents": "CastAbility()" },
		{ "trigger": "CDOTABaseAbility_ContinueCasting", "contents": "ContinueCasting()" },
		{ "trigger": "ContinueCasting", "contents": "ContinueCasting()" },
		{ "trigger": "CDOTABaseAbility_CreateVisibilityNode", "contents": "CreateVisibilityNode(${1:vLocation},${2:fRadius},${3:fDuration})" },
		{ "trigger": "CreateVisibilityNode", "contents": "CreateVisibilityNode(${1:vLocation},${2:fRadius},${3:fDuration})" },
		{ "trigger": "CDOTABaseAbility_DecrementModifierRefCount", "contents": "DecrementModifierRefCount()" },
		{ "trigger": "DecrementModifierRefCount", "contents": "DecrementModifierRefCount()" },
		{ "trigger": "CDOTABaseAbility_EndChannel", "contents": "EndChannel(${1:bInterrupted})" },
		{ "trigger": "EndChannel", "contents": "EndChannel(${1:bInterrupted})" },
		{ "trigger": "CDOTABaseAbility_EndCooldown", "contents": "EndCooldown()" },
		{ "trigger": "EndCooldown", "contents": "EndCooldown()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityDamage", "contents": "GetAbilityDamage()" },
		{ "trigger": "GetAbilityDamage", "contents": "GetAbilityDamage()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityDamageType", "contents": "GetAbilityDamageType()" },
		{ "trigger": "GetAbilityDamageType", "contents": "GetAbilityDamageType()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityIndex", "contents": "GetAbilityIndex()" },
		{ "trigger": "GetAbilityIndex", "contents": "GetAbilityIndex()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityKeyValues", "contents": "GetAbilityKeyValues()" },
		{ "trigger": "GetAbilityKeyValues", "contents": "GetAbilityKeyValues()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityName", "contents": "GetAbilityName()" },
		{ "trigger": "GetAbilityName", "contents": "GetAbilityName()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityTargetFlags", "contents": "GetAbilityTargetFlags()" },
		{ "trigger": "GetAbilityTargetFlags", "contents": "GetAbilityTargetFlags()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityTargetTeam", "contents": "GetAbilityTargetTeam()" },
		{ "trigger": "GetAbilityTargetTeam", "contents": "GetAbilityTargetTeam()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityTargetType", "contents": "GetAbilityTargetType()" },
		{ "trigger": "GetAbilityTargetType", "contents": "GetAbilityTargetType()" },
		{ "trigger": "CDOTABaseAbility_GetAbilityType", "contents": "GetAbilityType()" },
		{ "trigger": "GetAbilityType", "contents": "GetAbilityType()" },
		{ "trigger": "CDOTABaseAbility_GetAnimationIgnoresModelScale", "contents": "GetAnimationIgnoresModelScale()" },
		{ "trigger": "GetAnimationIgnoresModelScale", "contents": "GetAnimationIgnoresModelScale()" },
		{ "trigger": "CDOTABaseAbility_GetAssociatedPrimaryAbilities", "contents": "GetAssociatedPrimaryAbilities()" },
		{ "trigger": "GetAssociatedPrimaryAbilities", "contents": "GetAssociatedPrimaryAbilities()" },
		{ "trigger": "CDOTABaseAbility_GetAssociatedSecondaryAbilities", "contents": "GetAssociatedSecondaryAbilities()" },
		{ "trigger": "GetAssociatedSecondaryAbilities", "contents": "GetAssociatedSecondaryAbilities()" },
		{ "trigger": "CDOTABaseAbility_GetAutoCastState", "contents": "GetAutoCastState()" },
		{ "trigger": "GetAutoCastState", "contents": "GetAutoCastState()" },
		{ "trigger": "CDOTABaseAbility_GetBackswingTime", "contents": "GetBackswingTime()" },
		{ "trigger": "GetBackswingTime", "contents": "GetBackswingTime()" },
		{ "trigger": "CDOTABaseAbility_GetBehavior", "contents": "GetBehavior()" },
		{ "trigger": "GetBehavior", "contents": "GetBehavior()" },
		{ "trigger": "CDOTABaseAbility_GetCastPoint", "contents": "GetCastPoint()" },
		{ "trigger": "GetCastPoint", "contents": "GetCastPoint()" },
		{ "trigger": "CDOTABaseAbility_GetCastRange", "contents": "GetCastRange(${1:vLocation},${2:hTarget})" },
		{ "trigger": "GetCastRange", "contents": "GetCastRange(${1:vLocation},${2:hTarget})" },
		{ "trigger": "CDOTABaseAbility_GetCaster", "contents": "GetCaster()" },
		{ "trigger": "GetCaster", "contents": "GetCaster()" },
		{ "trigger": "CDOTABaseAbility_GetChannelStartTime", "contents": "GetChannelStartTime()" },
		{ "trigger": "GetChannelStartTime", "contents": "GetChannelStartTime()" },
		{ "trigger": "CDOTABaseAbility_GetChannelTime", "contents": "GetChannelTime()" },
		{ "trigger": "GetChannelTime", "contents": "GetChannelTime()" },
		{ "trigger": "CDOTABaseAbility_GetChannelledManaCostPerSecond", "contents": "GetChannelledManaCostPerSecond(${1:iLevel})" },
		{ "trigger": "GetChannelledManaCostPerSecond", "contents": "GetChannelledManaCostPerSecond(${1:iLevel})" },
		{ "trigger": "CDOTABaseAbility_GetCloneSource", "contents": "GetCloneSource()" },
		{ "trigger": "GetCloneSource", "contents": "GetCloneSource()" },
		{ "trigger": "CDOTABaseAbility_GetConceptRecipientType", "contents": "GetConceptRecipientType()" },
		{ "trigger": "GetConceptRecipientType", "contents": "GetConceptRecipientType()" },
		{ "trigger": "CDOTABaseAbility_GetCooldown", "contents": "GetCooldown(${1:iLevel})" },
		{ "trigger": "GetCooldown", "contents": "GetCooldown(${1:iLevel})" },
		{ "trigger": "CDOTABaseAbility_GetCooldownTime", "contents": "GetCooldownTime()" },
		{ "trigger": "GetCooldownTime", "contents": "GetCooldownTime()" },
		{ "trigger": "CDOTABaseAbility_GetCooldownTimeRemaining", "contents": "GetCooldownTimeRemaining()" },
		{ "trigger": "GetCooldownTimeRemaining", "contents": "GetCooldownTimeRemaining()" },
		{ "trigger": "CDOTABaseAbility_GetCursorPosition", "contents": "GetCursorPosition()" },
		{ "trigger": "GetCursorPosition", "contents": "GetCursorPosition()" },
		{ "trigger": "CDOTABaseAbility_GetCursorTarget", "contents": "GetCursorTarget()" },
		{ "trigger": "GetCursorTarget", "contents": "GetCursorTarget()" },
		{ "trigger": "CDOTABaseAbility_GetCursorTargetingNothing", "contents": "GetCursorTargetingNothing()" },
		{ "trigger": "GetCursorTargetingNothing", "contents": "GetCursorTargetingNothing()" },
		{ "trigger": "CDOTABaseAbility_GetDuration", "contents": "GetDuration()" },
		{ "trigger": "GetDuration", "contents": "GetDuration()" },
		{ "trigger": "CDOTABaseAbility_GetGoldCost", "contents": "GetGoldCost(${1:iLevel})" },
		{ "trigger": "GetGoldCost", "contents": "GetGoldCost(${1:iLevel})" },
		{ "trigger": "CDOTABaseAbility_GetGoldCostForUpgrade", "contents": "GetGoldCostForUpgrade(${1:iLevel})" },
		{ "trigger": "GetGoldCostForUpgrade", "contents": "GetGoldCostForUpgrade(${1:iLevel})" },
		{ "trigger": "CDOTABaseAbility_GetHeroLevelRequiredToUpgrade", "contents": "GetHeroLevelRequiredToUpgrade()" },
		{ "trigger": "GetHeroLevelRequiredToUpgrade", "contents": "GetHeroLevelRequiredToUpgrade()" },
		{ "trigger": "CDOTABaseAbility_GetIntrinsicModifierName", "contents": "GetIntrinsicModifierName()" },
		{ "trigger": "GetIntrinsicModifierName", "contents": "GetIntrinsicModifierName()" },
		{ "trigger": "CDOTABaseAbility_GetLevel", "contents": "GetLevel()" },
		{ "trigger": "GetLevel", "contents": "GetLevel()" },
		{ "trigger": "CDOTABaseAbility_GetLevelSpecialValueFor", "contents": "GetLevelSpecialValueFor(${1:szName},${2:nLevel})" },
		{ "trigger": "GetLevelSpecialValueFor", "contents": "GetLevelSpecialValueFor(${1:szName},${2:nLevel})" },
		{ "trigger": "CDOTABaseAbility_GetManaCost", "contents": "GetManaCost(${1:iLevel})" },
		{ "trigger": "GetManaCost", "contents": "GetManaCost(${1:iLevel})" },
		{ "trigger": "CDOTABaseAbility_GetMaxLevel", "contents": "GetMaxLevel()" },
		{ "trigger": "GetMaxLevel", "contents": "GetMaxLevel()" },
		{ "trigger": "CDOTABaseAbility_GetModifierValue", "contents": "GetModifierValue()" },
		{ "trigger": "GetModifierValue", "contents": "GetModifierValue()" },
		{ "trigger": "CDOTABaseAbility_GetModifierValueBonus", "contents": "GetModifierValueBonus()" },
		{ "trigger": "GetModifierValueBonus", "contents": "GetModifierValueBonus()" },
		{ "trigger": "CDOTABaseAbility_GetPlaybackRateOverride", "contents": "GetPlaybackRateOverride()" },
		{ "trigger": "GetPlaybackRateOverride", "contents": "GetPlaybackRateOverride()" },
		{ "trigger": "CDOTABaseAbility_GetSharedCooldownName", "contents": "GetSharedCooldownName()" },
		{ "trigger": "GetSharedCooldownName", "contents": "GetSharedCooldownName()" },
		{ "trigger": "CDOTABaseAbility_GetSpecialValueFor", "contents": "GetSpecialValueFor(${1:szName})" },
		{ "trigger": "GetSpecialValueFor", "contents": "GetSpecialValueFor(${1:szName})" },
		{ "trigger": "CDOTABaseAbility_GetStolenActivityModifier", "contents": "GetStolenActivityModifier()" },
		{ "trigger": "GetStolenActivityModifier", "contents": "GetStolenActivityModifier()" },
		{ "trigger": "CDOTABaseAbility_GetToggleState", "contents": "GetToggleState()" },
		{ "trigger": "GetToggleState", "contents": "GetToggleState()" },
		{ "trigger": "CDOTABaseAbility_HeroXPChange", "contents": "HeroXPChange(${1:flXP})" },
		{ "trigger": "HeroXPChange", "contents": "HeroXPChange(${1:flXP})" },
		{ "trigger": "CDOTABaseAbility_IncrementModifierRefCount", "contents": "IncrementModifierRefCount()" },
		{ "trigger": "IncrementModifierRefCount", "contents": "IncrementModifierRefCount()" },
		{ "trigger": "CDOTABaseAbility_IsActivated", "contents": "IsActivated()" },
		{ "trigger": "IsActivated", "contents": "IsActivated()" },
		{ "trigger": "CDOTABaseAbility_IsAttributeBonus", "contents": "IsAttributeBonus()" },
		{ "trigger": "IsAttributeBonus", "contents": "IsAttributeBonus()" },
		{ "trigger": "CDOTABaseAbility_IsChanneling", "contents": "IsChanneling()" },
		{ "trigger": "IsChanneling", "contents": "IsChanneling()" },
		{ "trigger": "CDOTABaseAbility_IsCooldownReady", "contents": "IsCooldownReady()" },
		{ "trigger": "IsCooldownReady", "contents": "IsCooldownReady()" },
		{ "trigger": "CDOTABaseAbility_IsCosmetic", "contents": "IsCosmetic(${1:hEntity})" },
		{ "trigger": "IsCosmetic", "contents": "IsCosmetic(${1:hEntity})" },
		{ "trigger": "CDOTABaseAbility_IsFullyCastable", "contents": "IsFullyCastable()" },
		{ "trigger": "IsFullyCastable", "contents": "IsFullyCastable()" },
		{ "trigger": "CDOTABaseAbility_IsHidden", "contents": "IsHidden()" },
		{ "trigger": "IsHidden", "contents": "IsHidden()" },
		{ "trigger": "CDOTABaseAbility_IsHiddenWhenStolen", "contents": "IsHiddenWhenStolen()" },
		{ "trigger": "IsHiddenWhenStolen", "contents": "IsHiddenWhenStolen()" },
		{ "trigger": "CDOTABaseAbility_IsInAbilityPhase", "contents": "IsInAbilityPhase()" },
		{ "trigger": "IsInAbilityPhase", "contents": "IsInAbilityPhase()" },
		{ "trigger": "CDOTABaseAbility_IsItem", "contents": "IsItem()" },
		{ "trigger": "IsItem", "contents": "IsItem()" },
		{ "trigger": "CDOTABaseAbility_IsOwnersGoldEnough", "contents": "IsOwnersGoldEnough(${1:nIssuerPlayerID})" },
		{ "trigger": "IsOwnersGoldEnough", "contents": "IsOwnersGoldEnough(${1:nIssuerPlayerID})" },
		{ "trigger": "CDOTABaseAbility_IsOwnersGoldEnoughForUpgrade", "contents": "IsOwnersGoldEnoughForUpgrade()" },
		{ "trigger": "IsOwnersGoldEnoughForUpgrade", "contents": "IsOwnersGoldEnoughForUpgrade()" },
		{ "trigger": "CDOTABaseAbility_IsOwnersManaEnough", "contents": "IsOwnersManaEnough()" },
		{ "trigger": "IsOwnersManaEnough", "contents": "IsOwnersManaEnough()" },
		{ "trigger": "CDOTABaseAbility_IsPassive", "contents": "IsPassive()" },
		{ "trigger": "IsPassive", "contents": "IsPassive()" },
		{ "trigger": "CDOTABaseAbility_IsSharedWithTeammates", "contents": "IsSharedWithTeammates()" },
		{ "trigger": "IsSharedWithTeammates", "contents": "IsSharedWithTeammates()" },
		{ "trigger": "CDOTABaseAbility_IsStealable", "contents": "IsStealable()" },
		{ "trigger": "IsStealable", "contents": "IsStealable()" },
		{ "trigger": "CDOTABaseAbility_IsStolen", "contents": "IsStolen()" },
		{ "trigger": "IsStolen", "contents": "IsStolen()" },
		{ "trigger": "CDOTABaseAbility_IsToggle", "contents": "IsToggle()" },
		{ "trigger": "IsToggle", "contents": "IsToggle()" },
		{ "trigger": "CDOTABaseAbility_IsTrained", "contents": "IsTrained()" },
		{ "trigger": "IsTrained", "contents": "IsTrained()" },
		{ "trigger": "CDOTABaseAbility_MarkAbilityButtonDirty", "contents": "MarkAbilityButtonDirty()" },
		{ "trigger": "MarkAbilityButtonDirty", "contents": "MarkAbilityButtonDirty()" },
		{ "trigger": "CDOTABaseAbility_NumModifiersUsingAbility", "contents": "NumModifiersUsingAbility()" },
		{ "trigger": "NumModifiersUsingAbility", "contents": "NumModifiersUsingAbility()" },
		{ "trigger": "CDOTABaseAbility_OnAbilityPhaseInterrupted", "contents": "OnAbilityPhaseInterrupted()" },
		{ "trigger": "OnAbilityPhaseInterrupted", "contents": "OnAbilityPhaseInterrupted()" },
		{ "trigger": "CDOTABaseAbility_OnAbilityPhaseStart", "contents": "OnAbilityPhaseStart()" },
		{ "trigger": "OnAbilityPhaseStart", "contents": "OnAbilityPhaseStart()" },
		{ "trigger": "CDOTABaseAbility_OnAbilityPinged", "contents": "OnAbilityPinged(${1:nPlayerID})" },
		{ "trigger": "OnAbilityPinged", "contents": "OnAbilityPinged(${1:nPlayerID})" },
		{ "trigger": "CDOTABaseAbility_OnChannelFinish", "contents": "OnChannelFinish(${1:bInterrupted})" },
		{ "trigger": "OnChannelFinish", "contents": "OnChannelFinish(${1:bInterrupted})" },
		{ "trigger": "CDOTABaseAbility_OnChannelThink", "contents": "OnChannelThink(${1:flInterval})" },
		{ "trigger": "OnChannelThink", "contents": "OnChannelThink(${1:flInterval})" },
		{ "trigger": "CDOTABaseAbility_OnHeroCalculateStatBonus", "contents": "OnHeroCalculateStatBonus()" },
		{ "trigger": "OnHeroCalculateStatBonus", "contents": "OnHeroCalculateStatBonus()" },
		{ "trigger": "CDOTABaseAbility_OnHeroLevelUp", "contents": "OnHeroLevelUp()" },
		{ "trigger": "OnHeroLevelUp", "contents": "OnHeroLevelUp()" },
		{ "trigger": "CDOTABaseAbility_OnOwnerDied", "contents": "OnOwnerDied()" },
		{ "trigger": "OnOwnerDied", "contents": "OnOwnerDied()" },
		{ "trigger": "CDOTABaseAbility_OnOwnerSpawned", "contents": "OnOwnerSpawned()" },
		{ "trigger": "OnOwnerSpawned", "contents": "OnOwnerSpawned()" },
		{ "trigger": "CDOTABaseAbility_OnSpellStart", "contents": "OnSpellStart()" },
		{ "trigger": "OnSpellStart", "contents": "OnSpellStart()" },
		{ "trigger": "CDOTABaseAbility_OnToggle", "contents": "OnToggle()" },
		{ "trigger": "OnToggle", "contents": "OnToggle()" },
		{ "trigger": "CDOTABaseAbility_OnUpgrade", "contents": "OnUpgrade()" },
		{ "trigger": "OnUpgrade", "contents": "OnUpgrade()" },
		{ "trigger": "CDOTABaseAbility_PayGoldCost", "contents": "PayGoldCost()" },
		{ "trigger": "PayGoldCost", "contents": "PayGoldCost()" },
		{ "trigger": "CDOTABaseAbility_PayGoldCostForUpgrade", "contents": "PayGoldCostForUpgrade()" },
		{ "trigger": "PayGoldCostForUpgrade", "contents": "PayGoldCostForUpgrade()" },
		{ "trigger": "CDOTABaseAbility_PayManaCost", "contents": "PayManaCost()" },
		{ "trigger": "PayManaCost", "contents": "PayManaCost()" },
		{ "trigger": "CDOTABaseAbility_PlaysDefaultAnimWhenStolen", "contents": "PlaysDefaultAnimWhenStolen()" },
		{ "trigger": "PlaysDefaultAnimWhenStolen", "contents": "PlaysDefaultAnimWhenStolen()" },
		{ "trigger": "CDOTABaseAbility_ProcsMagicStick", "contents": "ProcsMagicStick()" },
		{ "trigger": "ProcsMagicStick", "contents": "ProcsMagicStick()" },
		{ "trigger": "CDOTABaseAbility_RefCountsModifiers", "contents": "RefCountsModifiers()" },
		{ "trigger": "RefCountsModifiers", "contents": "RefCountsModifiers()" },
		{ "trigger": "CDOTABaseAbility_RefundManaCost", "contents": "RefundManaCost()" },
		{ "trigger": "RefundManaCost", "contents": "RefundManaCost()" },
		{ "trigger": "CDOTABaseAbility_ResetToggleOnRespawn", "contents": "ResetToggleOnRespawn()" },
		{ "trigger": "ResetToggleOnRespawn", "contents": "ResetToggleOnRespawn()" },
		{ "trigger": "CDOTABaseAbility_SetAbilityIndex", "contents": "SetAbilityIndex(${1:iIndex})" },
		{ "trigger": "SetAbilityIndex", "contents": "SetAbilityIndex(${1:iIndex})" },
		{ "trigger": "CDOTABaseAbility_SetActivated", "contents": "SetActivated(${1:bActivated})" },
		{ "trigger": "SetActivated", "contents": "SetActivated(${1:bActivated})" },
		{ "trigger": "CDOTABaseAbility_SetChanneling", "contents": "SetChanneling(${1:bChanneling})" },
		{ "trigger": "SetChanneling", "contents": "SetChanneling(${1:bChanneling})" },
		{ "trigger": "CDOTABaseAbility_SetHidden", "contents": "SetHidden(${1:bHidden})" },
		{ "trigger": "SetHidden", "contents": "SetHidden(${1:bHidden})" },
		{ "trigger": "CDOTABaseAbility_SetInAbilityPhase", "contents": "SetInAbilityPhase(${1:bInAbilityPhase})" },
		{ "trigger": "SetInAbilityPhase", "contents": "SetInAbilityPhase(${1:bInAbilityPhase})" },
		{ "trigger": "CDOTABaseAbility_SetLevel", "contents": "SetLevel(${1:iLevel})" },
		{ "trigger": "SetLevel", "contents": "SetLevel(${1:iLevel})" },
		{ "trigger": "CDOTABaseAbility_SetOverrideCastPoint", "contents": "SetOverrideCastPoint(${1:flCastPoint})" },
		{ "trigger": "SetOverrideCastPoint", "contents": "SetOverrideCastPoint(${1:flCastPoint})" },
		{ "trigger": "CDOTABaseAbility_SetRefCountsModifiers", "contents": "SetRefCountsModifiers(${1:bRefCounts})" },
		{ "trigger": "SetRefCountsModifiers", "contents": "SetRefCountsModifiers(${1:bRefCounts})" },
		{ "trigger": "CDOTABaseAbility_SetStolen", "contents": "SetStolen(${1:bStolen})" },
		{ "trigger": "SetStolen", "contents": "SetStolen(${1:bStolen})" },
		{ "trigger": "CDOTABaseAbility_ShouldUseResources", "contents": "ShouldUseResources()" },
		{ "trigger": "ShouldUseResources", "contents": "ShouldUseResources()" },
		{ "trigger": "CDOTABaseAbility_SpeakAbilityConcept", "contents": "SpeakAbilityConcept(${1:iConcept})" },
		{ "trigger": "SpeakAbilityConcept", "contents": "SpeakAbilityConcept(${1:iConcept})" },
		{ "trigger": "CDOTABaseAbility_SpeakTrigger", "contents": "SpeakTrigger()" },
		{ "trigger": "SpeakTrigger", "contents": "SpeakTrigger()" },
		{ "trigger": "CDOTABaseAbility_StartCooldown", "contents": "StartCooldown(${1:flCooldown})" },
		{ "trigger": "StartCooldown", "contents": "StartCooldown(${1:flCooldown})" },
		{ "trigger": "CDOTABaseAbility_ToggleAbility", "contents": "ToggleAbility()" },
		{ "trigger": "ToggleAbility", "contents": "ToggleAbility()" },
		{ "trigger": "CDOTABaseAbility_ToggleAutoCast", "contents": "ToggleAutoCast()" },
		{ "trigger": "ToggleAutoCast", "contents": "ToggleAutoCast()" },
		{ "trigger": "CDOTABaseAbility_UpgradeAbility", "contents": "UpgradeAbility(${1:bSupressSpeech})" },
		{ "trigger": "UpgradeAbility", "contents": "UpgradeAbility(${1:bSupressSpeech})" },
		{ "trigger": "CDOTABaseAbility_UseResources", "contents": "UseResources(${1:bMana},${2:bGold},${3:bCooldown})" },
		{ "trigger": "UseResources", "contents": "UseResources(${1:bMana},${2:bGold},${3:bCooldown})" },
		{ "trigger": "CDOTABaseGameMode_ClearBountyRunePickupFilter", "contents": "ClearBountyRunePickupFilter()" },
		{ "trigger": "ClearBountyRunePickupFilter", "contents": "ClearBountyRunePickupFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearDamageFilter", "contents": "ClearDamageFilter()" },
		{ "trigger": "ClearDamageFilter", "contents": "ClearDamageFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearExecuteOrderFilter", "contents": "ClearExecuteOrderFilter()" },
		{ "trigger": "ClearExecuteOrderFilter", "contents": "ClearExecuteOrderFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearItemAddedToInventoryFilter", "contents": "ClearItemAddedToInventoryFilter()" },
		{ "trigger": "ClearItemAddedToInventoryFilter", "contents": "ClearItemAddedToInventoryFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearModifierGainedFilter", "contents": "ClearModifierGainedFilter()" },
		{ "trigger": "ClearModifierGainedFilter", "contents": "ClearModifierGainedFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearModifyExperienceFilter", "contents": "ClearModifyExperienceFilter()" },
		{ "trigger": "ClearModifyExperienceFilter", "contents": "ClearModifyExperienceFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearModifyGoldFilter", "contents": "ClearModifyGoldFilter()" },
		{ "trigger": "ClearModifyGoldFilter", "contents": "ClearModifyGoldFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearRuneSpawnFilter", "contents": "ClearRuneSpawnFilter()" },
		{ "trigger": "ClearRuneSpawnFilter", "contents": "ClearRuneSpawnFilter()" },
		{ "trigger": "CDOTABaseGameMode_ClearTrackingProjectileFilter", "contents": "ClearTrackingProjectileFilter()" },
		{ "trigger": "ClearTrackingProjectileFilter", "contents": "ClearTrackingProjectileFilter()" },
		{ "trigger": "CDOTABaseGameMode_GetAlwaysShowPlayerInventory", "contents": "GetAlwaysShowPlayerInventory()" },
		{ "trigger": "GetAlwaysShowPlayerInventory", "contents": "GetAlwaysShowPlayerInventory()" },
		{ "trigger": "CDOTABaseGameMode_GetAlwaysShowPlayerNames", "contents": "GetAlwaysShowPlayerNames()" },
		{ "trigger": "GetAlwaysShowPlayerNames", "contents": "GetAlwaysShowPlayerNames()" },
		{ "trigger": "CDOTABaseGameMode_GetAnnouncerDisabled", "contents": "GetAnnouncerDisabled()" },
		{ "trigger": "GetAnnouncerDisabled", "contents": "GetAnnouncerDisabled()" },
		{ "trigger": "CDOTABaseGameMode_GetCameraDistanceOverride", "contents": "GetCameraDistanceOverride()" },
		{ "trigger": "GetCameraDistanceOverride", "contents": "GetCameraDistanceOverride()" },
		{ "trigger": "CDOTABaseGameMode_GetCustomBuybackCooldownEnabled", "contents": "GetCustomBuybackCooldownEnabled()" },
		{ "trigger": "GetCustomBuybackCooldownEnabled", "contents": "GetCustomBuybackCooldownEnabled()" },
		{ "trigger": "CDOTABaseGameMode_GetCustomBuybackCostEnabled", "contents": "GetCustomBuybackCostEnabled()" },
		{ "trigger": "GetCustomBuybackCostEnabled", "contents": "GetCustomBuybackCostEnabled()" },
		{ "trigger": "CDOTABaseGameMode_GetCustomHeroMaxLevel", "contents": "GetCustomHeroMaxLevel()" },
		{ "trigger": "GetCustomHeroMaxLevel", "contents": "GetCustomHeroMaxLevel()" },
		{ "trigger": "CDOTABaseGameMode_GetFixedRespawnTime", "contents": "GetFixedRespawnTime()" },
		{ "trigger": "GetFixedRespawnTime", "contents": "GetFixedRespawnTime()" },
		{ "trigger": "CDOTABaseGameMode_GetFogOfWarDisabled", "contents": "GetFogOfWarDisabled()" },
		{ "trigger": "GetFogOfWarDisabled", "contents": "GetFogOfWarDisabled()" },
		{ "trigger": "CDOTABaseGameMode_GetGoldSoundDisabled", "contents": "GetGoldSoundDisabled()" },
		{ "trigger": "GetGoldSoundDisabled", "contents": "GetGoldSoundDisabled()" },
		{ "trigger": "CDOTABaseGameMode_GetMaximumAttackSpeed", "contents": "GetMaximumAttackSpeed()" },
		{ "trigger": "GetMaximumAttackSpeed", "contents": "GetMaximumAttackSpeed()" },
		{ "trigger": "CDOTABaseGameMode_GetMinimumAttackSpeed", "contents": "GetMinimumAttackSpeed()" },
		{ "trigger": "GetMinimumAttackSpeed", "contents": "GetMinimumAttackSpeed()" },
		{ "trigger": "CDOTABaseGameMode_GetRecommendedItemsDisabled", "contents": "GetRecommendedItemsDisabled()" },
		{ "trigger": "GetRecommendedItemsDisabled", "contents": "GetRecommendedItemsDisabled()" },
		{ "trigger": "CDOTABaseGameMode_GetStashPurchasingDisabled", "contents": "GetStashPurchasingDisabled()" },
		{ "trigger": "GetStashPurchasingDisabled", "contents": "GetStashPurchasingDisabled()" },
		{ "trigger": "CDOTABaseGameMode_GetStickyItemDisabled", "contents": "GetStickyItemDisabled()" },
		{ "trigger": "GetStickyItemDisabled", "contents": "GetStickyItemDisabled()" },
		{ "trigger": "CDOTABaseGameMode_GetTopBarTeamValuesOverride", "contents": "GetTopBarTeamValuesOverride()" },
		{ "trigger": "GetTopBarTeamValuesOverride", "contents": "GetTopBarTeamValuesOverride()" },
		{ "trigger": "CDOTABaseGameMode_GetTopBarTeamValuesVisible", "contents": "GetTopBarTeamValuesVisible()" },
		{ "trigger": "GetTopBarTeamValuesVisible", "contents": "GetTopBarTeamValuesVisible()" },
		{ "trigger": "CDOTABaseGameMode_GetTowerBackdoorProtectionEnabled", "contents": "GetTowerBackdoorProtectionEnabled()" },
		{ "trigger": "GetTowerBackdoorProtectionEnabled", "contents": "GetTowerBackdoorProtectionEnabled()" },
		{ "trigger": "CDOTABaseGameMode_GetUseCustomHeroLevels", "contents": "GetUseCustomHeroLevels()" },
		{ "trigger": "GetUseCustomHeroLevels", "contents": "GetUseCustomHeroLevels()" },
		{ "trigger": "CDOTABaseGameMode_IsBuybackEnabled", "contents": "IsBuybackEnabled()" },
		{ "trigger": "IsBuybackEnabled", "contents": "IsBuybackEnabled()" },
		{ "trigger": "CDOTABaseGameMode_IsDaynightCycleDisabled", "contents": "IsDaynightCycleDisabled()" },
		{ "trigger": "IsDaynightCycleDisabled", "contents": "IsDaynightCycleDisabled()" },
		{ "trigger": "CDOTABaseGameMode_SetAbilityTuningValueFilter", "contents": "SetAbilityTuningValueFilter(${1:Modify the table and Return true to use new values},${2:return false to use the old values})" },
		{ "trigger": "SetAbilityTuningValueFilter", "contents": "SetAbilityTuningValueFilter(${1:Modify the table and Return true to use new values},${2:return false to use the old values})" },
		{ "trigger": "CDOTABaseGameMode_SetAlwaysShowPlayerInventory", "contents": "SetAlwaysShowPlayerInventory(${1:bAlwaysShow})" },
		{ "trigger": "SetAlwaysShowPlayerInventory", "contents": "SetAlwaysShowPlayerInventory(${1:bAlwaysShow})" },
		{ "trigger": "CDOTABaseGameMode_SetAlwaysShowPlayerNames", "contents": "SetAlwaysShowPlayerNames(${1:bEnabled})" },
		{ "trigger": "SetAlwaysShowPlayerNames", "contents": "SetAlwaysShowPlayerNames(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetAnnouncerDisabled", "contents": "SetAnnouncerDisabled(${1:bDisabled})" },
		{ "trigger": "SetAnnouncerDisabled", "contents": "SetAnnouncerDisabled(${1:bDisabled})" },
		{ "trigger": "CDOTABaseGameMode_SetBotThinkingEnabled", "contents": "SetBotThinkingEnabled(${1:bEnabled})" },
		{ "trigger": "SetBotThinkingEnabled", "contents": "SetBotThinkingEnabled(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetBotsAlwaysPushWithHuman", "contents": "SetBotsAlwaysPushWithHuman(${1:bAlwaysPush})" },
		{ "trigger": "SetBotsAlwaysPushWithHuman", "contents": "SetBotsAlwaysPushWithHuman(${1:bAlwaysPush})" },
		{ "trigger": "CDOTABaseGameMode_SetBotsInLateGame", "contents": "SetBotsInLateGame(${1:bLateGame})" },
		{ "trigger": "SetBotsInLateGame", "contents": "SetBotsInLateGame(${1:bLateGame})" },
		{ "trigger": "CDOTABaseGameMode_SetBotsMaxPushTier", "contents": "SetBotsMaxPushTier(${1:-1 to disable})" },
		{ "trigger": "SetBotsMaxPushTier", "contents": "SetBotsMaxPushTier(${1:-1 to disable})" },
		{ "trigger": "CDOTABaseGameMode_SetBountyRunePickupFilter", "contents": "SetBountyRunePickupFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "SetBountyRunePickupFilter", "contents": "SetBountyRunePickupFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "CDOTABaseGameMode_SetBuybackEnabled", "contents": "SetBuybackEnabled(${1:bEnabled})" },
		{ "trigger": "SetBuybackEnabled", "contents": "SetBuybackEnabled(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetCameraDistanceOverride", "contents": "SetCameraDistanceOverride(${1:flCameraDistanceOverride})" },
		{ "trigger": "SetCameraDistanceOverride", "contents": "SetCameraDistanceOverride(${1:flCameraDistanceOverride})" },
		{ "trigger": "CDOTABaseGameMode_SetCustomBuybackCooldownEnabled", "contents": "SetCustomBuybackCooldownEnabled(${1:bEnabled})" },
		{ "trigger": "SetCustomBuybackCooldownEnabled", "contents": "SetCustomBuybackCooldownEnabled(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetCustomBuybackCostEnabled", "contents": "SetCustomBuybackCostEnabled(${1:bEnabled})" },
		{ "trigger": "SetCustomBuybackCostEnabled", "contents": "SetCustomBuybackCostEnabled(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetCustomGameForceHero", "contents": "SetCustomGameForceHero(${1:pHeroName})" },
		{ "trigger": "SetCustomGameForceHero", "contents": "SetCustomGameForceHero(${1:pHeroName})" },
		{ "trigger": "CDOTABaseGameMode_SetCustomHeroMaxLevel", "contents": "SetCustomHeroMaxLevel(${1:default is 25})" },
		{ "trigger": "SetCustomHeroMaxLevel", "contents": "SetCustomHeroMaxLevel(${1:default is 25})" },
		{ "trigger": "CDOTABaseGameMode_SetCustomXPRequiredToReachNextLevel", "contents": "SetCustomXPRequiredToReachNextLevel(${1:hTable})" },
		{ "trigger": "SetCustomXPRequiredToReachNextLevel", "contents": "SetCustomXPRequiredToReachNextLevel(${1:hTable})" },
		{ "trigger": "CDOTABaseGameMode_SetDamageFilter", "contents": "SetDamageFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "SetDamageFilter", "contents": "SetDamageFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "CDOTABaseGameMode_SetDaynightCycleDisabled", "contents": "SetDaynightCycleDisabled(${1:bDisable})" },
		{ "trigger": "SetDaynightCycleDisabled", "contents": "SetDaynightCycleDisabled(${1:bDisable})" },
		{ "trigger": "CDOTABaseGameMode_SetExecuteOrderFilter", "contents": "SetExecuteOrderFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "SetExecuteOrderFilter", "contents": "SetExecuteOrderFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "CDOTABaseGameMode_SetFixedRespawnTime", "contents": "SetFixedRespawnTime(${1:flFixedRespawnTime})" },
		{ "trigger": "SetFixedRespawnTime", "contents": "SetFixedRespawnTime(${1:flFixedRespawnTime})" },
		{ "trigger": "CDOTABaseGameMode_SetFogOfWarDisabled", "contents": "SetFogOfWarDisabled(${1:bDisabled})" },
		{ "trigger": "SetFogOfWarDisabled", "contents": "SetFogOfWarDisabled(${1:bDisabled})" },
		{ "trigger": "CDOTABaseGameMode_SetFountainConstantManaRegen", "contents": "SetFountainConstantManaRegen(${1:-1 for default})" },
		{ "trigger": "SetFountainConstantManaRegen", "contents": "SetFountainConstantManaRegen(${1:-1 for default})" },
		{ "trigger": "CDOTABaseGameMode_SetFountainPercentageHealthRegen", "contents": "SetFountainPercentageHealthRegen(${1:-1 for default})" },
		{ "trigger": "SetFountainPercentageHealthRegen", "contents": "SetFountainPercentageHealthRegen(${1:-1 for default})" },
		{ "trigger": "CDOTABaseGameMode_SetFountainPercentageManaRegen", "contents": "SetFountainPercentageManaRegen(${1:-1 for default})" },
		{ "trigger": "SetFountainPercentageManaRegen", "contents": "SetFountainPercentageManaRegen(${1:-1 for default})" },
		{ "trigger": "CDOTABaseGameMode_SetGoldSoundDisabled", "contents": "SetGoldSoundDisabled(${1:bDisabled})" },
		{ "trigger": "SetGoldSoundDisabled", "contents": "SetGoldSoundDisabled(${1:bDisabled})" },
		{ "trigger": "CDOTABaseGameMode_SetHUDVisible", "contents": "SetHUDVisible(${1:iHUDElement},${2:bVisible})" },
		{ "trigger": "SetHUDVisible", "contents": "SetHUDVisible(${1:iHUDElement},${2:bVisible})" },
		{ "trigger": "CDOTABaseGameMode_SetItemAddedToInventoryFilter", "contents": "SetItemAddedToInventoryFilter(${1:hFunction},${2:hContext})" },
		{ "trigger": "SetItemAddedToInventoryFilter", "contents": "SetItemAddedToInventoryFilter(${1:hFunction},${2:hContext})" },
		{ "trigger": "CDOTABaseGameMode_SetKillingSpreeAnnouncerDisabled", "contents": "SetKillingSpreeAnnouncerDisabled(${1:bDisabled})" },
		{ "trigger": "SetKillingSpreeAnnouncerDisabled", "contents": "SetKillingSpreeAnnouncerDisabled(${1:bDisabled})" },
		{ "trigger": "CDOTABaseGameMode_SetLoseGoldOnDeath", "contents": "SetLoseGoldOnDeath(${1:bEnabled})" },
		{ "trigger": "SetLoseGoldOnDeath", "contents": "SetLoseGoldOnDeath(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetMaximumAttackSpeed", "contents": "SetMaximumAttackSpeed(${1:nMaxSpeed})" },
		{ "trigger": "SetMaximumAttackSpeed", "contents": "SetMaximumAttackSpeed(${1:nMaxSpeed})" },
		{ "trigger": "CDOTABaseGameMode_SetMinimumAttackSpeed", "contents": "SetMinimumAttackSpeed(${1:nMinSpeed})" },
		{ "trigger": "SetMinimumAttackSpeed", "contents": "SetMinimumAttackSpeed(${1:nMinSpeed})" },
		{ "trigger": "CDOTABaseGameMode_SetModifierGainedFilter", "contents": "SetModifierGainedFilter(${1:hFunction},${2:hContext})" },
		{ "trigger": "SetModifierGainedFilter", "contents": "SetModifierGainedFilter(${1:hFunction},${2:hContext})" },
		{ "trigger": "CDOTABaseGameMode_SetModifyExperienceFilter", "contents": "SetModifyExperienceFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "SetModifyExperienceFilter", "contents": "SetModifyExperienceFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "CDOTABaseGameMode_SetModifyGoldFilter", "contents": "SetModifyGoldFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "SetModifyGoldFilter", "contents": "SetModifyGoldFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "CDOTABaseGameMode_SetOverrideSelectionEntity", "contents": "SetOverrideSelectionEntity(${1:hOverrideEntity})" },
		{ "trigger": "SetOverrideSelectionEntity", "contents": "SetOverrideSelectionEntity(${1:hOverrideEntity})" },
		{ "trigger": "CDOTABaseGameMode_SetRecommendedItemsDisabled", "contents": "SetRecommendedItemsDisabled(${1:bDisabled})" },
		{ "trigger": "SetRecommendedItemsDisabled", "contents": "SetRecommendedItemsDisabled(${1:bDisabled})" },
		{ "trigger": "CDOTABaseGameMode_SetRemoveIllusionsOnDeath", "contents": "SetRemoveIllusionsOnDeath(${1:bRemove})" },
		{ "trigger": "SetRemoveIllusionsOnDeath", "contents": "SetRemoveIllusionsOnDeath(${1:bRemove})" },
		{ "trigger": "CDOTABaseGameMode_SetRuneEnabled", "contents": "SetRuneEnabled(${1:nRune},${2:bEnabled})" },
		{ "trigger": "SetRuneEnabled", "contents": "SetRuneEnabled(${1:nRune},${2:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetRuneSpawnFilter", "contents": "SetRuneSpawnFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "SetRuneSpawnFilter", "contents": "SetRuneSpawnFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "CDOTABaseGameMode_SetStashPurchasingDisabled", "contents": "SetStashPurchasingDisabled(${1:bDisabled})" },
		{ "trigger": "SetStashPurchasingDisabled", "contents": "SetStashPurchasingDisabled(${1:bDisabled})" },
		{ "trigger": "CDOTABaseGameMode_SetStickyItemDisabled", "contents": "SetStickyItemDisabled(${1:bDisabled})" },
		{ "trigger": "SetStickyItemDisabled", "contents": "SetStickyItemDisabled(${1:bDisabled})" },
		{ "trigger": "CDOTABaseGameMode_SetTopBarTeamValue", "contents": "SetTopBarTeamValue(${1:iTeam},${2:nValue})" },
		{ "trigger": "SetTopBarTeamValue", "contents": "SetTopBarTeamValue(${1:iTeam},${2:nValue})" },
		{ "trigger": "CDOTABaseGameMode_SetTopBarTeamValuesOverride", "contents": "SetTopBarTeamValuesOverride(${1:bOverride})" },
		{ "trigger": "SetTopBarTeamValuesOverride", "contents": "SetTopBarTeamValuesOverride(${1:bOverride})" },
		{ "trigger": "CDOTABaseGameMode_SetTopBarTeamValuesVisible", "contents": "SetTopBarTeamValuesVisible(${1:bVisible})" },
		{ "trigger": "SetTopBarTeamValuesVisible", "contents": "SetTopBarTeamValuesVisible(${1:bVisible})" },
		{ "trigger": "CDOTABaseGameMode_SetTowerBackdoorProtectionEnabled", "contents": "SetTowerBackdoorProtectionEnabled(${1:bEnabled})" },
		{ "trigger": "SetTowerBackdoorProtectionEnabled", "contents": "SetTowerBackdoorProtectionEnabled(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetTrackingProjectileFilter", "contents": "SetTrackingProjectileFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "SetTrackingProjectileFilter", "contents": "SetTrackingProjectileFilter(${1:Modify the table and Return true to use new values},${2:return false to cancel the event})" },
		{ "trigger": "CDOTABaseGameMode_SetUnseenFogOfWarEnabled", "contents": "SetUnseenFogOfWarEnabled(${1:bEnabled})" },
		{ "trigger": "SetUnseenFogOfWarEnabled", "contents": "SetUnseenFogOfWarEnabled(${1:bEnabled})" },
		{ "trigger": "CDOTABaseGameMode_SetUseCustomHeroLevels", "contents": "SetUseCustomHeroLevels(${1:bEnabled})" },
		{ "trigger": "SetUseCustomHeroLevels", "contents": "SetUseCustomHeroLevels(${1:bEnabled})" },
		{ "trigger": "CDOTAGameManager_GetHeroIDByName", "contents": "GetHeroIDByName(${1:string_1})" },
		{ "trigger": "GetHeroIDByName", "contents": "GetHeroIDByName(${1:string_1})" },
		{ "trigger": "CDOTAGameManager_GetHeroNameByID", "contents": "GetHeroNameByID(${1:int_1})" },
		{ "trigger": "GetHeroNameByID", "contents": "GetHeroNameByID(${1:int_1})" },
		{ "trigger": "CDOTAGameManager_GetHeroNameForUnitName", "contents": "GetHeroNameForUnitName(${1:string_1})" },
		{ "trigger": "GetHeroNameForUnitName", "contents": "GetHeroNameForUnitName(${1:string_1})" },
		{ "trigger": "CDOTAGameManager_GetHeroUnitNameByID", "contents": "GetHeroUnitNameByID(${1:int_1})" },
		{ "trigger": "GetHeroUnitNameByID", "contents": "GetHeroUnitNameByID(${1:int_1})" },
		{ "trigger": "GameRules_AddMinimapDebugPoint", "contents": "AddMinimapDebugPoint(${1:int_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7})" },
		{ "trigger": "AddMinimapDebugPoint", "contents": "AddMinimapDebugPoint(${1:int_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7})" },
		{ "trigger": "GameRules_AddMinimapDebugPointForTeam", "contents": "AddMinimapDebugPointForTeam(${1:int_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7},${8:int_8})" },
		{ "trigger": "AddMinimapDebugPointForTeam", "contents": "AddMinimapDebugPointForTeam(${1:int_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7},${8:int_8})" },
		{ "trigger": "GameRules_Defeated", "contents": "Defeated()" },
		{ "trigger": "Defeated", "contents": "Defeated()" },
		{ "trigger": "GameRules_DidMatchSignoutTimeOut", "contents": "DidMatchSignoutTimeOut()" },
		{ "trigger": "DidMatchSignoutTimeOut", "contents": "DidMatchSignoutTimeOut()" },
		{ "trigger": "GameRules_EnableCustomGameSetupAutoLaunch", "contents": "EnableCustomGameSetupAutoLaunch(${1:true})" },
		{ "trigger": "EnableCustomGameSetupAutoLaunch", "contents": "EnableCustomGameSetupAutoLaunch(${1:true})" },
		{ "trigger": "GameRules_FinishCustomGameSetup", "contents": "FinishCustomGameSetup()" },
		{ "trigger": "FinishCustomGameSetup", "contents": "FinishCustomGameSetup()" },
		{ "trigger": "GameRules_GetCustomGameDifficulty", "contents": "GetCustomGameDifficulty()" },
		{ "trigger": "GetCustomGameDifficulty", "contents": "GetCustomGameDifficulty()" },
		{ "trigger": "GameRules_GetCustomGameTeamMaxPlayers", "contents": "GetCustomGameTeamMaxPlayers(${1:int_1})" },
		{ "trigger": "GetCustomGameTeamMaxPlayers", "contents": "GetCustomGameTeamMaxPlayers(${1:int_1})" },
		{ "trigger": "GameRules_GetDOTATime", "contents": "GetDOTATime(${1:b IncludePregameTime b IncludeNegativeTime},${2:bool_2})" },
		{ "trigger": "GetDOTATime", "contents": "GetDOTATime(${1:b IncludePregameTime b IncludeNegativeTime},${2:bool_2})" },
		{ "trigger": "GameRules_GetDifficulty", "contents": "GetDifficulty()" },
		{ "trigger": "GetDifficulty", "contents": "GetDifficulty()" },
		{ "trigger": "GameRules_GetDroppedItem", "contents": "GetDroppedItem(${1:int_1})" },
		{ "trigger": "GetDroppedItem", "contents": "GetDroppedItem(${1:int_1})" },
		{ "trigger": "GameRules_GetGameModeEntity", "contents": "GetGameModeEntity()" },
		{ "trigger": "GetGameModeEntity", "contents": "GetGameModeEntity()" },
		{ "trigger": "GameRules_GetGameSessionConfigValue", "contents": "GetGameSessionConfigValue(${1:map options},${2:string_2})" },
		{ "trigger": "GetGameSessionConfigValue", "contents": "GetGameSessionConfigValue(${1:map options},${2:string_2})" },
		{ "trigger": "GameRules_GetGameTime", "contents": "GetGameTime()" },
		{ "trigger": "GetGameTime", "contents": "GetGameTime()" },
		{ "trigger": "GameRules_GetMatchID", "contents": "GetMatchID()" },
		{ "trigger": "GetMatchID", "contents": "GetMatchID()" },
		{ "trigger": "GameRules_GetMatchSignoutComplete", "contents": "GetMatchSignoutComplete()" },
		{ "trigger": "GetMatchSignoutComplete", "contents": "GetMatchSignoutComplete()" },
		{ "trigger": "GameRules_GetNianTotalDamageTaken", "contents": "GetNianTotalDamageTaken()" },
		{ "trigger": "GetNianTotalDamageTaken", "contents": "GetNianTotalDamageTaken()" },
		{ "trigger": "GameRules_GetPlayerCustomGameAccountRecord", "contents": "GetPlayerCustomGameAccountRecord(${1:Preview/Unreleased})" },
		{ "trigger": "GetPlayerCustomGameAccountRecord", "contents": "GetPlayerCustomGameAccountRecord(${1:Preview/Unreleased})" },
		{ "trigger": "GameRules_GetTimeOfDay", "contents": "GetTimeOfDay()" },
		{ "trigger": "GetTimeOfDay", "contents": "GetTimeOfDay()" },
		{ "trigger": "GameRules_IsCheatMode", "contents": "IsCheatMode()" },
		{ "trigger": "IsCheatMode", "contents": "IsCheatMode()" },
		{ "trigger": "GameRules_IsDaytime", "contents": "IsDaytime()" },
		{ "trigger": "IsDaytime", "contents": "IsDaytime()" },
		{ "trigger": "GameRules_IsGamePaused", "contents": "IsGamePaused()" },
		{ "trigger": "IsGamePaused", "contents": "IsGamePaused()" },
		{ "trigger": "GameRules_LockCustomGameSetupTeamAssignment", "contents": "LockCustomGameSetupTeamAssignment(${1:true})" },
		{ "trigger": "LockCustomGameSetupTeamAssignment", "contents": "LockCustomGameSetupTeamAssignment(${1:true})" },
		{ "trigger": "GameRules_MakeTeamLose", "contents": "MakeTeamLose(${1:int_1})" },
		{ "trigger": "MakeTeamLose", "contents": "MakeTeamLose(${1:int_1})" },
		{ "trigger": "GameRules_NumDroppedItems", "contents": "NumDroppedItems()" },
		{ "trigger": "NumDroppedItems", "contents": "NumDroppedItems()" },
		{ "trigger": "GameRules_PlayerHasCustomGameHostPrivileges", "contents": "PlayerHasCustomGameHostPrivileges(${1:shuffle teams})" },
		{ "trigger": "PlayerHasCustomGameHostPrivileges", "contents": "PlayerHasCustomGameHostPrivileges(${1:shuffle teams})" },
		{ "trigger": "GameRules_Playtesting_UpdateAddOnKeyValues", "contents": "Playtesting_UpdateAddOnKeyValues()" },
		{ "trigger": "Playtesting_UpdateAddOnKeyValues", "contents": "Playtesting_UpdateAddOnKeyValues()" },
		{ "trigger": "GameRules_ResetDefeated", "contents": "ResetDefeated()" },
		{ "trigger": "ResetDefeated", "contents": "ResetDefeated()" },
		{ "trigger": "GameRules_ResetToHeroSelection", "contents": "ResetToHeroSelection()" },
		{ "trigger": "ResetToHeroSelection", "contents": "ResetToHeroSelection()" },
		{ "trigger": "GameRules_SendCustomMessage", "contents": "SendCustomMessage(${1:string_1},${2:int_2},${3:int_3})" },
		{ "trigger": "SendCustomMessage", "contents": "SendCustomMessage(${1:string_1},${2:int_2},${3:int_3})" },
		{ "trigger": "GameRules_SendCustomMessageToTeam", "contents": "SendCustomMessageToTeam(${1:string_1},${2:int_2},${3:int_3},${4:int_4})" },
		{ "trigger": "SendCustomMessageToTeam", "contents": "SendCustomMessageToTeam(${1:string_1},${2:int_2},${3:int_3},${4:int_4})" },
		{ "trigger": "GameRules_SetCreepMinimapIconScale", "contents": "SetCreepMinimapIconScale(${1:flMinimapCreepIconScale})" },
		{ "trigger": "SetCreepMinimapIconScale", "contents": "SetCreepMinimapIconScale(${1:flMinimapCreepIconScale})" },
		{ "trigger": "GameRules_SetCustomGameAccountRecordSaveFunction", "contents": "SetCustomGameAccountRecordSaveFunction(${1:Preview/Unreleased},${2:handle_2})" },
		{ "trigger": "SetCustomGameAccountRecordSaveFunction", "contents": "SetCustomGameAccountRecordSaveFunction(${1:Preview/Unreleased},${2:handle_2})" },
		{ "trigger": "GameRules_SetCustomGameDifficulty", "contents": "SetCustomGameDifficulty(${1:int_1})" },
		{ "trigger": "SetCustomGameDifficulty", "contents": "SetCustomGameDifficulty(${1:int_1})" },
		{ "trigger": "GameRules_SetCustomGameEndDelay", "contents": "SetCustomGameEndDelay(${1:float_1})" },
		{ "trigger": "SetCustomGameEndDelay", "contents": "SetCustomGameEndDelay(${1:float_1})" },
		{ "trigger": "GameRules_SetCustomGameSetupAutoLaunchDelay", "contents": "SetCustomGameSetupAutoLaunchDelay(${1:float_1})" },
		{ "trigger": "SetCustomGameSetupAutoLaunchDelay", "contents": "SetCustomGameSetupAutoLaunchDelay(${1:float_1})" },
		{ "trigger": "GameRules_SetCustomGameSetupRemainingTime", "contents": "SetCustomGameSetupRemainingTime(${1:float_1})" },
		{ "trigger": "SetCustomGameSetupRemainingTime", "contents": "SetCustomGameSetupRemainingTime(${1:float_1})" },
		{ "trigger": "GameRules_SetCustomGameSetupTimeout", "contents": "SetCustomGameSetupTimeout(${1:pre-gameplay})" },
		{ "trigger": "SetCustomGameSetupTimeout", "contents": "SetCustomGameSetupTimeout(${1:pre-gameplay})" },
		{ "trigger": "GameRules_SetCustomGameTeamMaxPlayers", "contents": "SetCustomGameTeamMaxPlayers(${1:int_1},${2:int_2})" },
		{ "trigger": "SetCustomGameTeamMaxPlayers", "contents": "SetCustomGameTeamMaxPlayers(${1:int_1},${2:int_2})" },
		{ "trigger": "GameRules_SetCustomVictoryMessage", "contents": "SetCustomVictoryMessage(${1:string_1})" },
		{ "trigger": "SetCustomVictoryMessage", "contents": "SetCustomVictoryMessage(${1:string_1})" },
		{ "trigger": "GameRules_SetCustomVictoryMessageDuration", "contents": "SetCustomVictoryMessageDuration(${1:float_1})" },
		{ "trigger": "SetCustomVictoryMessageDuration", "contents": "SetCustomVictoryMessageDuration(${1:float_1})" },
		{ "trigger": "GameRules_SetFirstBloodActive", "contents": "SetFirstBloodActive(${1:bool_1})" },
		{ "trigger": "SetFirstBloodActive", "contents": "SetFirstBloodActive(${1:bool_1})" },
		{ "trigger": "GameRules_SetGameWinner", "contents": "SetGameWinner(${1:int_1})" },
		{ "trigger": "SetGameWinner", "contents": "SetGameWinner(${1:int_1})" },
		{ "trigger": "GameRules_SetGoldPerTick", "contents": "SetGoldPerTick(${1:int_1})" },
		{ "trigger": "SetGoldPerTick", "contents": "SetGoldPerTick(${1:int_1})" },
		{ "trigger": "GameRules_SetGoldTickTime", "contents": "SetGoldTickTime(${1:float_1})" },
		{ "trigger": "SetGoldTickTime", "contents": "SetGoldTickTime(${1:float_1})" },
		{ "trigger": "GameRules_SetHeroMinimapIconScale", "contents": "SetHeroMinimapIconScale(${1:flMinimapHeroIconScale})" },
		{ "trigger": "SetHeroMinimapIconScale", "contents": "SetHeroMinimapIconScale(${1:flMinimapHeroIconScale})" },
		{ "trigger": "GameRules_SetHeroRespawnEnabled", "contents": "SetHeroRespawnEnabled(${1:bool_1})" },
		{ "trigger": "SetHeroRespawnEnabled", "contents": "SetHeroRespawnEnabled(${1:bool_1})" },
		{ "trigger": "GameRules_SetHeroSelectionTime", "contents": "SetHeroSelectionTime(${1:float_1})" },
		{ "trigger": "SetHeroSelectionTime", "contents": "SetHeroSelectionTime(${1:float_1})" },
		{ "trigger": "GameRules_SetHideKillMessageHeaders", "contents": "SetHideKillMessageHeaders(${1:bool_1})" },
		{ "trigger": "SetHideKillMessageHeaders", "contents": "SetHideKillMessageHeaders(${1:bool_1})" },
		{ "trigger": "GameRules_SetOverlayHealthBarUnit", "contents": "SetOverlayHealthBarUnit(${1:handle_1},${2:int_2})" },
		{ "trigger": "SetOverlayHealthBarUnit", "contents": "SetOverlayHealthBarUnit(${1:handle_1},${2:int_2})" },
		{ "trigger": "GameRules_SetPostGameTime", "contents": "SetPostGameTime(${1:float_1})" },
		{ "trigger": "SetPostGameTime", "contents": "SetPostGameTime(${1:float_1})" },
		{ "trigger": "GameRules_SetPreGameTime", "contents": "SetPreGameTime(${1:float_1})" },
		{ "trigger": "SetPreGameTime", "contents": "SetPreGameTime(${1:float_1})" },
		{ "trigger": "GameRules_SetRuneMinimapIconScale", "contents": "SetRuneMinimapIconScale(${1:flMinimapRuneIconScale})" },
		{ "trigger": "SetRuneMinimapIconScale", "contents": "SetRuneMinimapIconScale(${1:flMinimapRuneIconScale})" },
		{ "trigger": "GameRules_SetRuneSpawnTime", "contents": "SetRuneSpawnTime(${1:float_1})" },
		{ "trigger": "SetRuneSpawnTime", "contents": "SetRuneSpawnTime(${1:float_1})" },
		{ "trigger": "GameRules_SetSafeToLeave", "contents": "SetSafeToLeave(${1:bSafeToLeave})" },
		{ "trigger": "SetSafeToLeave", "contents": "SetSafeToLeave(${1:bSafeToLeave})" },
		{ "trigger": "GameRules_SetSameHeroSelectionEnabled", "contents": "SetSameHeroSelectionEnabled(${1:bool_1})" },
		{ "trigger": "SetSameHeroSelectionEnabled", "contents": "SetSameHeroSelectionEnabled(${1:bool_1})" },
		{ "trigger": "GameRules_SetStartingGold", "contents": "SetStartingGold(${1:int_1})" },
		{ "trigger": "SetStartingGold", "contents": "SetStartingGold(${1:int_1})" },
		{ "trigger": "GameRules_SetTimeOfDay", "contents": "SetTimeOfDay(${1:float_1})" },
		{ "trigger": "SetTimeOfDay", "contents": "SetTimeOfDay(${1:float_1})" },
		{ "trigger": "GameRules_SetTreeRegrowTime", "contents": "SetTreeRegrowTime(${1:float_1})" },
		{ "trigger": "SetTreeRegrowTime", "contents": "SetTreeRegrowTime(${1:float_1})" },
		{ "trigger": "GameRules_SetUseBaseGoldBountyOnHeroes", "contents": "SetUseBaseGoldBountyOnHeroes(${1:bool_1})" },
		{ "trigger": "SetUseBaseGoldBountyOnHeroes", "contents": "SetUseBaseGoldBountyOnHeroes(${1:bool_1})" },
		{ "trigger": "GameRules_SetUseCustomHeroXPValues", "contents": "SetUseCustomHeroXPValues(${1:this value must be set})" },
		{ "trigger": "SetUseCustomHeroXPValues", "contents": "SetUseCustomHeroXPValues(${1:this value must be set})" },
		{ "trigger": "GameRules_SetUseUniversalShopMode", "contents": "SetUseUniversalShopMode(${1:bool_1})" },
		{ "trigger": "SetUseUniversalShopMode", "contents": "SetUseUniversalShopMode(${1:bool_1})" },
		{ "trigger": "GameRules_State_Get", "contents": "State_Get()" },
		{ "trigger": "State_Get", "contents": "State_Get()" },
		{ "trigger": "CDOTAPlayer_GetAssignedHero", "contents": "GetAssignedHero()" },
		{ "trigger": "GetAssignedHero", "contents": "GetAssignedHero()" },
		{ "trigger": "CDOTAPlayer_GetPlayerID", "contents": "GetPlayerID()" },
		{ "trigger": "GetPlayerID", "contents": "GetPlayerID()" },
		{ "trigger": "CDOTAPlayer_MakeRandomHeroSelection", "contents": "MakeRandomHeroSelection()" },
		{ "trigger": "MakeRandomHeroSelection", "contents": "MakeRandomHeroSelection()" },
		{ "trigger": "CDOTAPlayer_SetKillCamUnit", "contents": "SetKillCamUnit(${1:hEntity})" },
		{ "trigger": "SetKillCamUnit", "contents": "SetKillCamUnit(${1:hEntity})" },
		{ "trigger": "CDOTAPlayer_SetMusicStatus", "contents": "SetMusicStatus(${1:nMusicStatus},${2:flIntensity})" },
		{ "trigger": "SetMusicStatus", "contents": "SetMusicStatus(${1:nMusicStatus},${2:flIntensity})" },
		{ "trigger": "CDOTATutorial_AddBot", "contents": "AddBot(${1:string_1},${2:string_2},${3:string_3},${4:bool_4})" },
		{ "trigger": "AddBot", "contents": "AddBot(${1:string_1},${2:string_2},${3:string_3},${4:bool_4})" },
		{ "trigger": "CDOTATutorial_AddQuest", "contents": "AddQuest(${1:string_1},${2:int_2},${3:string_3},${4:string_4})" },
		{ "trigger": "AddQuest", "contents": "AddQuest(${1:string_1},${2:int_2},${3:string_3},${4:string_4})" },
		{ "trigger": "CDOTATutorial_AddShopWhitelistItem", "contents": "AddShopWhitelistItem(${1:string_1})" },
		{ "trigger": "AddShopWhitelistItem", "contents": "AddShopWhitelistItem(${1:string_1})" },
		{ "trigger": "CDOTATutorial_CompleteQuest", "contents": "CompleteQuest(${1:string_1})" },
		{ "trigger": "CompleteQuest", "contents": "CompleteQuest(${1:string_1})" },
		{ "trigger": "CDOTATutorial_CreateLocationTask", "contents": "CreateLocationTask(${1:Vector_1})" },
		{ "trigger": "CreateLocationTask", "contents": "CreateLocationTask(${1:Vector_1})" },
		{ "trigger": "CDOTATutorial_EnableCreepAggroViz", "contents": "EnableCreepAggroViz(${1:bool_1})" },
		{ "trigger": "EnableCreepAggroViz", "contents": "EnableCreepAggroViz(${1:bool_1})" },
		{ "trigger": "CDOTATutorial_EnablePlayerOffscreenTip", "contents": "EnablePlayerOffscreenTip(${1:bool_1})" },
		{ "trigger": "EnablePlayerOffscreenTip", "contents": "EnablePlayerOffscreenTip(${1:bool_1})" },
		{ "trigger": "CDOTATutorial_EnableTowerAggroViz", "contents": "EnableTowerAggroViz(${1:bool_1})" },
		{ "trigger": "EnableTowerAggroViz", "contents": "EnableTowerAggroViz(${1:bool_1})" },
		{ "trigger": "CDOTATutorial_FinishTutorial", "contents": "FinishTutorial()" },
		{ "trigger": "FinishTutorial", "contents": "FinishTutorial()" },
		{ "trigger": "CDOTATutorial_ForceGameStart", "contents": "ForceGameStart()" },
		{ "trigger": "ForceGameStart", "contents": "ForceGameStart()" },
		{ "trigger": "CDOTATutorial_GetTimeFrozen", "contents": "GetTimeFrozen()" },
		{ "trigger": "GetTimeFrozen", "contents": "GetTimeFrozen()" },
		{ "trigger": "CDOTATutorial_IsItemInWhiteList", "contents": "IsItemInWhiteList(${1:string_1})" },
		{ "trigger": "IsItemInWhiteList", "contents": "IsItemInWhiteList(${1:string_1})" },
		{ "trigger": "CDOTATutorial_RemoveShopWhitelistItem", "contents": "RemoveShopWhitelistItem(${1:string_1})" },
		{ "trigger": "RemoveShopWhitelistItem", "contents": "RemoveShopWhitelistItem(${1:string_1})" },
		{ "trigger": "CDOTATutorial_SelectHero", "contents": "SelectHero(${1:string_1})" },
		{ "trigger": "SelectHero", "contents": "SelectHero(${1:string_1})" },
		{ "trigger": "CDOTATutorial_SelectPlayerTeam", "contents": "SelectPlayerTeam(${1:string_1})" },
		{ "trigger": "SelectPlayerTeam", "contents": "SelectPlayerTeam(${1:string_1})" },
		{ "trigger": "CDOTATutorial_SetItemGuide", "contents": "SetItemGuide(${1:string_1})" },
		{ "trigger": "SetItemGuide", "contents": "SetItemGuide(${1:string_1})" },
		{ "trigger": "CDOTATutorial_SetOrModifyPlayerGold", "contents": "SetOrModifyPlayerGold(${1:int},${2:bool_2})" },
		{ "trigger": "SetOrModifyPlayerGold", "contents": "SetOrModifyPlayerGold(${1:int},${2:bool_2})" },
		{ "trigger": "CDOTATutorial_SetQuickBuy", "contents": "SetQuickBuy(${1:string_1})" },
		{ "trigger": "SetQuickBuy", "contents": "SetQuickBuy(${1:string_1})" },
		{ "trigger": "CDOTATutorial_SetShopOpen", "contents": "SetShopOpen(${1:bool_1})" },
		{ "trigger": "SetShopOpen", "contents": "SetShopOpen(${1:bool_1})" },
		{ "trigger": "CDOTATutorial_SetTimeFrozen", "contents": "SetTimeFrozen(${1:bool_1})" },
		{ "trigger": "SetTimeFrozen", "contents": "SetTimeFrozen(${1:bool_1})" },
		{ "trigger": "CDOTATutorial_SetTutorialConvar", "contents": "SetTutorialConvar(${1:string_1},${2:string_2})" },
		{ "trigger": "SetTutorialConvar", "contents": "SetTutorialConvar(${1:string_1},${2:string_2})" },
		{ "trigger": "CDOTATutorial_SetTutorialUI", "contents": "SetTutorialUI(${1:int_1})" },
		{ "trigger": "SetTutorialUI", "contents": "SetTutorialUI(${1:int_1})" },
		{ "trigger": "CDOTATutorial_SetWhiteListEnabled", "contents": "SetWhiteListEnabled(${1:bool_1})" },
		{ "trigger": "SetWhiteListEnabled", "contents": "SetWhiteListEnabled(${1:bool_1})" },
		{ "trigger": "CDOTATutorial_StartTutorialMode", "contents": "StartTutorialMode()" },
		{ "trigger": "StartTutorialMode", "contents": "StartTutorialMode()" },
		{ "trigger": "CDOTATutorial_UpgradePlayerAbility", "contents": "UpgradePlayerAbility(${1:string_1})" },
		{ "trigger": "UpgradePlayerAbility", "contents": "UpgradePlayerAbility(${1:string_1})" },
		{ "trigger": "CDOTAVoteSystem_StartVote", "contents": "StartVote(${1:handle_1})" },
		{ "trigger": "StartVote", "contents": "StartVote(${1:handle_1})" },
		{ "trigger": "CDOTA_Ability_Animation_Attack_SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "CDOTA_Ability_Animation_TailSpin_SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "CDOTA_Ability_DataDriven_ApplyDataDrivenModifier", "contents": "ApplyDataDrivenModifier(${1:hCaster},${2:hTarget},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "ApplyDataDrivenModifier", "contents": "ApplyDataDrivenModifier(${1:hCaster},${2:hTarget},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "CDOTA_Ability_DataDriven_ApplyDataDrivenThinker", "contents": "ApplyDataDrivenThinker(${1:hCaster},${2:vLocation},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "ApplyDataDrivenThinker", "contents": "ApplyDataDrivenThinker(${1:hCaster},${2:vLocation},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "CDOTA_Ability_Lua_CastFilterResult", "contents": "CastFilterResult()" },
		{ "trigger": "CastFilterResult", "contents": "CastFilterResult()" },
		{ "trigger": "CDOTA_Ability_Lua_CastFilterResultLocation", "contents": "CastFilterResultLocation(${1:Vector vLocation})" },
		{ "trigger": "CastFilterResultLocation", "contents": "CastFilterResultLocation(${1:Vector vLocation})" },
		{ "trigger": "CDOTA_Ability_Lua_CastFilterResultTarget", "contents": "CastFilterResultTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "CastFilterResultTarget", "contents": "CastFilterResultTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "CDOTA_Ability_Lua_GetAssociatedPrimaryAbilities", "contents": "GetAssociatedPrimaryAbilities()" },
		{ "trigger": "GetAssociatedPrimaryAbilities", "contents": "GetAssociatedPrimaryAbilities()" },
		{ "trigger": "CDOTA_Ability_Lua_GetAssociatedSecondaryAbilities", "contents": "GetAssociatedSecondaryAbilities()" },
		{ "trigger": "GetAssociatedSecondaryAbilities", "contents": "GetAssociatedSecondaryAbilities()" },
		{ "trigger": "CDOTA_Ability_Lua_GetBehavior", "contents": "GetBehavior()" },
		{ "trigger": "GetBehavior", "contents": "GetBehavior()" },
		{ "trigger": "CDOTA_Ability_Lua_GetCastAnimation", "contents": "GetCastAnimation()" },
		{ "trigger": "GetCastAnimation", "contents": "GetCastAnimation()" },
		{ "trigger": "CDOTA_Ability_Lua_GetCastRange", "contents": "GetCastRange(${1:vLocation},${2:hTarget})" },
		{ "trigger": "GetCastRange", "contents": "GetCastRange(${1:vLocation},${2:hTarget})" },
		{ "trigger": "CDOTA_Ability_Lua_GetChannelAnimation", "contents": "GetChannelAnimation()" },
		{ "trigger": "GetChannelAnimation", "contents": "GetChannelAnimation()" },
		{ "trigger": "CDOTA_Ability_Lua_GetChannelTime", "contents": "GetChannelTime()" },
		{ "trigger": "GetChannelTime", "contents": "GetChannelTime()" },
		{ "trigger": "CDOTA_Ability_Lua_GetChannelledManaCostPerSecond", "contents": "GetChannelledManaCostPerSecond(${1:-1 is current})" },
		{ "trigger": "GetChannelledManaCostPerSecond", "contents": "GetChannelledManaCostPerSecond(${1:-1 is current})" },
		{ "trigger": "CDOTA_Ability_Lua_GetConceptRecipientType", "contents": "GetConceptRecipientType()" },
		{ "trigger": "GetConceptRecipientType", "contents": "GetConceptRecipientType()" },
		{ "trigger": "CDOTA_Ability_Lua_GetCooldown", "contents": "GetCooldown(${1:iLevel})" },
		{ "trigger": "GetCooldown", "contents": "GetCooldown(${1:iLevel})" },
		{ "trigger": "CDOTA_Ability_Lua_GetCustomCastError", "contents": "GetCustomCastError()" },
		{ "trigger": "GetCustomCastError", "contents": "GetCustomCastError()" },
		{ "trigger": "CDOTA_Ability_Lua_GetCustomCastErrorLocation", "contents": "GetCustomCastErrorLocation(${1:Vector vLocation})" },
		{ "trigger": "GetCustomCastErrorLocation", "contents": "GetCustomCastErrorLocation(${1:Vector vLocation})" },
		{ "trigger": "CDOTA_Ability_Lua_GetCustomCastErrorTarget", "contents": "GetCustomCastErrorTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "GetCustomCastErrorTarget", "contents": "GetCustomCastErrorTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "CDOTA_Ability_Lua_GetGoldCost", "contents": "GetGoldCost(${1:-1 is current})" },
		{ "trigger": "GetGoldCost", "contents": "GetGoldCost(${1:-1 is current})" },
		{ "trigger": "CDOTA_Ability_Lua_GetIntrinsicModifierName", "contents": "GetIntrinsicModifierName()" },
		{ "trigger": "GetIntrinsicModifierName", "contents": "GetIntrinsicModifierName()" },
		{ "trigger": "CDOTA_Ability_Lua_GetManaCost", "contents": "GetManaCost(${1:-1 is current})" },
		{ "trigger": "GetManaCost", "contents": "GetManaCost(${1:-1 is current})" },
		{ "trigger": "CDOTA_Ability_Lua_GetPlaybackRateOverride", "contents": "GetPlaybackRateOverride()" },
		{ "trigger": "GetPlaybackRateOverride", "contents": "GetPlaybackRateOverride()" },
		{ "trigger": "CDOTA_Ability_Lua_IsHiddenAbilityCastable", "contents": "IsHiddenAbilityCastable()" },
		{ "trigger": "IsHiddenAbilityCastable", "contents": "IsHiddenAbilityCastable()" },
		{ "trigger": "CDOTA_Ability_Lua_IsHiddenWhenStolen", "contents": "IsHiddenWhenStolen()" },
		{ "trigger": "IsHiddenWhenStolen", "contents": "IsHiddenWhenStolen()" },
		{ "trigger": "CDOTA_Ability_Lua_IsRefreshable", "contents": "IsRefreshable()" },
		{ "trigger": "IsRefreshable", "contents": "IsRefreshable()" },
		{ "trigger": "CDOTA_Ability_Lua_IsStealable", "contents": "IsStealable()" },
		{ "trigger": "IsStealable", "contents": "IsStealable()" },
		{ "trigger": "CDOTA_Ability_Lua_OnAbilityPhaseInterrupted", "contents": "OnAbilityPhaseInterrupted()" },
		{ "trigger": "OnAbilityPhaseInterrupted", "contents": "OnAbilityPhaseInterrupted()" },
		{ "trigger": "CDOTA_Ability_Lua_OnAbilityPhaseStart", "contents": "OnAbilityPhaseStart()" },
		{ "trigger": "OnAbilityPhaseStart", "contents": "OnAbilityPhaseStart()" },
		{ "trigger": "CDOTA_Ability_Lua_OnChannelFinish", "contents": "OnChannelFinish(${1:bool bInterrupted})" },
		{ "trigger": "OnChannelFinish", "contents": "OnChannelFinish(${1:bool bInterrupted})" },
		{ "trigger": "CDOTA_Ability_Lua_OnChannelThink", "contents": "OnChannelThink(${1:float flInterval})" },
		{ "trigger": "OnChannelThink", "contents": "OnChannelThink(${1:float flInterval})" },
		{ "trigger": "CDOTA_Ability_Lua_OnHeroCalculateStatBonus", "contents": "OnHeroCalculateStatBonus()" },
		{ "trigger": "OnHeroCalculateStatBonus", "contents": "OnHeroCalculateStatBonus()" },
		{ "trigger": "CDOTA_Ability_Lua_OnHeroDiedNearby", "contents": "OnHeroDiedNearby(${1:ie Urn},${2:attacker},${3:table})" },
		{ "trigger": "OnHeroDiedNearby", "contents": "OnHeroDiedNearby(${1:ie Urn},${2:attacker},${3:table})" },
		{ "trigger": "CDOTA_Ability_Lua_OnHeroLevelUp", "contents": "OnHeroLevelUp()" },
		{ "trigger": "OnHeroLevelUp", "contents": "OnHeroLevelUp()" },
		{ "trigger": "CDOTA_Ability_Lua_OnInventoryContentsChanged", "contents": "OnInventoryContentsChanged()" },
		{ "trigger": "OnInventoryContentsChanged", "contents": "OnInventoryContentsChanged()" },
		{ "trigger": "CDOTA_Ability_Lua_OnItemEquipped", "contents": "OnItemEquipped(${1:HSCRIPT hItem})" },
		{ "trigger": "OnItemEquipped", "contents": "OnItemEquipped(${1:HSCRIPT hItem})" },
		{ "trigger": "CDOTA_Ability_Lua_OnOwnerDied", "contents": "OnOwnerDied()" },
		{ "trigger": "OnOwnerDied", "contents": "OnOwnerDied()" },
		{ "trigger": "CDOTA_Ability_Lua_OnOwnerSpawned", "contents": "OnOwnerSpawned()" },
		{ "trigger": "OnOwnerSpawned", "contents": "OnOwnerSpawned()" },
		{ "trigger": "CDOTA_Ability_Lua_OnProjectileHit", "contents": "OnProjectileHit(${1:HSCRIPT hTarget},${2:Vector vLocation})" },
		{ "trigger": "OnProjectileHit", "contents": "OnProjectileHit(${1:HSCRIPT hTarget},${2:Vector vLocation})" },
		{ "trigger": "CDOTA_Ability_Lua_OnProjectileHit_ExtraData", "contents": "OnProjectileHit_ExtraData(${1:HSCRIPT hTarget},${2:Vector vLocation},${3:table kv})" },
		{ "trigger": "OnProjectileHit_ExtraData", "contents": "OnProjectileHit_ExtraData(${1:HSCRIPT hTarget},${2:Vector vLocation},${3:table kv})" },
		{ "trigger": "CDOTA_Ability_Lua_OnProjectileThink", "contents": "OnProjectileThink(${1:Vector vLocation})" },
		{ "trigger": "OnProjectileThink", "contents": "OnProjectileThink(${1:Vector vLocation})" },
		{ "trigger": "CDOTA_Ability_Lua_OnProjectileThink_ExtraData", "contents": "OnProjectileThink_ExtraData(${1:Vector vLocation},${2:table kv})" },
		{ "trigger": "OnProjectileThink_ExtraData", "contents": "OnProjectileThink_ExtraData(${1:Vector vLocation},${2:table kv})" },
		{ "trigger": "CDOTA_Ability_Lua_OnSpellStart", "contents": "OnSpellStart()" },
		{ "trigger": "OnSpellStart", "contents": "OnSpellStart()" },
		{ "trigger": "CDOTA_Ability_Lua_OnStolen", "contents": "OnStolen(${1:HSCRIPT hAbility})" },
		{ "trigger": "OnStolen", "contents": "OnStolen(${1:HSCRIPT hAbility})" },
		{ "trigger": "CDOTA_Ability_Lua_OnToggle", "contents": "OnToggle()" },
		{ "trigger": "OnToggle", "contents": "OnToggle()" },
		{ "trigger": "CDOTA_Ability_Lua_OnUnStolen", "contents": "OnUnStolen()" },
		{ "trigger": "OnUnStolen", "contents": "OnUnStolen()" },
		{ "trigger": "CDOTA_Ability_Lua_OnUpgrade", "contents": "OnUpgrade()" },
		{ "trigger": "OnUpgrade", "contents": "OnUpgrade()" },
		{ "trigger": "CDOTA_Ability_Lua_ProcsMagicStick", "contents": "ProcsMagicStick()" },
		{ "trigger": "ProcsMagicStick", "contents": "ProcsMagicStick()" },
		{ "trigger": "CDOTA_Ability_Lua_SpeakTrigger", "contents": "SpeakTrigger()" },
		{ "trigger": "SpeakTrigger", "contents": "SpeakTrigger()" },
		{ "trigger": "CDOTA_Ability_Nian_Dive_SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "CDOTA_Ability_Nian_Leap_SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "SetPlaybackRate", "contents": "SetPlaybackRate(${1:flRate})" },
		{ "trigger": "CDOTA_Ability_Nian_Roar_GetCastCount", "contents": "GetCastCount()" },
		{ "trigger": "GetCastCount", "contents": "GetCastCount()" },
		{ "trigger": "CDOTA_BaseNPC_AddAbility", "contents": "AddAbility(${1:pszAbilityName})" },
		{ "trigger": "AddAbility", "contents": "AddAbility(${1:pszAbilityName})" },
		{ "trigger": "CDOTA_BaseNPC_AddItem", "contents": "AddItem(${1:hItem})" },
		{ "trigger": "AddItem", "contents": "AddItem(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_AddItemByName", "contents": "AddItemByName(${1:pszItemName})" },
		{ "trigger": "AddItemByName", "contents": "AddItemByName(${1:pszItemName})" },
		{ "trigger": "CDOTA_BaseNPC_AddNewModifier", "contents": "AddNewModifier(${1:hCaster},${2:hAbility},${3:pszScriptName},${4:hModifierTable})" },
		{ "trigger": "AddNewModifier", "contents": "AddNewModifier(${1:hCaster},${2:hAbility},${3:pszScriptName},${4:hModifierTable})" },
		{ "trigger": "CDOTA_BaseNPC_AddNoDraw", "contents": "AddNoDraw()" },
		{ "trigger": "AddNoDraw", "contents": "AddNoDraw()" },
		{ "trigger": "CDOTA_BaseNPC_AddSpeechBubble", "contents": "AddSpeechBubble(${1:1-4 live at a time},${2:pszSpeech},${3:flDuration},${4:unOffsetX},${5:unOffsetY})" },
		{ "trigger": "AddSpeechBubble", "contents": "AddSpeechBubble(${1:1-4 live at a time},${2:pszSpeech},${3:flDuration},${4:unOffsetX},${5:unOffsetY})" },
		{ "trigger": "CDOTA_BaseNPC_AlertNearbyUnits", "contents": "AlertNearbyUnits(${1:hAttacker},${2:hAbility})" },
		{ "trigger": "AlertNearbyUnits", "contents": "AlertNearbyUnits(${1:hAttacker},${2:hAbility})" },
		{ "trigger": "CDOTA_BaseNPC_AngerNearbyUnits", "contents": "AngerNearbyUnits()" },
		{ "trigger": "AngerNearbyUnits", "contents": "AngerNearbyUnits()" },
		{ "trigger": "CDOTA_BaseNPC_AttackNoEarlierThan", "contents": "AttackNoEarlierThan(${1:flTime})" },
		{ "trigger": "AttackNoEarlierThan", "contents": "AttackNoEarlierThan(${1:flTime})" },
		{ "trigger": "CDOTA_BaseNPC_AttackReady", "contents": "AttackReady()" },
		{ "trigger": "AttackReady", "contents": "AttackReady()" },
		{ "trigger": "CDOTA_BaseNPC_BoundingRadius2D", "contents": "BoundingRadius2D()" },
		{ "trigger": "BoundingRadius2D", "contents": "BoundingRadius2D()" },
		{ "trigger": "CDOTA_BaseNPC_CanEntityBeSeenByMyTeam", "contents": "CanEntityBeSeenByMyTeam(${1:hEntity})" },
		{ "trigger": "CanEntityBeSeenByMyTeam", "contents": "CanEntityBeSeenByMyTeam(${1:hEntity})" },
		{ "trigger": "CDOTA_BaseNPC_CanSellItems", "contents": "CanSellItems()" },
		{ "trigger": "CanSellItems", "contents": "CanSellItems()" },
		{ "trigger": "CDOTA_BaseNPC_CastAbilityImmediately", "contents": "CastAbilityImmediately(${1:hAbility},${2:iPlayerIndex})" },
		{ "trigger": "CastAbilityImmediately", "contents": "CastAbilityImmediately(${1:hAbility},${2:iPlayerIndex})" },
		{ "trigger": "CDOTA_BaseNPC_CastAbilityNoTarget", "contents": "CastAbilityNoTarget(${1:hAbility},${2:iPlayerIndex})" },
		{ "trigger": "CastAbilityNoTarget", "contents": "CastAbilityNoTarget(${1:hAbility},${2:iPlayerIndex})" },
		{ "trigger": "CDOTA_BaseNPC_CastAbilityOnPosition", "contents": "CastAbilityOnPosition(${1:vPosition},${2:hAbility},${3:iPlayerIndex})" },
		{ "trigger": "CastAbilityOnPosition", "contents": "CastAbilityOnPosition(${1:vPosition},${2:hAbility},${3:iPlayerIndex})" },
		{ "trigger": "CDOTA_BaseNPC_CastAbilityOnTarget", "contents": "CastAbilityOnTarget(${1:hTarget},${2:hAbility},${3:iPlayerIndex})" },
		{ "trigger": "CastAbilityOnTarget", "contents": "CastAbilityOnTarget(${1:hTarget},${2:hAbility},${3:iPlayerIndex})" },
		{ "trigger": "CDOTA_BaseNPC_CastAbilityToggle", "contents": "CastAbilityToggle(${1:hAbility},${2:iPlayerIndex})" },
		{ "trigger": "CastAbilityToggle", "contents": "CastAbilityToggle(${1:hAbility},${2:iPlayerIndex})" },
		{ "trigger": "CDOTA_BaseNPC_DestroyAllSpeechBubbles", "contents": "DestroyAllSpeechBubbles()" },
		{ "trigger": "DestroyAllSpeechBubbles", "contents": "DestroyAllSpeechBubbles()" },
		{ "trigger": "CDOTA_BaseNPC_DisassembleItem", "contents": "DisassembleItem(${1:hItem})" },
		{ "trigger": "DisassembleItem", "contents": "DisassembleItem(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_DropItemAtPosition", "contents": "DropItemAtPosition(${1:vDest},${2:hItem})" },
		{ "trigger": "DropItemAtPosition", "contents": "DropItemAtPosition(${1:vDest},${2:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_DropItemAtPositionImmediate", "contents": "DropItemAtPositionImmediate(${1:hItem},${2:vPosition})" },
		{ "trigger": "DropItemAtPositionImmediate", "contents": "DropItemAtPositionImmediate(${1:hItem},${2:vPosition})" },
		{ "trigger": "CDOTA_BaseNPC_EjectItemFromStash", "contents": "EjectItemFromStash(${1:hItem})" },
		{ "trigger": "EjectItemFromStash", "contents": "EjectItemFromStash(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_FindAbilityByName", "contents": "FindAbilityByName(${1:pAbilityName})" },
		{ "trigger": "FindAbilityByName", "contents": "FindAbilityByName(${1:pAbilityName})" },
		{ "trigger": "CDOTA_BaseNPC_FindAllModifiers", "contents": "FindAllModifiers()" },
		{ "trigger": "FindAllModifiers", "contents": "FindAllModifiers()" },
		{ "trigger": "CDOTA_BaseNPC_FindAllModifiersByName", "contents": "FindAllModifiersByName(${1:modifierName})" },
		{ "trigger": "FindAllModifiersByName", "contents": "FindAllModifiersByName(${1:modifierName})" },
		{ "trigger": "CDOTA_BaseNPC_FindModifierByName", "contents": "FindModifierByName(${1:string Name})" },
		{ "trigger": "FindModifierByName", "contents": "FindModifierByName(${1:string Name})" },
		{ "trigger": "CDOTA_BaseNPC_FindModifierByNameAndCaster", "contents": "FindModifierByNameAndCaster(${1:string Name},${2:hCaster})" },
		{ "trigger": "FindModifierByNameAndCaster", "contents": "FindModifierByNameAndCaster(${1:string Name},${2:hCaster})" },
		{ "trigger": "CDOTA_BaseNPC_ForceKill", "contents": "ForceKill(${1:bReincarnate})" },
		{ "trigger": "ForceKill", "contents": "ForceKill(${1:bReincarnate})" },
		{ "trigger": "CDOTA_BaseNPC_GetAbilityByIndex", "contents": "GetAbilityByIndex(${1:iIndex})" },
		{ "trigger": "GetAbilityByIndex", "contents": "GetAbilityByIndex(${1:iIndex})" },
		{ "trigger": "CDOTA_BaseNPC_GetAbilityCount", "contents": "GetAbilityCount()" },
		{ "trigger": "GetAbilityCount", "contents": "GetAbilityCount()" },
		{ "trigger": "CDOTA_BaseNPC_GetAcquisitionRange", "contents": "GetAcquisitionRange()" },
		{ "trigger": "GetAcquisitionRange", "contents": "GetAcquisitionRange()" },
		{ "trigger": "CDOTA_BaseNPC_GetAdditionalBattleMusicWeight", "contents": "GetAdditionalBattleMusicWeight()" },
		{ "trigger": "GetAdditionalBattleMusicWeight", "contents": "GetAdditionalBattleMusicWeight()" },
		{ "trigger": "CDOTA_BaseNPC_GetAggroTarget", "contents": "GetAggroTarget()" },
		{ "trigger": "GetAggroTarget", "contents": "GetAggroTarget()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttackAnimationPoint", "contents": "GetAttackAnimationPoint()" },
		{ "trigger": "GetAttackAnimationPoint", "contents": "GetAttackAnimationPoint()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttackCapability", "contents": "GetAttackCapability()" },
		{ "trigger": "GetAttackCapability", "contents": "GetAttackCapability()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttackDamage", "contents": "GetAttackDamage()" },
		{ "trigger": "GetAttackDamage", "contents": "GetAttackDamage()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttackRange", "contents": "GetAttackRange()" },
		{ "trigger": "GetAttackRange", "contents": "GetAttackRange()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttackRangeBuffer", "contents": "GetAttackRangeBuffer()" },
		{ "trigger": "GetAttackRangeBuffer", "contents": "GetAttackRangeBuffer()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttackSpeed", "contents": "GetAttackSpeed()" },
		{ "trigger": "GetAttackSpeed", "contents": "GetAttackSpeed()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttackTarget", "contents": "GetAttackTarget()" },
		{ "trigger": "GetAttackTarget", "contents": "GetAttackTarget()" },
		{ "trigger": "CDOTA_BaseNPC_GetAttacksPerSecond", "contents": "GetAttacksPerSecond()" },
		{ "trigger": "GetAttacksPerSecond", "contents": "GetAttacksPerSecond()" },
		{ "trigger": "CDOTA_BaseNPC_GetAverageTrueAttackDamage", "contents": "GetAverageTrueAttackDamage()" },
		{ "trigger": "GetAverageTrueAttackDamage", "contents": "GetAverageTrueAttackDamage()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseAttackTime", "contents": "GetBaseAttackTime()" },
		{ "trigger": "GetBaseAttackTime", "contents": "GetBaseAttackTime()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseDamageMax", "contents": "GetBaseDamageMax()" },
		{ "trigger": "GetBaseDamageMax", "contents": "GetBaseDamageMax()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseDamageMin", "contents": "GetBaseDamageMin()" },
		{ "trigger": "GetBaseDamageMin", "contents": "GetBaseDamageMin()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseDayTimeVisionRange", "contents": "GetBaseDayTimeVisionRange()" },
		{ "trigger": "GetBaseDayTimeVisionRange", "contents": "GetBaseDayTimeVisionRange()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseHealthRegen", "contents": "GetBaseHealthRegen()" },
		{ "trigger": "GetBaseHealthRegen", "contents": "GetBaseHealthRegen()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseMagicalResistanceValue", "contents": "GetBaseMagicalResistanceValue()" },
		{ "trigger": "GetBaseMagicalResistanceValue", "contents": "GetBaseMagicalResistanceValue()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseMaxHealth", "contents": "GetBaseMaxHealth()" },
		{ "trigger": "GetBaseMaxHealth", "contents": "GetBaseMaxHealth()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseMoveSpeed", "contents": "GetBaseMoveSpeed()" },
		{ "trigger": "GetBaseMoveSpeed", "contents": "GetBaseMoveSpeed()" },
		{ "trigger": "CDOTA_BaseNPC_GetBaseNightTimeVisionRange", "contents": "GetBaseNightTimeVisionRange()" },
		{ "trigger": "GetBaseNightTimeVisionRange", "contents": "GetBaseNightTimeVisionRange()" },
		{ "trigger": "CDOTA_BaseNPC_GetCastPoint", "contents": "GetCastPoint(${1:bAttack})" },
		{ "trigger": "GetCastPoint", "contents": "GetCastPoint(${1:bAttack})" },
		{ "trigger": "CDOTA_BaseNPC_GetCloneSource", "contents": "GetCloneSource()" },
		{ "trigger": "GetCloneSource", "contents": "GetCloneSource()" },
		{ "trigger": "CDOTA_BaseNPC_GetCollisionPadding", "contents": "GetCollisionPadding()" },
		{ "trigger": "GetCollisionPadding", "contents": "GetCollisionPadding()" },
		{ "trigger": "CDOTA_BaseNPC_GetConstantBasedManaRegen", "contents": "GetConstantBasedManaRegen()" },
		{ "trigger": "GetConstantBasedManaRegen", "contents": "GetConstantBasedManaRegen()" },
		{ "trigger": "CDOTA_BaseNPC_GetCreationTime", "contents": "GetCreationTime()" },
		{ "trigger": "GetCreationTime", "contents": "GetCreationTime()" },
		{ "trigger": "CDOTA_BaseNPC_GetCurrentActiveAbility", "contents": "GetCurrentActiveAbility()" },
		{ "trigger": "GetCurrentActiveAbility", "contents": "GetCurrentActiveAbility()" },
		{ "trigger": "CDOTA_BaseNPC_GetCurrentVisionRange", "contents": "GetCurrentVisionRange()" },
		{ "trigger": "GetCurrentVisionRange", "contents": "GetCurrentVisionRange()" },
		{ "trigger": "CDOTA_BaseNPC_GetCursorCastTarget", "contents": "GetCursorCastTarget()" },
		{ "trigger": "GetCursorCastTarget", "contents": "GetCursorCastTarget()" },
		{ "trigger": "CDOTA_BaseNPC_GetCursorPosition", "contents": "GetCursorPosition()" },
		{ "trigger": "GetCursorPosition", "contents": "GetCursorPosition()" },
		{ "trigger": "CDOTA_BaseNPC_GetCursorTargetingNothing", "contents": "GetCursorTargetingNothing()" },
		{ "trigger": "GetCursorTargetingNothing", "contents": "GetCursorTargetingNothing()" },
		{ "trigger": "CDOTA_BaseNPC_GetDayTimeVisionRange", "contents": "GetDayTimeVisionRange()" },
		{ "trigger": "GetDayTimeVisionRange", "contents": "GetDayTimeVisionRange()" },
		{ "trigger": "CDOTA_BaseNPC_GetDeathXP", "contents": "GetDeathXP()" },
		{ "trigger": "GetDeathXP", "contents": "GetDeathXP()" },
		{ "trigger": "CDOTA_BaseNPC_GetForceAttackTarget", "contents": "GetForceAttackTarget()" },
		{ "trigger": "GetForceAttackTarget", "contents": "GetForceAttackTarget()" },
		{ "trigger": "CDOTA_BaseNPC_GetGoldBounty", "contents": "GetGoldBounty()" },
		{ "trigger": "GetGoldBounty", "contents": "GetGoldBounty()" },
		{ "trigger": "CDOTA_BaseNPC_GetHasteFactor", "contents": "GetHasteFactor()" },
		{ "trigger": "GetHasteFactor", "contents": "GetHasteFactor()" },
		{ "trigger": "CDOTA_BaseNPC_GetHealthDeficit", "contents": "GetHealthDeficit()" },
		{ "trigger": "GetHealthDeficit", "contents": "GetHealthDeficit()" },
		{ "trigger": "CDOTA_BaseNPC_GetHealthPercent", "contents": "GetHealthPercent()" },
		{ "trigger": "GetHealthPercent", "contents": "GetHealthPercent()" },
		{ "trigger": "CDOTA_BaseNPC_GetHealthRegen", "contents": "GetHealthRegen()" },
		{ "trigger": "GetHealthRegen", "contents": "GetHealthRegen()" },
		{ "trigger": "CDOTA_BaseNPC_GetHullRadius", "contents": "GetHullRadius()" },
		{ "trigger": "GetHullRadius", "contents": "GetHullRadius()" },
		{ "trigger": "CDOTA_BaseNPC_GetIdealSpeed", "contents": "GetIdealSpeed()" },
		{ "trigger": "GetIdealSpeed", "contents": "GetIdealSpeed()" },
		{ "trigger": "CDOTA_BaseNPC_GetIncreasedAttackSpeed", "contents": "GetIncreasedAttackSpeed()" },
		{ "trigger": "GetIncreasedAttackSpeed", "contents": "GetIncreasedAttackSpeed()" },
		{ "trigger": "CDOTA_BaseNPC_GetInitialGoalEntity", "contents": "GetInitialGoalEntity()" },
		{ "trigger": "GetInitialGoalEntity", "contents": "GetInitialGoalEntity()" },
		{ "trigger": "CDOTA_BaseNPC_GetItemInSlot", "contents": "GetItemInSlot(${1:index is zero based})" },
		{ "trigger": "GetItemInSlot", "contents": "GetItemInSlot(${1:index is zero based})" },
		{ "trigger": "CDOTA_BaseNPC_GetLastAttackTime", "contents": "GetLastAttackTime()" },
		{ "trigger": "GetLastAttackTime", "contents": "GetLastAttackTime()" },
		{ "trigger": "CDOTA_BaseNPC_GetLastIdleChangeTime", "contents": "GetLastIdleChangeTime()" },
		{ "trigger": "GetLastIdleChangeTime", "contents": "GetLastIdleChangeTime()" },
		{ "trigger": "CDOTA_BaseNPC_GetLevel", "contents": "GetLevel()" },
		{ "trigger": "GetLevel", "contents": "GetLevel()" },
		{ "trigger": "CDOTA_BaseNPC_GetMagicalArmorValue", "contents": "GetMagicalArmorValue()" },
		{ "trigger": "GetMagicalArmorValue", "contents": "GetMagicalArmorValue()" },
		{ "trigger": "CDOTA_BaseNPC_GetMainControllingPlayer", "contents": "GetMainControllingPlayer()" },
		{ "trigger": "GetMainControllingPlayer", "contents": "GetMainControllingPlayer()" },
		{ "trigger": "CDOTA_BaseNPC_GetMana", "contents": "GetMana()" },
		{ "trigger": "GetMana", "contents": "GetMana()" },
		{ "trigger": "CDOTA_BaseNPC_GetManaPercent", "contents": "GetManaPercent()" },
		{ "trigger": "GetManaPercent", "contents": "GetManaPercent()" },
		{ "trigger": "CDOTA_BaseNPC_GetManaRegen", "contents": "GetManaRegen()" },
		{ "trigger": "GetManaRegen", "contents": "GetManaRegen()" },
		{ "trigger": "CDOTA_BaseNPC_GetMaxMana", "contents": "GetMaxMana()" },
		{ "trigger": "GetMaxMana", "contents": "GetMaxMana()" },
		{ "trigger": "CDOTA_BaseNPC_GetMaximumGoldBounty", "contents": "GetMaximumGoldBounty()" },
		{ "trigger": "GetMaximumGoldBounty", "contents": "GetMaximumGoldBounty()" },
		{ "trigger": "CDOTA_BaseNPC_GetMinimumGoldBounty", "contents": "GetMinimumGoldBounty()" },
		{ "trigger": "GetMinimumGoldBounty", "contents": "GetMinimumGoldBounty()" },
		{ "trigger": "CDOTA_BaseNPC_GetModelRadius", "contents": "GetModelRadius()" },
		{ "trigger": "GetModelRadius", "contents": "GetModelRadius()" },
		{ "trigger": "CDOTA_BaseNPC_GetModifierCount", "contents": "GetModifierCount()" },
		{ "trigger": "GetModifierCount", "contents": "GetModifierCount()" },
		{ "trigger": "CDOTA_BaseNPC_GetModifierNameByIndex", "contents": "GetModifierNameByIndex(${1:nIndex})" },
		{ "trigger": "GetModifierNameByIndex", "contents": "GetModifierNameByIndex(${1:nIndex})" },
		{ "trigger": "CDOTA_BaseNPC_GetModifierStackCount", "contents": "GetModifierStackCount(${1:pszScriptName},${2:hCaster})" },
		{ "trigger": "GetModifierStackCount", "contents": "GetModifierStackCount(${1:pszScriptName},${2:hCaster})" },
		{ "trigger": "CDOTA_BaseNPC_GetMoveSpeedModifier", "contents": "GetMoveSpeedModifier(${1:flBaseSpeed})" },
		{ "trigger": "GetMoveSpeedModifier", "contents": "GetMoveSpeedModifier(${1:flBaseSpeed})" },
		{ "trigger": "CDOTA_BaseNPC_GetMustReachEachGoalEntity", "contents": "GetMustReachEachGoalEntity()" },
		{ "trigger": "GetMustReachEachGoalEntity", "contents": "GetMustReachEachGoalEntity()" },
		{ "trigger": "CDOTA_BaseNPC_GetNeverMoveToClearSpace", "contents": "GetNeverMoveToClearSpace()" },
		{ "trigger": "GetNeverMoveToClearSpace", "contents": "GetNeverMoveToClearSpace()" },
		{ "trigger": "CDOTA_BaseNPC_GetNightTimeVisionRange", "contents": "GetNightTimeVisionRange()" },
		{ "trigger": "GetNightTimeVisionRange", "contents": "GetNightTimeVisionRange()" },
		{ "trigger": "CDOTA_BaseNPC_GetOpposingTeamNumber", "contents": "GetOpposingTeamNumber()" },
		{ "trigger": "GetOpposingTeamNumber", "contents": "GetOpposingTeamNumber()" },
		{ "trigger": "CDOTA_BaseNPC_GetPaddedCollisionRadius", "contents": "GetPaddedCollisionRadius()" },
		{ "trigger": "GetPaddedCollisionRadius", "contents": "GetPaddedCollisionRadius()" },
		{ "trigger": "CDOTA_BaseNPC_GetPercentageBasedManaRegen", "contents": "GetPercentageBasedManaRegen()" },
		{ "trigger": "GetPercentageBasedManaRegen", "contents": "GetPercentageBasedManaRegen()" },
		{ "trigger": "CDOTA_BaseNPC_GetPhysicalArmorBaseValue", "contents": "GetPhysicalArmorBaseValue()" },
		{ "trigger": "GetPhysicalArmorBaseValue", "contents": "GetPhysicalArmorBaseValue()" },
		{ "trigger": "CDOTA_BaseNPC_GetPhysicalArmorValue", "contents": "GetPhysicalArmorValue()" },
		{ "trigger": "GetPhysicalArmorValue", "contents": "GetPhysicalArmorValue()" },
		{ "trigger": "CDOTA_BaseNPC_GetPlayerOwner", "contents": "GetPlayerOwner()" },
		{ "trigger": "GetPlayerOwner", "contents": "GetPlayerOwner()" },
		{ "trigger": "CDOTA_BaseNPC_GetPlayerOwnerID", "contents": "GetPlayerOwnerID()" },
		{ "trigger": "GetPlayerOwnerID", "contents": "GetPlayerOwnerID()" },
		{ "trigger": "CDOTA_BaseNPC_GetProjectileSpeed", "contents": "GetProjectileSpeed()" },
		{ "trigger": "GetProjectileSpeed", "contents": "GetProjectileSpeed()" },
		{ "trigger": "CDOTA_BaseNPC_GetRangeToUnit", "contents": "GetRangeToUnit(${1:hNPC})" },
		{ "trigger": "GetRangeToUnit", "contents": "GetRangeToUnit(${1:hNPC})" },
		{ "trigger": "CDOTA_BaseNPC_GetSecondsPerAttack", "contents": "GetSecondsPerAttack()" },
		{ "trigger": "GetSecondsPerAttack", "contents": "GetSecondsPerAttack()" },
		{ "trigger": "CDOTA_BaseNPC_GetStatsBasedManaRegen", "contents": "GetStatsBasedManaRegen()" },
		{ "trigger": "GetStatsBasedManaRegen", "contents": "GetStatsBasedManaRegen()" },
		{ "trigger": "CDOTA_BaseNPC_GetTotalPurchasedUpgradeGoldCost", "contents": "GetTotalPurchasedUpgradeGoldCost()" },
		{ "trigger": "GetTotalPurchasedUpgradeGoldCost", "contents": "GetTotalPurchasedUpgradeGoldCost()" },
		{ "trigger": "CDOTA_BaseNPC_GetUnitLabel", "contents": "GetUnitLabel()" },
		{ "trigger": "GetUnitLabel", "contents": "GetUnitLabel()" },
		{ "trigger": "CDOTA_BaseNPC_GetUnitName", "contents": "GetUnitName()" },
		{ "trigger": "GetUnitName", "contents": "GetUnitName()" },
		{ "trigger": "CDOTA_BaseNPC_GiveMana", "contents": "GiveMana(${1:flMana})" },
		{ "trigger": "GiveMana", "contents": "GiveMana(${1:flMana})" },
		{ "trigger": "CDOTA_BaseNPC_HasAbility", "contents": "HasAbility(${1:pszAbilityName})" },
		{ "trigger": "HasAbility", "contents": "HasAbility(${1:pszAbilityName})" },
		{ "trigger": "CDOTA_BaseNPC_HasAnyActiveAbilities", "contents": "HasAnyActiveAbilities()" },
		{ "trigger": "HasAnyActiveAbilities", "contents": "HasAnyActiveAbilities()" },
		{ "trigger": "CDOTA_BaseNPC_HasAttackCapability", "contents": "HasAttackCapability()" },
		{ "trigger": "HasAttackCapability", "contents": "HasAttackCapability()" },
		{ "trigger": "CDOTA_BaseNPC_HasFlyMovementCapability", "contents": "HasFlyMovementCapability()" },
		{ "trigger": "HasFlyMovementCapability", "contents": "HasFlyMovementCapability()" },
		{ "trigger": "CDOTA_BaseNPC_HasFlyingVision", "contents": "HasFlyingVision()" },
		{ "trigger": "HasFlyingVision", "contents": "HasFlyingVision()" },
		{ "trigger": "CDOTA_BaseNPC_HasGroundMovementCapability", "contents": "HasGroundMovementCapability()" },
		{ "trigger": "HasGroundMovementCapability", "contents": "HasGroundMovementCapability()" },
		{ "trigger": "CDOTA_BaseNPC_HasInventory", "contents": "HasInventory()" },
		{ "trigger": "HasInventory", "contents": "HasInventory()" },
		{ "trigger": "CDOTA_BaseNPC_HasItemInInventory", "contents": "HasItemInInventory(${1:pItemName})" },
		{ "trigger": "HasItemInInventory", "contents": "HasItemInInventory(${1:pItemName})" },
		{ "trigger": "CDOTA_BaseNPC_HasModifier", "contents": "HasModifier(${1:pszScriptName})" },
		{ "trigger": "HasModifier", "contents": "HasModifier(${1:pszScriptName})" },
		{ "trigger": "CDOTA_BaseNPC_HasMovementCapability", "contents": "HasMovementCapability()" },
		{ "trigger": "HasMovementCapability", "contents": "HasMovementCapability()" },
		{ "trigger": "CDOTA_BaseNPC_HasScepter", "contents": "HasScepter()" },
		{ "trigger": "HasScepter", "contents": "HasScepter()" },
		{ "trigger": "CDOTA_BaseNPC_Heal", "contents": "Heal(${1:flAmount},${2:hInflictor})" },
		{ "trigger": "Heal", "contents": "Heal(${1:flAmount},${2:hInflictor})" },
		{ "trigger": "CDOTA_BaseNPC_Hold", "contents": "Hold()" },
		{ "trigger": "Hold", "contents": "Hold()" },
		{ "trigger": "CDOTA_BaseNPC_Interrupt", "contents": "Interrupt()" },
		{ "trigger": "Interrupt", "contents": "Interrupt()" },
		{ "trigger": "CDOTA_BaseNPC_InterruptChannel", "contents": "InterruptChannel()" },
		{ "trigger": "InterruptChannel", "contents": "InterruptChannel()" },
		{ "trigger": "CDOTA_BaseNPC_InterruptMotionControllers", "contents": "InterruptMotionControllers(${1:bFindClearSpace})" },
		{ "trigger": "InterruptMotionControllers", "contents": "InterruptMotionControllers(${1:bFindClearSpace})" },
		{ "trigger": "CDOTA_BaseNPC_IsAlive", "contents": "IsAlive()" },
		{ "trigger": "IsAlive", "contents": "IsAlive()" },
		{ "trigger": "CDOTA_BaseNPC_IsAncient", "contents": "IsAncient()" },
		{ "trigger": "IsAncient", "contents": "IsAncient()" },
		{ "trigger": "CDOTA_BaseNPC_IsAttackImmune", "contents": "IsAttackImmune()" },
		{ "trigger": "IsAttackImmune", "contents": "IsAttackImmune()" },
		{ "trigger": "CDOTA_BaseNPC_IsAttacking", "contents": "IsAttacking()" },
		{ "trigger": "IsAttacking", "contents": "IsAttacking()" },
		{ "trigger": "CDOTA_BaseNPC_IsAttackingEntity", "contents": "IsAttackingEntity(${1:hEntity})" },
		{ "trigger": "IsAttackingEntity", "contents": "IsAttackingEntity(${1:hEntity})" },
		{ "trigger": "CDOTA_BaseNPC_IsBarracks", "contents": "IsBarracks()" },
		{ "trigger": "IsBarracks", "contents": "IsBarracks()" },
		{ "trigger": "CDOTA_BaseNPC_IsBlind", "contents": "IsBlind()" },
		{ "trigger": "IsBlind", "contents": "IsBlind()" },
		{ "trigger": "CDOTA_BaseNPC_IsBlockDisabled", "contents": "IsBlockDisabled()" },
		{ "trigger": "IsBlockDisabled", "contents": "IsBlockDisabled()" },
		{ "trigger": "CDOTA_BaseNPC_IsBoss", "contents": "IsBoss()" },
		{ "trigger": "IsBoss", "contents": "IsBoss()" },
		{ "trigger": "CDOTA_BaseNPC_IsBuilding", "contents": "IsBuilding()" },
		{ "trigger": "IsBuilding", "contents": "IsBuilding()" },
		{ "trigger": "CDOTA_BaseNPC_IsChanneling", "contents": "IsChanneling()" },
		{ "trigger": "IsChanneling", "contents": "IsChanneling()" },
		{ "trigger": "CDOTA_BaseNPC_IsClone", "contents": "IsClone()" },
		{ "trigger": "IsClone", "contents": "IsClone()" },
		{ "trigger": "CDOTA_BaseNPC_IsCommandRestricted", "contents": "IsCommandRestricted()" },
		{ "trigger": "IsCommandRestricted", "contents": "IsCommandRestricted()" },
		{ "trigger": "CDOTA_BaseNPC_IsConsideredHero", "contents": "IsConsideredHero()" },
		{ "trigger": "IsConsideredHero", "contents": "IsConsideredHero()" },
		{ "trigger": "CDOTA_BaseNPC_IsControllableByAnyPlayer", "contents": "IsControllableByAnyPlayer()" },
		{ "trigger": "IsControllableByAnyPlayer", "contents": "IsControllableByAnyPlayer()" },
		{ "trigger": "CDOTA_BaseNPC_IsCourier", "contents": "IsCourier()" },
		{ "trigger": "IsCourier", "contents": "IsCourier()" },
		{ "trigger": "CDOTA_BaseNPC_IsCreature", "contents": "IsCreature()" },
		{ "trigger": "IsCreature", "contents": "IsCreature()" },
		{ "trigger": "CDOTA_BaseNPC_IsCreep", "contents": "IsCreep()" },
		{ "trigger": "IsCreep", "contents": "IsCreep()" },
		{ "trigger": "CDOTA_BaseNPC_IsDeniable", "contents": "IsDeniable()" },
		{ "trigger": "IsDeniable", "contents": "IsDeniable()" },
		{ "trigger": "CDOTA_BaseNPC_IsDisarmed", "contents": "IsDisarmed()" },
		{ "trigger": "IsDisarmed", "contents": "IsDisarmed()" },
		{ "trigger": "CDOTA_BaseNPC_IsDominated", "contents": "IsDominated()" },
		{ "trigger": "IsDominated", "contents": "IsDominated()" },
		{ "trigger": "CDOTA_BaseNPC_IsEvadeDisabled", "contents": "IsEvadeDisabled()" },
		{ "trigger": "IsEvadeDisabled", "contents": "IsEvadeDisabled()" },
		{ "trigger": "CDOTA_BaseNPC_IsFort", "contents": "IsFort()" },
		{ "trigger": "IsFort", "contents": "IsFort()" },
		{ "trigger": "CDOTA_BaseNPC_IsFrozen", "contents": "IsFrozen()" },
		{ "trigger": "IsFrozen", "contents": "IsFrozen()" },
		{ "trigger": "CDOTA_BaseNPC_IsHero", "contents": "IsHero()" },
		{ "trigger": "IsHero", "contents": "IsHero()" },
		{ "trigger": "CDOTA_BaseNPC_IsHexed", "contents": "IsHexed()" },
		{ "trigger": "IsHexed", "contents": "IsHexed()" },
		{ "trigger": "CDOTA_BaseNPC_IsIdle", "contents": "IsIdle()" },
		{ "trigger": "IsIdle", "contents": "IsIdle()" },
		{ "trigger": "CDOTA_BaseNPC_IsIllusion", "contents": "IsIllusion()" },
		{ "trigger": "IsIllusion", "contents": "IsIllusion()" },
		{ "trigger": "CDOTA_BaseNPC_IsInvisible", "contents": "IsInvisible()" },
		{ "trigger": "IsInvisible", "contents": "IsInvisible()" },
		{ "trigger": "CDOTA_BaseNPC_IsInvulnerable", "contents": "IsInvulnerable()" },
		{ "trigger": "IsInvulnerable", "contents": "IsInvulnerable()" },
		{ "trigger": "CDOTA_BaseNPC_IsLowAttackPriority", "contents": "IsLowAttackPriority()" },
		{ "trigger": "IsLowAttackPriority", "contents": "IsLowAttackPriority()" },
		{ "trigger": "CDOTA_BaseNPC_IsMagicImmune", "contents": "IsMagicImmune()" },
		{ "trigger": "IsMagicImmune", "contents": "IsMagicImmune()" },
		{ "trigger": "CDOTA_BaseNPC_IsMechanical", "contents": "IsMechanical()" },
		{ "trigger": "IsMechanical", "contents": "IsMechanical()" },
		{ "trigger": "CDOTA_BaseNPC_IsMovementImpaired", "contents": "IsMovementImpaired()" },
		{ "trigger": "IsMovementImpaired", "contents": "IsMovementImpaired()" },
		{ "trigger": "CDOTA_BaseNPC_IsMuted", "contents": "IsMuted()" },
		{ "trigger": "IsMuted", "contents": "IsMuted()" },
		{ "trigger": "CDOTA_BaseNPC_IsNeutralUnitType", "contents": "IsNeutralUnitType()" },
		{ "trigger": "IsNeutralUnitType", "contents": "IsNeutralUnitType()" },
		{ "trigger": "CDOTA_BaseNPC_IsNightmared", "contents": "IsNightmared()" },
		{ "trigger": "IsNightmared", "contents": "IsNightmared()" },
		{ "trigger": "CDOTA_BaseNPC_IsOpposingTeam", "contents": "IsOpposingTeam(${1:nTeam})" },
		{ "trigger": "IsOpposingTeam", "contents": "IsOpposingTeam(${1:nTeam})" },
		{ "trigger": "CDOTA_BaseNPC_IsOther", "contents": "IsOther()" },
		{ "trigger": "IsOther", "contents": "IsOther()" },
		{ "trigger": "CDOTA_BaseNPC_IsOutOfGame", "contents": "IsOutOfGame()" },
		{ "trigger": "IsOutOfGame", "contents": "IsOutOfGame()" },
		{ "trigger": "CDOTA_BaseNPC_IsOwnedByAnyPlayer", "contents": "IsOwnedByAnyPlayer()" },
		{ "trigger": "IsOwnedByAnyPlayer", "contents": "IsOwnedByAnyPlayer()" },
		{ "trigger": "CDOTA_BaseNPC_IsPhantom", "contents": "IsPhantom()" },
		{ "trigger": "IsPhantom", "contents": "IsPhantom()" },
		{ "trigger": "CDOTA_BaseNPC_IsPhantomBlocker", "contents": "IsPhantomBlocker()" },
		{ "trigger": "IsPhantomBlocker", "contents": "IsPhantomBlocker()" },
		{ "trigger": "CDOTA_BaseNPC_IsPhased", "contents": "IsPhased()" },
		{ "trigger": "IsPhased", "contents": "IsPhased()" },
		{ "trigger": "CDOTA_BaseNPC_IsPositionInRange", "contents": "IsPositionInRange(${1:vPosition},${2:flRange})" },
		{ "trigger": "IsPositionInRange", "contents": "IsPositionInRange(${1:vPosition},${2:flRange})" },
		{ "trigger": "CDOTA_BaseNPC_IsRangedAttacker", "contents": "IsRangedAttacker()" },
		{ "trigger": "IsRangedAttacker", "contents": "IsRangedAttacker()" },
		{ "trigger": "CDOTA_BaseNPC_IsRealHero", "contents": "IsRealHero()" },
		{ "trigger": "IsRealHero", "contents": "IsRealHero()" },
		{ "trigger": "CDOTA_BaseNPC_IsRooted", "contents": "IsRooted()" },
		{ "trigger": "IsRooted", "contents": "IsRooted()" },
		{ "trigger": "CDOTA_BaseNPC_IsSilenced", "contents": "IsSilenced()" },
		{ "trigger": "IsSilenced", "contents": "IsSilenced()" },
		{ "trigger": "CDOTA_BaseNPC_IsSpeciallyDeniable", "contents": "IsSpeciallyDeniable()" },
		{ "trigger": "IsSpeciallyDeniable", "contents": "IsSpeciallyDeniable()" },
		{ "trigger": "CDOTA_BaseNPC_IsStunned", "contents": "IsStunned()" },
		{ "trigger": "IsStunned", "contents": "IsStunned()" },
		{ "trigger": "CDOTA_BaseNPC_IsSummoned", "contents": "IsSummoned()" },
		{ "trigger": "IsSummoned", "contents": "IsSummoned()" },
		{ "trigger": "CDOTA_BaseNPC_IsTower", "contents": "IsTower()" },
		{ "trigger": "IsTower", "contents": "IsTower()" },
		{ "trigger": "CDOTA_BaseNPC_IsUnableToMiss", "contents": "IsUnableToMiss()" },
		{ "trigger": "IsUnableToMiss", "contents": "IsUnableToMiss()" },
		{ "trigger": "CDOTA_BaseNPC_IsUnselectable", "contents": "IsUnselectable()" },
		{ "trigger": "IsUnselectable", "contents": "IsUnselectable()" },
		{ "trigger": "CDOTA_BaseNPC_Kill", "contents": "Kill(${1:hAbility},${2:hAttacker})" },
		{ "trigger": "Kill", "contents": "Kill(${1:hAbility},${2:hAttacker})" },
		{ "trigger": "CDOTA_BaseNPC_MakeIllusion", "contents": "MakeIllusion()" },
		{ "trigger": "MakeIllusion", "contents": "MakeIllusion()" },
		{ "trigger": "CDOTA_BaseNPC_MakePhantomBlocker", "contents": "MakePhantomBlocker()" },
		{ "trigger": "MakePhantomBlocker", "contents": "MakePhantomBlocker()" },
		{ "trigger": "CDOTA_BaseNPC_MakeVisibleDueToAttack", "contents": "MakeVisibleDueToAttack(${1:iTeam})" },
		{ "trigger": "MakeVisibleDueToAttack", "contents": "MakeVisibleDueToAttack(${1:iTeam})" },
		{ "trigger": "CDOTA_BaseNPC_MakeVisibleToTeam", "contents": "MakeVisibleToTeam(${1:iTeam},${2:flDuration})" },
		{ "trigger": "MakeVisibleToTeam", "contents": "MakeVisibleToTeam(${1:iTeam},${2:flDuration})" },
		{ "trigger": "CDOTA_BaseNPC_ManageModelChanges", "contents": "ManageModelChanges()" },
		{ "trigger": "ManageModelChanges", "contents": "ManageModelChanges()" },
		{ "trigger": "CDOTA_BaseNPC_ModifyHealth", "contents": "ModifyHealth(${1:iDesiredHealthValue},${2:hAbility},${3:bLethal},${4:iAdditionalFlags})" },
		{ "trigger": "ModifyHealth", "contents": "ModifyHealth(${1:iDesiredHealthValue},${2:hAbility},${3:bLethal},${4:iAdditionalFlags})" },
		{ "trigger": "CDOTA_BaseNPC_MoveToNPC", "contents": "MoveToNPC(${1:hNPC})" },
		{ "trigger": "MoveToNPC", "contents": "MoveToNPC(${1:hNPC})" },
		{ "trigger": "CDOTA_BaseNPC_MoveToNPCToGiveItem", "contents": "MoveToNPCToGiveItem(${1:hNPC},${2:hItem})" },
		{ "trigger": "MoveToNPCToGiveItem", "contents": "MoveToNPCToGiveItem(${1:hNPC},${2:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_MoveToPosition", "contents": "MoveToPosition(${1:vDest})" },
		{ "trigger": "MoveToPosition", "contents": "MoveToPosition(${1:vDest})" },
		{ "trigger": "CDOTA_BaseNPC_MoveToPositionAggressive", "contents": "MoveToPositionAggressive(${1:vDest})" },
		{ "trigger": "MoveToPositionAggressive", "contents": "MoveToPositionAggressive(${1:vDest})" },
		{ "trigger": "CDOTA_BaseNPC_MoveToTargetToAttack", "contents": "MoveToTargetToAttack(${1:hTarget})" },
		{ "trigger": "MoveToTargetToAttack", "contents": "MoveToTargetToAttack(${1:hTarget})" },
		{ "trigger": "CDOTA_BaseNPC_NoHealthBar", "contents": "NoHealthBar()" },
		{ "trigger": "NoHealthBar", "contents": "NoHealthBar()" },
		{ "trigger": "CDOTA_BaseNPC_NoTeamMoveTo", "contents": "NoTeamMoveTo()" },
		{ "trigger": "NoTeamMoveTo", "contents": "NoTeamMoveTo()" },
		{ "trigger": "CDOTA_BaseNPC_NoTeamSelect", "contents": "NoTeamSelect()" },
		{ "trigger": "NoTeamSelect", "contents": "NoTeamSelect()" },
		{ "trigger": "CDOTA_BaseNPC_NoUnitCollision", "contents": "NoUnitCollision()" },
		{ "trigger": "NoUnitCollision", "contents": "NoUnitCollision()" },
		{ "trigger": "CDOTA_BaseNPC_NotOnMinimap", "contents": "NotOnMinimap()" },
		{ "trigger": "NotOnMinimap", "contents": "NotOnMinimap()" },
		{ "trigger": "CDOTA_BaseNPC_NotOnMinimapForEnemies", "contents": "NotOnMinimapForEnemies()" },
		{ "trigger": "NotOnMinimapForEnemies", "contents": "NotOnMinimapForEnemies()" },
		{ "trigger": "CDOTA_BaseNPC_NotifyWearablesOfModelChange", "contents": "NotifyWearablesOfModelChange(${1:bOriginalModel})" },
		{ "trigger": "NotifyWearablesOfModelChange", "contents": "NotifyWearablesOfModelChange(${1:bOriginalModel})" },
		{ "trigger": "CDOTA_BaseNPC_PassivesDisabled", "contents": "PassivesDisabled()" },
		{ "trigger": "PassivesDisabled", "contents": "PassivesDisabled()" },
		{ "trigger": "CDOTA_BaseNPC_PatrolToPosition", "contents": "PatrolToPosition(${1:vDest})" },
		{ "trigger": "PatrolToPosition", "contents": "PatrolToPosition(${1:vDest})" },
		{ "trigger": "CDOTA_BaseNPC_PerformAttack", "contents": "PerformAttack(${1:hTarget},${2:bUseCastAttackOrb},${3:bProcessProcs},${4:bSkipCooldown},${5:bIgnoreInvis},${6:bUseProjectile})" },
		{ "trigger": "PerformAttack", "contents": "PerformAttack(${1:hTarget},${2:bUseCastAttackOrb},${3:bProcessProcs},${4:bSkipCooldown},${5:bIgnoreInvis},${6:bUseProjectile})" },
		{ "trigger": "CDOTA_BaseNPC_PickupDroppedItem", "contents": "PickupDroppedItem(${1:hItem})" },
		{ "trigger": "PickupDroppedItem", "contents": "PickupDroppedItem(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_PickupRune", "contents": "PickupRune(${1:hItem})" },
		{ "trigger": "PickupRune", "contents": "PickupRune(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_ProvidesVision", "contents": "ProvidesVision()" },
		{ "trigger": "ProvidesVision", "contents": "ProvidesVision()" },
		{ "trigger": "CDOTA_BaseNPC_Purge", "contents": "Purge(${1:bRemovePositiveBuffs},${2:bRemoveDebuffs},${3:bFrameOnly},${4:bRemoveStuns},${5:bRemoveExceptions})" },
		{ "trigger": "Purge", "contents": "Purge(${1:bRemovePositiveBuffs},${2:bRemoveDebuffs},${3:bFrameOnly},${4:bRemoveStuns},${5:bRemoveExceptions})" },
		{ "trigger": "CDOTA_BaseNPC_ReduceMana", "contents": "ReduceMana(${1:flAmount})" },
		{ "trigger": "ReduceMana", "contents": "ReduceMana(${1:flAmount})" },
		{ "trigger": "CDOTA_BaseNPC_RemoveAbility", "contents": "RemoveAbility(${1:pszAbilityName})" },
		{ "trigger": "RemoveAbility", "contents": "RemoveAbility(${1:pszAbilityName})" },
		{ "trigger": "CDOTA_BaseNPC_RemoveGesture", "contents": "RemoveGesture(${1:nActivity})" },
		{ "trigger": "RemoveGesture", "contents": "RemoveGesture(${1:nActivity})" },
		{ "trigger": "CDOTA_BaseNPC_RemoveHorizontalMotionController", "contents": "RemoveHorizontalMotionController(${1:hBuff})" },
		{ "trigger": "RemoveHorizontalMotionController", "contents": "RemoveHorizontalMotionController(${1:hBuff})" },
		{ "trigger": "CDOTA_BaseNPC_RemoveItem", "contents": "RemoveItem(${1:hItem})" },
		{ "trigger": "RemoveItem", "contents": "RemoveItem(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_RemoveModifierByName", "contents": "RemoveModifierByName(${1:pszScriptName})" },
		{ "trigger": "RemoveModifierByName", "contents": "RemoveModifierByName(${1:pszScriptName})" },
		{ "trigger": "CDOTA_BaseNPC_RemoveModifierByNameAndCaster", "contents": "RemoveModifierByNameAndCaster(${1:pszScriptName},${2:hCaster})" },
		{ "trigger": "RemoveModifierByNameAndCaster", "contents": "RemoveModifierByNameAndCaster(${1:pszScriptName},${2:hCaster})" },
		{ "trigger": "CDOTA_BaseNPC_RemoveNoDraw", "contents": "RemoveNoDraw()" },
		{ "trigger": "RemoveNoDraw", "contents": "RemoveNoDraw()" },
		{ "trigger": "CDOTA_BaseNPC_RemoveVerticalMotionController", "contents": "RemoveVerticalMotionController(${1:hBuff})" },
		{ "trigger": "RemoveVerticalMotionController", "contents": "RemoveVerticalMotionController(${1:hBuff})" },
		{ "trigger": "CDOTA_BaseNPC_RespawnUnit", "contents": "RespawnUnit()" },
		{ "trigger": "RespawnUnit", "contents": "RespawnUnit()" },
		{ "trigger": "CDOTA_BaseNPC_Script_TakeItem", "contents": "Script_TakeItem(${1:hItem})" },
		{ "trigger": "Script_TakeItem", "contents": "Script_TakeItem(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_SellItem", "contents": "SellItem(${1:hItem})" },
		{ "trigger": "SellItem", "contents": "SellItem(${1:hItem})" },
		{ "trigger": "CDOTA_BaseNPC_SetAbilityByIndex", "contents": "SetAbilityByIndex(${1:hAbility},${2:iIndex})" },
		{ "trigger": "SetAbilityByIndex", "contents": "SetAbilityByIndex(${1:hAbility},${2:iIndex})" },
		{ "trigger": "CDOTA_BaseNPC_SetAcquisitionRange", "contents": "SetAcquisitionRange(${1:nRange})" },
		{ "trigger": "SetAcquisitionRange", "contents": "SetAcquisitionRange(${1:nRange})" },
		{ "trigger": "CDOTA_BaseNPC_SetAdditionalBattleMusicWeight", "contents": "SetAdditionalBattleMusicWeight(${1:flWeight})" },
		{ "trigger": "SetAdditionalBattleMusicWeight", "contents": "SetAdditionalBattleMusicWeight(${1:flWeight})" },
		{ "trigger": "CDOTA_BaseNPC_SetAggroTarget", "contents": "SetAggroTarget(${1:hAggroTarget})" },
		{ "trigger": "SetAggroTarget", "contents": "SetAggroTarget(${1:hAggroTarget})" },
		{ "trigger": "CDOTA_BaseNPC_SetAttackCapability", "contents": "SetAttackCapability(${1:iAttackCapabilities})" },
		{ "trigger": "SetAttackCapability", "contents": "SetAttackCapability(${1:iAttackCapabilities})" },
		{ "trigger": "CDOTA_BaseNPC_SetAttacking", "contents": "SetAttacking(${1:hAttackTarget})" },
		{ "trigger": "SetAttacking", "contents": "SetAttacking(${1:hAttackTarget})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseAttackTime", "contents": "SetBaseAttackTime(${1:flBaseAttackTime})" },
		{ "trigger": "SetBaseAttackTime", "contents": "SetBaseAttackTime(${1:flBaseAttackTime})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseDamageMax", "contents": "SetBaseDamageMax(${1:nMax})" },
		{ "trigger": "SetBaseDamageMax", "contents": "SetBaseDamageMax(${1:nMax})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseDamageMin", "contents": "SetBaseDamageMin(${1:nMin})" },
		{ "trigger": "SetBaseDamageMin", "contents": "SetBaseDamageMin(${1:nMin})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseHealthRegen", "contents": "SetBaseHealthRegen(${1:flHealthRegen})" },
		{ "trigger": "SetBaseHealthRegen", "contents": "SetBaseHealthRegen(${1:flHealthRegen})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseMagicalResistanceValue", "contents": "SetBaseMagicalResistanceValue(${1:flMagicalResistanceValue})" },
		{ "trigger": "SetBaseMagicalResistanceValue", "contents": "SetBaseMagicalResistanceValue(${1:flMagicalResistanceValue})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseManaRegen", "contents": "SetBaseManaRegen(${1:flManaRegen})" },
		{ "trigger": "SetBaseManaRegen", "contents": "SetBaseManaRegen(${1:flManaRegen})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseMaxHealth", "contents": "SetBaseMaxHealth(${1:flBaseMaxHealth})" },
		{ "trigger": "SetBaseMaxHealth", "contents": "SetBaseMaxHealth(${1:flBaseMaxHealth})" },
		{ "trigger": "CDOTA_BaseNPC_SetBaseMoveSpeed", "contents": "SetBaseMoveSpeed(${1:iMoveSpeed})" },
		{ "trigger": "SetBaseMoveSpeed", "contents": "SetBaseMoveSpeed(${1:iMoveSpeed})" },
		{ "trigger": "CDOTA_BaseNPC_SetCanSellItems", "contents": "SetCanSellItems(${1:bCanSellItems})" },
		{ "trigger": "SetCanSellItems", "contents": "SetCanSellItems(${1:bCanSellItems})" },
		{ "trigger": "CDOTA_BaseNPC_SetControllableByPlayer", "contents": "SetControllableByPlayer(${1:iIndex},${2:bSkipAdjustingPosition})" },
		{ "trigger": "SetControllableByPlayer", "contents": "SetControllableByPlayer(${1:iIndex},${2:bSkipAdjustingPosition})" },
		{ "trigger": "CDOTA_BaseNPC_SetCursorCastTarget", "contents": "SetCursorCastTarget(${1:hEntity})" },
		{ "trigger": "SetCursorCastTarget", "contents": "SetCursorCastTarget(${1:hEntity})" },
		{ "trigger": "CDOTA_BaseNPC_SetCursorPosition", "contents": "SetCursorPosition(${1:vLocation})" },
		{ "trigger": "SetCursorPosition", "contents": "SetCursorPosition(${1:vLocation})" },
		{ "trigger": "CDOTA_BaseNPC_SetCursorTargetingNothing", "contents": "SetCursorTargetingNothing(${1:bTargetingNothing})" },
		{ "trigger": "SetCursorTargetingNothing", "contents": "SetCursorTargetingNothing(${1:bTargetingNothing})" },
		{ "trigger": "CDOTA_BaseNPC_SetCustomHealthLabel", "contents": "SetCustomHealthLabel(${1:pLabel},${2:r},${3:g},${4:b})" },
		{ "trigger": "SetCustomHealthLabel", "contents": "SetCustomHealthLabel(${1:pLabel},${2:r},${3:g},${4:b})" },
		{ "trigger": "CDOTA_BaseNPC_SetDayTimeVisionRange", "contents": "SetDayTimeVisionRange(${1:iRange})" },
		{ "trigger": "SetDayTimeVisionRange", "contents": "SetDayTimeVisionRange(${1:iRange})" },
		{ "trigger": "CDOTA_BaseNPC_SetDeathXP", "contents": "SetDeathXP(${1:iXPBounty})" },
		{ "trigger": "SetDeathXP", "contents": "SetDeathXP(${1:iXPBounty})" },
		{ "trigger": "CDOTA_BaseNPC_SetForceAttackTarget", "contents": "SetForceAttackTarget(${1:hNPC})" },
		{ "trigger": "SetForceAttackTarget", "contents": "SetForceAttackTarget(${1:hNPC})" },
		{ "trigger": "CDOTA_BaseNPC_SetHasInventory", "contents": "SetHasInventory(${1:bHasInventory})" },
		{ "trigger": "SetHasInventory", "contents": "SetHasInventory(${1:bHasInventory})" },
		{ "trigger": "CDOTA_BaseNPC_SetHullRadius", "contents": "SetHullRadius(${1:flHullRadius})" },
		{ "trigger": "SetHullRadius", "contents": "SetHullRadius(${1:flHullRadius})" },
		{ "trigger": "CDOTA_BaseNPC_SetIdleAcquire", "contents": "SetIdleAcquire(${1:bIdleAcquire})" },
		{ "trigger": "SetIdleAcquire", "contents": "SetIdleAcquire(${1:bIdleAcquire})" },
		{ "trigger": "CDOTA_BaseNPC_SetInitialGoalEntity", "contents": "SetInitialGoalEntity(${1:hGoal})" },
		{ "trigger": "SetInitialGoalEntity", "contents": "SetInitialGoalEntity(${1:hGoal})" },
		{ "trigger": "CDOTA_BaseNPC_SetMana", "contents": "SetMana(${1:flMana})" },
		{ "trigger": "SetMana", "contents": "SetMana(${1:flMana})" },
		{ "trigger": "CDOTA_BaseNPC_SetMaximumGoldBounty", "contents": "SetMaximumGoldBounty(${1:iGoldBountyMax})" },
		{ "trigger": "SetMaximumGoldBounty", "contents": "SetMaximumGoldBounty(${1:iGoldBountyMax})" },
		{ "trigger": "CDOTA_BaseNPC_SetMinimumGoldBounty", "contents": "SetMinimumGoldBounty(${1:iGoldBountyMin})" },
		{ "trigger": "SetMinimumGoldBounty", "contents": "SetMinimumGoldBounty(${1:iGoldBountyMin})" },
		{ "trigger": "CDOTA_BaseNPC_SetModifierStackCount", "contents": "SetModifierStackCount(${1:pszScriptName},${2:hCaster},${3:nStackCount})" },
		{ "trigger": "SetModifierStackCount", "contents": "SetModifierStackCount(${1:pszScriptName},${2:hCaster},${3:nStackCount})" },
		{ "trigger": "CDOTA_BaseNPC_SetMoveCapability", "contents": "SetMoveCapability(${1:iMoveCapabilities})" },
		{ "trigger": "SetMoveCapability", "contents": "SetMoveCapability(${1:iMoveCapabilities})" },
		{ "trigger": "CDOTA_BaseNPC_SetMustReachEachGoalEntity", "contents": "SetMustReachEachGoalEntity(${1:must})" },
		{ "trigger": "SetMustReachEachGoalEntity", "contents": "SetMustReachEachGoalEntity(${1:must})" },
		{ "trigger": "CDOTA_BaseNPC_SetNeverMoveToClearSpace", "contents": "SetNeverMoveToClearSpace(${1:neverMoveToClearSpace})" },
		{ "trigger": "SetNeverMoveToClearSpace", "contents": "SetNeverMoveToClearSpace(${1:neverMoveToClearSpace})" },
		{ "trigger": "CDOTA_BaseNPC_SetNightTimeVisionRange", "contents": "SetNightTimeVisionRange(${1:iRange})" },
		{ "trigger": "SetNightTimeVisionRange", "contents": "SetNightTimeVisionRange(${1:iRange})" },
		{ "trigger": "CDOTA_BaseNPC_SetOrigin", "contents": "SetOrigin(${1:vLocation})" },
		{ "trigger": "SetOrigin", "contents": "SetOrigin(${1:vLocation})" },
		{ "trigger": "CDOTA_BaseNPC_SetOriginalModel", "contents": "SetOriginalModel(${1:pszModelName})" },
		{ "trigger": "SetOriginalModel", "contents": "SetOriginalModel(${1:pszModelName})" },
		{ "trigger": "CDOTA_BaseNPC_SetPhysicalArmorBaseValue", "contents": "SetPhysicalArmorBaseValue(${1:flPhysicalArmorValue})" },
		{ "trigger": "SetPhysicalArmorBaseValue", "contents": "SetPhysicalArmorBaseValue(${1:flPhysicalArmorValue})" },
		{ "trigger": "CDOTA_BaseNPC_SetRangedProjectileName", "contents": "SetRangedProjectileName(${1:pProjectileName})" },
		{ "trigger": "SetRangedProjectileName", "contents": "SetRangedProjectileName(${1:pProjectileName})" },
		{ "trigger": "CDOTA_BaseNPC_SetStolenScepter", "contents": "SetStolenScepter(${1:bStolenScepter})" },
		{ "trigger": "SetStolenScepter", "contents": "SetStolenScepter(${1:bStolenScepter})" },
		{ "trigger": "CDOTA_BaseNPC_SetUnitName", "contents": "SetUnitName(${1:pName})" },
		{ "trigger": "SetUnitName", "contents": "SetUnitName(${1:pName})" },
		{ "trigger": "CDOTA_BaseNPC_ShouldIdleAcquire", "contents": "ShouldIdleAcquire()" },
		{ "trigger": "ShouldIdleAcquire", "contents": "ShouldIdleAcquire()" },
		{ "trigger": "CDOTA_BaseNPC_SpendMana", "contents": "SpendMana(${1:flManaSpent},${2:hAbility})" },
		{ "trigger": "SpendMana", "contents": "SpendMana(${1:flManaSpent},${2:hAbility})" },
		{ "trigger": "CDOTA_BaseNPC_StartGesture", "contents": "StartGesture(${1:nActivity})" },
		{ "trigger": "StartGesture", "contents": "StartGesture(${1:nActivity})" },
		{ "trigger": "CDOTA_BaseNPC_StartGestureWithPlaybackRate", "contents": "StartGestureWithPlaybackRate(${1:nActivity},${2:flRate})" },
		{ "trigger": "StartGestureWithPlaybackRate", "contents": "StartGestureWithPlaybackRate(${1:nActivity},${2:flRate})" },
		{ "trigger": "CDOTA_BaseNPC_Stop", "contents": "Stop()" },
		{ "trigger": "Stop", "contents": "Stop()" },
		{ "trigger": "CDOTA_BaseNPC_SwapAbilities", "contents": "SwapAbilities(${1:pAbilityName1},${2:pAbilityName2},${3:bEnable1},${4:bEnable2})" },
		{ "trigger": "SwapAbilities", "contents": "SwapAbilities(${1:pAbilityName1},${2:pAbilityName2},${3:bEnable1},${4:bEnable2})" },
		{ "trigger": "CDOTA_BaseNPC_SwapItems", "contents": "SwapItems(${1:slot1},${2:slot2})" },
		{ "trigger": "SwapItems", "contents": "SwapItems(${1:slot1},${2:slot2})" },
		{ "trigger": "CDOTA_BaseNPC_TimeUntilNextAttack", "contents": "TimeUntilNextAttack()" },
		{ "trigger": "TimeUntilNextAttack", "contents": "TimeUntilNextAttack()" },
		{ "trigger": "CDOTA_BaseNPC_TriggerModifierDodge", "contents": "TriggerModifierDodge()" },
		{ "trigger": "TriggerModifierDodge", "contents": "TriggerModifierDodge()" },
		{ "trigger": "CDOTA_BaseNPC_TriggerSpellAbsorb", "contents": "TriggerSpellAbsorb(${1:hAbility})" },
		{ "trigger": "TriggerSpellAbsorb", "contents": "TriggerSpellAbsorb(${1:hAbility})" },
		{ "trigger": "CDOTA_BaseNPC_TriggerSpellReflect", "contents": "TriggerSpellReflect(${1:hAbility})" },
		{ "trigger": "TriggerSpellReflect", "contents": "TriggerSpellReflect(${1:hAbility})" },
		{ "trigger": "CDOTA_BaseNPC_UnitCanRespawn", "contents": "UnitCanRespawn()" },
		{ "trigger": "UnitCanRespawn", "contents": "UnitCanRespawn()" },
		{ "trigger": "CDOTA_BaseNPC_Building_GetInvulnCount", "contents": "GetInvulnCount()" },
		{ "trigger": "GetInvulnCount", "contents": "GetInvulnCount()" },
		{ "trigger": "CDOTA_BaseNPC_Building_SetInvulnCount", "contents": "SetInvulnCount(${1:nInvulnCount})" },
		{ "trigger": "SetInvulnCount", "contents": "SetInvulnCount(${1:nInvulnCount})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_AddItemDrop", "contents": "AddItemDrop(${1:hDropData})" },
		{ "trigger": "AddItemDrop", "contents": "AddItemDrop(${1:hDropData})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_CreatureLevelUp", "contents": "CreatureLevelUp(${1:iLevels})" },
		{ "trigger": "CreatureLevelUp", "contents": "CreatureLevelUp(${1:iLevels})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_IsChampion", "contents": "IsChampion()" },
		{ "trigger": "IsChampion", "contents": "IsChampion()" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetArmorGain", "contents": "SetArmorGain(${1:flArmorGain})" },
		{ "trigger": "SetArmorGain", "contents": "SetArmorGain(${1:flArmorGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetAttackTimeGain", "contents": "SetAttackTimeGain(${1:flAttackTimeGain})" },
		{ "trigger": "SetAttackTimeGain", "contents": "SetAttackTimeGain(${1:flAttackTimeGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetBountyGain", "contents": "SetBountyGain(${1:nBountyGain})" },
		{ "trigger": "SetBountyGain", "contents": "SetBountyGain(${1:nBountyGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetChampion", "contents": "SetChampion(${1:bIsChampion})" },
		{ "trigger": "SetChampion", "contents": "SetChampion(${1:bIsChampion})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetDamageGain", "contents": "SetDamageGain(${1:nDamageGain})" },
		{ "trigger": "SetDamageGain", "contents": "SetDamageGain(${1:nDamageGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetDisableResistanceGain", "contents": "SetDisableResistanceGain(${1:flDisableResistanceGain})" },
		{ "trigger": "SetDisableResistanceGain", "contents": "SetDisableResistanceGain(${1:flDisableResistanceGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetHPGain", "contents": "SetHPGain(${1:nHPGain})" },
		{ "trigger": "SetHPGain", "contents": "SetHPGain(${1:nHPGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetHPRegenGain", "contents": "SetHPRegenGain(${1:flHPRegenGain})" },
		{ "trigger": "SetHPRegenGain", "contents": "SetHPRegenGain(${1:flHPRegenGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetMagicResistanceGain", "contents": "SetMagicResistanceGain(${1:flMagicResistanceGain})" },
		{ "trigger": "SetMagicResistanceGain", "contents": "SetMagicResistanceGain(${1:flMagicResistanceGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetManaGain", "contents": "SetManaGain(${1:nManaGain})" },
		{ "trigger": "SetManaGain", "contents": "SetManaGain(${1:nManaGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetManaRegenGain", "contents": "SetManaRegenGain(${1:flManaRegenGain})" },
		{ "trigger": "SetManaRegenGain", "contents": "SetManaRegenGain(${1:flManaRegenGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetMoveSpeedGain", "contents": "SetMoveSpeedGain(${1:nMoveSpeedGain})" },
		{ "trigger": "SetMoveSpeedGain", "contents": "SetMoveSpeedGain(${1:nMoveSpeedGain})" },
		{ "trigger": "CDOTA_BaseNPC_Creature_SetXPGain", "contents": "SetXPGain(${1:nXPGain})" },
		{ "trigger": "SetXPGain", "contents": "SetXPGain(${1:nXPGain})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_AddExperience", "contents": "AddExperience(${1:flXP},${2:nReason},${3:bApplyBotDifficultyScaling},${4:bIncrementTotal})" },
		{ "trigger": "AddExperience", "contents": "AddExperience(${1:flXP},${2:nReason},${3:bApplyBotDifficultyScaling},${4:bIncrementTotal})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_Buyback", "contents": "Buyback()" },
		{ "trigger": "Buyback", "contents": "Buyback()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_CalculateStatBonus", "contents": "CalculateStatBonus()" },
		{ "trigger": "CalculateStatBonus", "contents": "CalculateStatBonus()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_CanEarnGold", "contents": "CanEarnGold()" },
		{ "trigger": "CanEarnGold", "contents": "CanEarnGold()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ClearLastHitMultikill", "contents": "ClearLastHitMultikill()" },
		{ "trigger": "ClearLastHitMultikill", "contents": "ClearLastHitMultikill()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ClearLastHitStreak", "contents": "ClearLastHitStreak()" },
		{ "trigger": "ClearLastHitStreak", "contents": "ClearLastHitStreak()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ClearStreak", "contents": "ClearStreak()" },
		{ "trigger": "ClearStreak", "contents": "ClearStreak()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetAbilityPoints", "contents": "GetAbilityPoints()" },
		{ "trigger": "GetAbilityPoints", "contents": "GetAbilityPoints()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetAdditionalOwnedUnits", "contents": "GetAdditionalOwnedUnits()" },
		{ "trigger": "GetAdditionalOwnedUnits", "contents": "GetAdditionalOwnedUnits()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetAgility", "contents": "GetAgility()" },
		{ "trigger": "GetAgility", "contents": "GetAgility()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetAgilityGain", "contents": "GetAgilityGain()" },
		{ "trigger": "GetAgilityGain", "contents": "GetAgilityGain()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetAssists", "contents": "GetAssists()" },
		{ "trigger": "GetAssists", "contents": "GetAssists()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetAttacker", "contents": "GetAttacker(${1:nIndex})" },
		{ "trigger": "GetAttacker", "contents": "GetAttacker(${1:nIndex})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBaseAgility", "contents": "GetBaseAgility()" },
		{ "trigger": "GetBaseAgility", "contents": "GetBaseAgility()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBaseDamageMax", "contents": "GetBaseDamageMax()" },
		{ "trigger": "GetBaseDamageMax", "contents": "GetBaseDamageMax()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBaseDamageMin", "contents": "GetBaseDamageMin()" },
		{ "trigger": "GetBaseDamageMin", "contents": "GetBaseDamageMin()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBaseIntellect", "contents": "GetBaseIntellect()" },
		{ "trigger": "GetBaseIntellect", "contents": "GetBaseIntellect()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBaseStrength", "contents": "GetBaseStrength()" },
		{ "trigger": "GetBaseStrength", "contents": "GetBaseStrength()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBonusDamageFromPrimaryStat", "contents": "GetBonusDamageFromPrimaryStat()" },
		{ "trigger": "GetBonusDamageFromPrimaryStat", "contents": "GetBonusDamageFromPrimaryStat()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBuybackCooldownTime", "contents": "GetBuybackCooldownTime()" },
		{ "trigger": "GetBuybackCooldownTime", "contents": "GetBuybackCooldownTime()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBuybackCost", "contents": "GetBuybackCost()" },
		{ "trigger": "GetBuybackCost", "contents": "GetBuybackCost()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetBuybackGoldLimitTime", "contents": "GetBuybackGoldLimitTime()" },
		{ "trigger": "GetBuybackGoldLimitTime", "contents": "GetBuybackGoldLimitTime()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetCurrentXP", "contents": "GetCurrentXP()" },
		{ "trigger": "GetCurrentXP", "contents": "GetCurrentXP()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetDeathGoldCost", "contents": "GetDeathGoldCost()" },
		{ "trigger": "GetDeathGoldCost", "contents": "GetDeathGoldCost()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetDeaths", "contents": "GetDeaths()" },
		{ "trigger": "GetDeaths", "contents": "GetDeaths()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetDenies", "contents": "GetDenies()" },
		{ "trigger": "GetDenies", "contents": "GetDenies()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetGold", "contents": "GetGold()" },
		{ "trigger": "GetGold", "contents": "GetGold()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetGoldBounty", "contents": "GetGoldBounty()" },
		{ "trigger": "GetGoldBounty", "contents": "GetGoldBounty()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetHealthRegen", "contents": "GetHealthRegen()" },
		{ "trigger": "GetHealthRegen", "contents": "GetHealthRegen()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetIncreasedAttackSpeed", "contents": "GetIncreasedAttackSpeed()" },
		{ "trigger": "GetIncreasedAttackSpeed", "contents": "GetIncreasedAttackSpeed()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetIntellect", "contents": "GetIntellect()" },
		{ "trigger": "GetIntellect", "contents": "GetIntellect()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetIntellectGain", "contents": "GetIntellectGain()" },
		{ "trigger": "GetIntellectGain", "contents": "GetIntellectGain()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetKills", "contents": "GetKills()" },
		{ "trigger": "GetKills", "contents": "GetKills()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetLastHits", "contents": "GetLastHits()" },
		{ "trigger": "GetLastHits", "contents": "GetLastHits()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetManaRegen", "contents": "GetManaRegen()" },
		{ "trigger": "GetManaRegen", "contents": "GetManaRegen()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetMostRecentDamageTime", "contents": "GetMostRecentDamageTime()" },
		{ "trigger": "GetMostRecentDamageTime", "contents": "GetMostRecentDamageTime()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetMultipleKillCount", "contents": "GetMultipleKillCount()" },
		{ "trigger": "GetMultipleKillCount", "contents": "GetMultipleKillCount()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetNumAttackers", "contents": "GetNumAttackers()" },
		{ "trigger": "GetNumAttackers", "contents": "GetNumAttackers()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetNumItemsInInventory", "contents": "GetNumItemsInInventory()" },
		{ "trigger": "GetNumItemsInInventory", "contents": "GetNumItemsInInventory()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetNumItemsInStash", "contents": "GetNumItemsInStash()" },
		{ "trigger": "GetNumItemsInStash", "contents": "GetNumItemsInStash()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetPhysicalArmorValue", "contents": "GetPhysicalArmorValue()" },
		{ "trigger": "GetPhysicalArmorValue", "contents": "GetPhysicalArmorValue()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetPlayerID", "contents": "GetPlayerID()" },
		{ "trigger": "GetPlayerID", "contents": "GetPlayerID()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetPrimaryAttribute", "contents": "GetPrimaryAttribute()" },
		{ "trigger": "GetPrimaryAttribute", "contents": "GetPrimaryAttribute()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetPrimaryStatValue", "contents": "GetPrimaryStatValue()" },
		{ "trigger": "GetPrimaryStatValue", "contents": "GetPrimaryStatValue()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetRespawnTime", "contents": "GetRespawnTime()" },
		{ "trigger": "GetRespawnTime", "contents": "GetRespawnTime()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetRespawnsDisabled", "contents": "GetRespawnsDisabled()" },
		{ "trigger": "GetRespawnsDisabled", "contents": "GetRespawnsDisabled()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetStatsBasedManaRegen", "contents": "GetStatsBasedManaRegen()" },
		{ "trigger": "GetStatsBasedManaRegen", "contents": "GetStatsBasedManaRegen()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetStreak", "contents": "GetStreak()" },
		{ "trigger": "GetStreak", "contents": "GetStreak()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetStrength", "contents": "GetStrength()" },
		{ "trigger": "GetStrength", "contents": "GetStrength()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetStrengthGain", "contents": "GetStrengthGain()" },
		{ "trigger": "GetStrengthGain", "contents": "GetStrengthGain()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetTimeUntilRespawn", "contents": "GetTimeUntilRespawn()" },
		{ "trigger": "GetTimeUntilRespawn", "contents": "GetTimeUntilRespawn()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_GetTogglableWearable", "contents": "GetTogglableWearable(${1:slot})" },
		{ "trigger": "GetTogglableWearable", "contents": "GetTogglableWearable(${1:slot})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_HasAnyAvailableInventorySpace", "contents": "HasAnyAvailableInventorySpace()" },
		{ "trigger": "HasAnyAvailableInventorySpace", "contents": "HasAnyAvailableInventorySpace()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_HasFlyingVision", "contents": "HasFlyingVision()" },
		{ "trigger": "HasFlyingVision", "contents": "HasFlyingVision()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_HasOwnerAbandoned", "contents": "HasOwnerAbandoned()" },
		{ "trigger": "HasOwnerAbandoned", "contents": "HasOwnerAbandoned()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_HasRoomForItem", "contents": "HasRoomForItem(${1:pItemName},${2:bIncludeStashCombines},${3:bAllowSelling})" },
		{ "trigger": "HasRoomForItem", "contents": "HasRoomForItem(${1:pItemName},${2:bIncludeStashCombines},${3:bAllowSelling})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_HeroLevelUp", "contents": "HeroLevelUp(${1:bPlayEffects})" },
		{ "trigger": "HeroLevelUp", "contents": "HeroLevelUp(${1:bPlayEffects})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementAssists", "contents": "IncrementAssists(${1:iKillerID})" },
		{ "trigger": "IncrementAssists", "contents": "IncrementAssists(${1:iKillerID})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementDeaths", "contents": "IncrementDeaths(${1:iKillerID})" },
		{ "trigger": "IncrementDeaths", "contents": "IncrementDeaths(${1:iKillerID})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementDenies", "contents": "IncrementDenies()" },
		{ "trigger": "IncrementDenies", "contents": "IncrementDenies()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementKills", "contents": "IncrementKills(${1:iVictimID})" },
		{ "trigger": "IncrementKills", "contents": "IncrementKills(${1:iVictimID})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementLastHitMultikill", "contents": "IncrementLastHitMultikill()" },
		{ "trigger": "IncrementLastHitMultikill", "contents": "IncrementLastHitMultikill()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementLastHitStreak", "contents": "IncrementLastHitStreak()" },
		{ "trigger": "IncrementLastHitStreak", "contents": "IncrementLastHitStreak()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementLastHits", "contents": "IncrementLastHits()" },
		{ "trigger": "IncrementLastHits", "contents": "IncrementLastHits()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementNearbyCreepDeaths", "contents": "IncrementNearbyCreepDeaths()" },
		{ "trigger": "IncrementNearbyCreepDeaths", "contents": "IncrementNearbyCreepDeaths()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IncrementStreak", "contents": "IncrementStreak()" },
		{ "trigger": "IncrementStreak", "contents": "IncrementStreak()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IsBuybackDisabledByReapersScythe", "contents": "IsBuybackDisabledByReapersScythe()" },
		{ "trigger": "IsBuybackDisabledByReapersScythe", "contents": "IsBuybackDisabledByReapersScythe()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_IsReincarnating", "contents": "IsReincarnating()" },
		{ "trigger": "IsReincarnating", "contents": "IsReincarnating()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_KilledHero", "contents": "KilledHero(${1:hHero},${2:hInflictor})" },
		{ "trigger": "KilledHero", "contents": "KilledHero(${1:hHero},${2:hInflictor})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ModifyAgility", "contents": "ModifyAgility(${1:flNewAgility})" },
		{ "trigger": "ModifyAgility", "contents": "ModifyAgility(${1:flNewAgility})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ModifyGold", "contents": "ModifyGold(${1:iGoldChange},${2:bReliable},${3:iReason})" },
		{ "trigger": "ModifyGold", "contents": "ModifyGold(${1:iGoldChange},${2:bReliable},${3:iReason})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ModifyIntellect", "contents": "ModifyIntellect(${1:flNewIntellect})" },
		{ "trigger": "ModifyIntellect", "contents": "ModifyIntellect(${1:flNewIntellect})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ModifyStrength", "contents": "ModifyStrength(${1:flNewStrength})" },
		{ "trigger": "ModifyStrength", "contents": "ModifyStrength(${1:flNewStrength})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_PerformTaunt", "contents": "PerformTaunt()" },
		{ "trigger": "PerformTaunt", "contents": "PerformTaunt()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_RecordLastHit", "contents": "RecordLastHit()" },
		{ "trigger": "RecordLastHit", "contents": "RecordLastHit()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_RespawnHero", "contents": "RespawnHero(${1:bBuyBack},${2:bIsActuallyBeingSpawnedForTheFirstTime},${3:bRespawnPenalty})" },
		{ "trigger": "RespawnHero", "contents": "RespawnHero(${1:bBuyBack},${2:bIsActuallyBeingSpawnedForTheFirstTime},${3:bRespawnPenalty})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetAbilityPoints", "contents": "SetAbilityPoints(${1:iPoints})" },
		{ "trigger": "SetAbilityPoints", "contents": "SetAbilityPoints(${1:iPoints})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetBaseAgility", "contents": "SetBaseAgility(${1:flAgility})" },
		{ "trigger": "SetBaseAgility", "contents": "SetBaseAgility(${1:flAgility})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetBaseIntellect", "contents": "SetBaseIntellect(${1:flIntellect})" },
		{ "trigger": "SetBaseIntellect", "contents": "SetBaseIntellect(${1:flIntellect})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetBaseStrength", "contents": "SetBaseStrength(${1:flStrength})" },
		{ "trigger": "SetBaseStrength", "contents": "SetBaseStrength(${1:flStrength})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetBotDifficulty", "contents": "SetBotDifficulty(${1:nDifficulty})" },
		{ "trigger": "SetBotDifficulty", "contents": "SetBotDifficulty(${1:nDifficulty})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetBuyBackDisabledByReapersScythe", "contents": "SetBuyBackDisabledByReapersScythe(${1:bBuybackDisabled})" },
		{ "trigger": "SetBuyBackDisabledByReapersScythe", "contents": "SetBuyBackDisabledByReapersScythe(${1:bBuybackDisabled})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetBuybackCooldownTime", "contents": "SetBuybackCooldownTime(${1:flTime})" },
		{ "trigger": "SetBuybackCooldownTime", "contents": "SetBuybackCooldownTime(${1:flTime})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetBuybackGoldLimitTime", "contents": "SetBuybackGoldLimitTime(${1:flTime})" },
		{ "trigger": "SetBuybackGoldLimitTime", "contents": "SetBuybackGoldLimitTime(${1:flTime})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetCustomDeathXP", "contents": "SetCustomDeathXP(${1:iValue})" },
		{ "trigger": "SetCustomDeathXP", "contents": "SetCustomDeathXP(${1:iValue})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetGold", "contents": "SetGold(${1:iGold},${2:bReliable})" },
		{ "trigger": "SetGold", "contents": "SetGold(${1:iGold},${2:bReliable})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetPlayerID", "contents": "SetPlayerID(${1:iPlayerID})" },
		{ "trigger": "SetPlayerID", "contents": "SetPlayerID(${1:iPlayerID})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetPrimaryAttribute", "contents": "SetPrimaryAttribute(${1:nPrimaryAttribute})" },
		{ "trigger": "SetPrimaryAttribute", "contents": "SetPrimaryAttribute(${1:nPrimaryAttribute})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetRespawnPosition", "contents": "SetRespawnPosition(${1:vOrigin})" },
		{ "trigger": "SetRespawnPosition", "contents": "SetRespawnPosition(${1:vOrigin})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetRespawnsDisabled", "contents": "SetRespawnsDisabled(${1:bDisableRespawns})" },
		{ "trigger": "SetRespawnsDisabled", "contents": "SetRespawnsDisabled(${1:bDisableRespawns})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SetTimeUntilRespawn", "contents": "SetTimeUntilRespawn(${1:time})" },
		{ "trigger": "SetTimeUntilRespawn", "contents": "SetTimeUntilRespawn(${1:time})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_ShouldDoFlyHeightVisual", "contents": "ShouldDoFlyHeightVisual()" },
		{ "trigger": "ShouldDoFlyHeightVisual", "contents": "ShouldDoFlyHeightVisual()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_SpendGold", "contents": "SpendGold(${1:iCost},${2:iReason})" },
		{ "trigger": "SpendGold", "contents": "SpendGold(${1:iCost},${2:iReason})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_UnitCanRespawn", "contents": "UnitCanRespawn()" },
		{ "trigger": "UnitCanRespawn", "contents": "UnitCanRespawn()" },
		{ "trigger": "CDOTA_BaseNPC_Hero_UpgradeAbility", "contents": "UpgradeAbility(${1:hAbility})" },
		{ "trigger": "UpgradeAbility", "contents": "UpgradeAbility(${1:hAbility})" },
		{ "trigger": "CDOTA_BaseNPC_Hero_WillReincarnate", "contents": "WillReincarnate()" },
		{ "trigger": "WillReincarnate", "contents": "WillReincarnate()" },
		{ "trigger": "CDOTA_Buff_AddParticle", "contents": "AddParticle(${1:i},${2:bDestroyImmediately},${3:bStatusEffect},${4:iPriority},${5:bHeroEffect},${6:bOverheadEffect})" },
		{ "trigger": "AddParticle", "contents": "AddParticle(${1:i},${2:bDestroyImmediately},${3:bStatusEffect},${4:iPriority},${5:bHeroEffect},${6:bOverheadEffect})" },
		{ "trigger": "CDOTA_Buff_DecrementStackCount", "contents": "DecrementStackCount()" },
		{ "trigger": "DecrementStackCount", "contents": "DecrementStackCount()" },
		{ "trigger": "CDOTA_Buff_Destroy", "contents": "Destroy()" },
		{ "trigger": "Destroy", "contents": "Destroy()" },
		{ "trigger": "CDOTA_Buff_ForceRefresh", "contents": "ForceRefresh()" },
		{ "trigger": "ForceRefresh", "contents": "ForceRefresh()" },
		{ "trigger": "CDOTA_Buff_GetAbility", "contents": "GetAbility()" },
		{ "trigger": "GetAbility", "contents": "GetAbility()" },
		{ "trigger": "CDOTA_Buff_GetAuraDuration", "contents": "GetAuraDuration()" },
		{ "trigger": "GetAuraDuration", "contents": "GetAuraDuration()" },
		{ "trigger": "CDOTA_Buff_GetCaster", "contents": "GetCaster()" },
		{ "trigger": "GetCaster", "contents": "GetCaster()" },
		{ "trigger": "CDOTA_Buff_GetClass", "contents": "GetClass()" },
		{ "trigger": "GetClass", "contents": "GetClass()" },
		{ "trigger": "CDOTA_Buff_GetCreationTime", "contents": "GetCreationTime()" },
		{ "trigger": "GetCreationTime", "contents": "GetCreationTime()" },
		{ "trigger": "CDOTA_Buff_GetDieTime", "contents": "GetDieTime()" },
		{ "trigger": "GetDieTime", "contents": "GetDieTime()" },
		{ "trigger": "CDOTA_Buff_GetDuration", "contents": "GetDuration()" },
		{ "trigger": "GetDuration", "contents": "GetDuration()" },
		{ "trigger": "CDOTA_Buff_GetElapsedTime", "contents": "GetElapsedTime()" },
		{ "trigger": "GetElapsedTime", "contents": "GetElapsedTime()" },
		{ "trigger": "CDOTA_Buff_GetName", "contents": "GetName()" },
		{ "trigger": "GetName", "contents": "GetName()" },
		{ "trigger": "CDOTA_Buff_GetParent", "contents": "GetParent()" },
		{ "trigger": "GetParent", "contents": "GetParent()" },
		{ "trigger": "CDOTA_Buff_GetRemainingTime", "contents": "GetRemainingTime()" },
		{ "trigger": "GetRemainingTime", "contents": "GetRemainingTime()" },
		{ "trigger": "CDOTA_Buff_GetStackCount", "contents": "GetStackCount()" },
		{ "trigger": "GetStackCount", "contents": "GetStackCount()" },
		{ "trigger": "CDOTA_Buff_IncrementStackCount", "contents": "IncrementStackCount()" },
		{ "trigger": "IncrementStackCount", "contents": "IncrementStackCount()" },
		{ "trigger": "CDOTA_Buff_SetDuration", "contents": "SetDuration(${1:flTime},${2:bInformClients})" },
		{ "trigger": "SetDuration", "contents": "SetDuration(${1:flTime},${2:bInformClients})" },
		{ "trigger": "CDOTA_Buff_SetStackCount", "contents": "SetStackCount(${1:iCount})" },
		{ "trigger": "SetStackCount", "contents": "SetStackCount(${1:iCount})" },
		{ "trigger": "CDOTA_Buff_StartIntervalThink", "contents": "StartIntervalThink(${1:OnIntervalThink})" },
		{ "trigger": "StartIntervalThink", "contents": "StartIntervalThink(${1:OnIntervalThink})" },
		{ "trigger": "CDOTA_CustomUIManager_DynamicHud_Create", "contents": "DynamicHud_Create(${1:s},${2:string_2},${3:string_3},${4:handle_4})" },
		{ "trigger": "DynamicHud_Create", "contents": "DynamicHud_Create(${1:s},${2:string_2},${3:string_3},${4:handle_4})" },
		{ "trigger": "CDOTA_CustomUIManager_DynamicHud_Destroy", "contents": "DynamicHud_Destroy(${1:int PlayerID /*-1 means everyone*/},${2:string ElementID})" },
		{ "trigger": "DynamicHud_Destroy", "contents": "DynamicHud_Destroy(${1:int PlayerID /*-1 means everyone*/},${2:string ElementID})" },
		{ "trigger": "CDOTA_CustomUIManager_DynamicHud_SetDialogVariables", "contents": "DynamicHud_SetDialogVariables(${1:int PlayerID /*-1 means everyone*/},${2:string ElementID},${3:table DialogVariables})" },
		{ "trigger": "DynamicHud_SetDialogVariables", "contents": "DynamicHud_SetDialogVariables(${1:int PlayerID /*-1 means everyone*/},${2:string ElementID},${3:table DialogVariables})" },
		{ "trigger": "CDOTA_CustomUIManager_DynamicHud_SetVisible", "contents": "DynamicHud_SetVisible(${1:int PlayerID /*-1 means everyone*/},${2:string ElementID},${3:bool Visible})" },
		{ "trigger": "DynamicHud_SetVisible", "contents": "DynamicHud_SetVisible(${1:int PlayerID /*-1 means everyone*/},${2:string ElementID},${3:bool Visible})" },
		{ "trigger": "CDOTA_Item_GetContainer", "contents": "GetContainer()" },
		{ "trigger": "GetContainer", "contents": "GetContainer()" },
		{ "trigger": "CDOTA_Item_GetCost", "contents": "GetCost()" },
		{ "trigger": "GetCost", "contents": "GetCost()" },
		{ "trigger": "CDOTA_Item_GetCurrentCharges", "contents": "GetCurrentCharges()" },
		{ "trigger": "GetCurrentCharges", "contents": "GetCurrentCharges()" },
		{ "trigger": "CDOTA_Item_GetInitialCharges", "contents": "GetInitialCharges()" },
		{ "trigger": "GetInitialCharges", "contents": "GetInitialCharges()" },
		{ "trigger": "CDOTA_Item_GetPurchaseTime", "contents": "GetPurchaseTime()" },
		{ "trigger": "GetPurchaseTime", "contents": "GetPurchaseTime()" },
		{ "trigger": "CDOTA_Item_GetPurchaser", "contents": "GetPurchaser()" },
		{ "trigger": "GetPurchaser", "contents": "GetPurchaser()" },
		{ "trigger": "CDOTA_Item_GetShareability", "contents": "GetShareability()" },
		{ "trigger": "GetShareability", "contents": "GetShareability()" },
		{ "trigger": "CDOTA_Item_IsAlertableItem", "contents": "IsAlertableItem()" },
		{ "trigger": "IsAlertableItem", "contents": "IsAlertableItem()" },
		{ "trigger": "CDOTA_Item_IsCastOnPickup", "contents": "IsCastOnPickup()" },
		{ "trigger": "IsCastOnPickup", "contents": "IsCastOnPickup()" },
		{ "trigger": "CDOTA_Item_IsCombinable", "contents": "IsCombinable()" },
		{ "trigger": "IsCombinable", "contents": "IsCombinable()" },
		{ "trigger": "CDOTA_Item_IsDisassemblable", "contents": "IsDisassemblable()" },
		{ "trigger": "IsDisassemblable", "contents": "IsDisassemblable()" },
		{ "trigger": "CDOTA_Item_IsDroppable", "contents": "IsDroppable()" },
		{ "trigger": "IsDroppable", "contents": "IsDroppable()" },
		{ "trigger": "CDOTA_Item_IsItem", "contents": "IsItem()" },
		{ "trigger": "IsItem", "contents": "IsItem()" },
		{ "trigger": "CDOTA_Item_IsKillable", "contents": "IsKillable()" },
		{ "trigger": "IsKillable", "contents": "IsKillable()" },
		{ "trigger": "CDOTA_Item_IsMuted", "contents": "IsMuted()" },
		{ "trigger": "IsMuted", "contents": "IsMuted()" },
		{ "trigger": "CDOTA_Item_IsPermanent", "contents": "IsPermanent()" },
		{ "trigger": "IsPermanent", "contents": "IsPermanent()" },
		{ "trigger": "CDOTA_Item_IsPurchasable", "contents": "IsPurchasable()" },
		{ "trigger": "IsPurchasable", "contents": "IsPurchasable()" },
		{ "trigger": "CDOTA_Item_IsRecipe", "contents": "IsRecipe()" },
		{ "trigger": "IsRecipe", "contents": "IsRecipe()" },
		{ "trigger": "CDOTA_Item_IsRecipeGenerated", "contents": "IsRecipeGenerated()" },
		{ "trigger": "IsRecipeGenerated", "contents": "IsRecipeGenerated()" },
		{ "trigger": "CDOTA_Item_IsSellable", "contents": "IsSellable()" },
		{ "trigger": "IsSellable", "contents": "IsSellable()" },
		{ "trigger": "CDOTA_Item_IsStackable", "contents": "IsStackable()" },
		{ "trigger": "IsStackable", "contents": "IsStackable()" },
		{ "trigger": "CDOTA_Item_LaunchLoot", "contents": "LaunchLoot(${1:bAutoUse},${2:flHeight},${3:flDuration},${4:vEndPoint})" },
		{ "trigger": "LaunchLoot", "contents": "LaunchLoot(${1:bAutoUse},${2:flHeight},${3:flDuration},${4:vEndPoint})" },
		{ "trigger": "CDOTA_Item_LaunchLootInitialHeight", "contents": "LaunchLootInitialHeight(${1:bAutoUse},${2:flInitialHeight},${3:flLaunchHeight},${4:flDuration},${5:vEndPoint})" },
		{ "trigger": "LaunchLootInitialHeight", "contents": "LaunchLootInitialHeight(${1:bAutoUse},${2:flInitialHeight},${3:flLaunchHeight},${4:flDuration},${5:vEndPoint})" },
		{ "trigger": "CDOTA_Item_RequiresCharges", "contents": "RequiresCharges()" },
		{ "trigger": "RequiresCharges", "contents": "RequiresCharges()" },
		{ "trigger": "CDOTA_Item_SetCurrentCharges", "contents": "SetCurrentCharges(${1:iCharges})" },
		{ "trigger": "SetCurrentCharges", "contents": "SetCurrentCharges(${1:iCharges})" },
		{ "trigger": "CDOTA_Item_SetPurchaseTime", "contents": "SetPurchaseTime(${1:flTime})" },
		{ "trigger": "SetPurchaseTime", "contents": "SetPurchaseTime(${1:flTime})" },
		{ "trigger": "CDOTA_Item_SetPurchaser", "contents": "SetPurchaser(${1:hPurchaser})" },
		{ "trigger": "SetPurchaser", "contents": "SetPurchaser(${1:hPurchaser})" },
		{ "trigger": "CDOTA_Item_SetStacksWithOtherOwners", "contents": "SetStacksWithOtherOwners(${1:bStacksWithOtherOwners})" },
		{ "trigger": "SetStacksWithOtherOwners", "contents": "SetStacksWithOtherOwners(${1:bStacksWithOtherOwners})" },
		{ "trigger": "CDOTA_Item_StacksWithOtherOwners", "contents": "StacksWithOtherOwners()" },
		{ "trigger": "StacksWithOtherOwners", "contents": "StacksWithOtherOwners()" },
		{ "trigger": "CDOTA_Item_Think", "contents": "Think()" },
		{ "trigger": "Think", "contents": "Think()" },
		{ "trigger": "CDOTA_ItemSpawner_GetItemName", "contents": "GetItemName()" },
		{ "trigger": "GetItemName", "contents": "GetItemName()" },
		{ "trigger": "CDOTA_Item_DataDriven_ApplyDataDrivenModifier", "contents": "ApplyDataDrivenModifier(${1:hCaster},${2:hTarget},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "ApplyDataDrivenModifier", "contents": "ApplyDataDrivenModifier(${1:hCaster},${2:hTarget},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "CDOTA_Item_DataDriven_ApplyDataDrivenThinker", "contents": "ApplyDataDrivenThinker(${1:hCaster},${2:vLocation},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "ApplyDataDrivenThinker", "contents": "ApplyDataDrivenThinker(${1:hCaster},${2:vLocation},${3:pszModifierName},${4:hModifierTable})" },
		{ "trigger": "CDOTA_Item_Lua_CastFilterResult", "contents": "CastFilterResult()" },
		{ "trigger": "CastFilterResult", "contents": "CastFilterResult()" },
		{ "trigger": "CDOTA_Item_Lua_CastFilterResultLocation", "contents": "CastFilterResultLocation(${1:Vector vLocation})" },
		{ "trigger": "CastFilterResultLocation", "contents": "CastFilterResultLocation(${1:Vector vLocation})" },
		{ "trigger": "CDOTA_Item_Lua_CastFilterResultTarget", "contents": "CastFilterResultTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "CastFilterResultTarget", "contents": "CastFilterResultTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "CDOTA_Item_Lua_GetAssociatedPrimaryAbilities", "contents": "GetAssociatedPrimaryAbilities()" },
		{ "trigger": "GetAssociatedPrimaryAbilities", "contents": "GetAssociatedPrimaryAbilities()" },
		{ "trigger": "CDOTA_Item_Lua_GetAssociatedSecondaryAbilities", "contents": "GetAssociatedSecondaryAbilities()" },
		{ "trigger": "GetAssociatedSecondaryAbilities", "contents": "GetAssociatedSecondaryAbilities()" },
		{ "trigger": "CDOTA_Item_Lua_GetBehavior", "contents": "GetBehavior()" },
		{ "trigger": "GetBehavior", "contents": "GetBehavior()" },
		{ "trigger": "CDOTA_Item_Lua_GetCastRange", "contents": "GetCastRange(${1:vLocation},${2:hTarget})" },
		{ "trigger": "GetCastRange", "contents": "GetCastRange(${1:vLocation},${2:hTarget})" },
		{ "trigger": "CDOTA_Item_Lua_GetChannelTime", "contents": "GetChannelTime()" },
		{ "trigger": "GetChannelTime", "contents": "GetChannelTime()" },
		{ "trigger": "CDOTA_Item_Lua_GetChannelledManaCostPerSecond", "contents": "GetChannelledManaCostPerSecond(${1:-1 is current})" },
		{ "trigger": "GetChannelledManaCostPerSecond", "contents": "GetChannelledManaCostPerSecond(${1:-1 is current})" },
		{ "trigger": "CDOTA_Item_Lua_GetConceptRecipientType", "contents": "GetConceptRecipientType()" },
		{ "trigger": "GetConceptRecipientType", "contents": "GetConceptRecipientType()" },
		{ "trigger": "CDOTA_Item_Lua_GetCooldown", "contents": "GetCooldown(${1:iLevel})" },
		{ "trigger": "GetCooldown", "contents": "GetCooldown(${1:iLevel})" },
		{ "trigger": "CDOTA_Item_Lua_GetCustomCastError", "contents": "GetCustomCastError()" },
		{ "trigger": "GetCustomCastError", "contents": "GetCustomCastError()" },
		{ "trigger": "CDOTA_Item_Lua_GetCustomCastErrorLocation", "contents": "GetCustomCastErrorLocation(${1:Vector vLocation})" },
		{ "trigger": "GetCustomCastErrorLocation", "contents": "GetCustomCastErrorLocation(${1:Vector vLocation})" },
		{ "trigger": "CDOTA_Item_Lua_GetCustomCastErrorTarget", "contents": "GetCustomCastErrorTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "GetCustomCastErrorTarget", "contents": "GetCustomCastErrorTarget(${1:HSCRIPT hTarget})" },
		{ "trigger": "CDOTA_Item_Lua_GetGoldCost", "contents": "GetGoldCost(${1:-1 is current})" },
		{ "trigger": "GetGoldCost", "contents": "GetGoldCost(${1:-1 is current})" },
		{ "trigger": "CDOTA_Item_Lua_GetIntrinsicModifierName", "contents": "GetIntrinsicModifierName()" },
		{ "trigger": "GetIntrinsicModifierName", "contents": "GetIntrinsicModifierName()" },
		{ "trigger": "CDOTA_Item_Lua_GetManaCost", "contents": "GetManaCost(${1:-1 is current})" },
		{ "trigger": "GetManaCost", "contents": "GetManaCost(${1:-1 is current})" },
		{ "trigger": "CDOTA_Item_Lua_GetPlaybackRateOverride", "contents": "GetPlaybackRateOverride()" },
		{ "trigger": "GetPlaybackRateOverride", "contents": "GetPlaybackRateOverride()" },
		{ "trigger": "CDOTA_Item_Lua_IsHiddenAbilityCastable", "contents": "IsHiddenAbilityCastable()" },
		{ "trigger": "IsHiddenAbilityCastable", "contents": "IsHiddenAbilityCastable()" },
		{ "trigger": "CDOTA_Item_Lua_IsHiddenWhenStolen", "contents": "IsHiddenWhenStolen()" },
		{ "trigger": "IsHiddenWhenStolen", "contents": "IsHiddenWhenStolen()" },
		{ "trigger": "CDOTA_Item_Lua_IsRefreshable", "contents": "IsRefreshable()" },
		{ "trigger": "IsRefreshable", "contents": "IsRefreshable()" },
		{ "trigger": "CDOTA_Item_Lua_IsStealable", "contents": "IsStealable()" },
		{ "trigger": "IsStealable", "contents": "IsStealable()" },
		{ "trigger": "CDOTA_Item_Lua_OnAbilityPhaseInterrupted", "contents": "OnAbilityPhaseInterrupted()" },
		{ "trigger": "OnAbilityPhaseInterrupted", "contents": "OnAbilityPhaseInterrupted()" },
		{ "trigger": "CDOTA_Item_Lua_OnAbilityPhaseStart", "contents": "OnAbilityPhaseStart()" },
		{ "trigger": "OnAbilityPhaseStart", "contents": "OnAbilityPhaseStart()" },
		{ "trigger": "CDOTA_Item_Lua_OnChannelFinish", "contents": "OnChannelFinish(${1:bool bInterrupted})" },
		{ "trigger": "OnChannelFinish", "contents": "OnChannelFinish(${1:bool bInterrupted})" },
		{ "trigger": "CDOTA_Item_Lua_OnChannelThink", "contents": "OnChannelThink(${1:float flInterval})" },
		{ "trigger": "OnChannelThink", "contents": "OnChannelThink(${1:float flInterval})" },
		{ "trigger": "CDOTA_Item_Lua_OnHeroCalculateStatBonus", "contents": "OnHeroCalculateStatBonus()" },
		{ "trigger": "OnHeroCalculateStatBonus", "contents": "OnHeroCalculateStatBonus()" },
		{ "trigger": "CDOTA_Item_Lua_OnHeroDiedNearby", "contents": "OnHeroDiedNearby(${1:ie Urn},${2:attacker},${3:table})" },
		{ "trigger": "OnHeroDiedNearby", "contents": "OnHeroDiedNearby(${1:ie Urn},${2:attacker},${3:table})" },
		{ "trigger": "CDOTA_Item_Lua_OnHeroLevelUp", "contents": "OnHeroLevelUp()" },
		{ "trigger": "OnHeroLevelUp", "contents": "OnHeroLevelUp()" },
		{ "trigger": "CDOTA_Item_Lua_OnInventoryContentsChanged", "contents": "OnInventoryContentsChanged()" },
		{ "trigger": "OnInventoryContentsChanged", "contents": "OnInventoryContentsChanged()" },
		{ "trigger": "CDOTA_Item_Lua_OnItemEquipped", "contents": "OnItemEquipped(${1:HSCRIPT hItem})" },
		{ "trigger": "OnItemEquipped", "contents": "OnItemEquipped(${1:HSCRIPT hItem})" },
		{ "trigger": "CDOTA_Item_Lua_OnOwnerDied", "contents": "OnOwnerDied()" },
		{ "trigger": "OnOwnerDied", "contents": "OnOwnerDied()" },
		{ "trigger": "CDOTA_Item_Lua_OnOwnerSpawned", "contents": "OnOwnerSpawned()" },
		{ "trigger": "OnOwnerSpawned", "contents": "OnOwnerSpawned()" },
		{ "trigger": "CDOTA_Item_Lua_OnProjectileHit", "contents": "OnProjectileHit(${1:HSCRIPT hTarget},${2:Vector vLocation})" },
		{ "trigger": "OnProjectileHit", "contents": "OnProjectileHit(${1:HSCRIPT hTarget},${2:Vector vLocation})" },
		{ "trigger": "CDOTA_Item_Lua_OnProjectileThink", "contents": "OnProjectileThink(${1:Vector vLocation})" },
		{ "trigger": "OnProjectileThink", "contents": "OnProjectileThink(${1:Vector vLocation})" },
		{ "trigger": "CDOTA_Item_Lua_OnSpellStart", "contents": "OnSpellStart()" },
		{ "trigger": "OnSpellStart", "contents": "OnSpellStart()" },
		{ "trigger": "CDOTA_Item_Lua_OnStolen", "contents": "OnStolen(${1:HSCRIPT hAbility})" },
		{ "trigger": "OnStolen", "contents": "OnStolen(${1:HSCRIPT hAbility})" },
		{ "trigger": "CDOTA_Item_Lua_OnToggle", "contents": "OnToggle()" },
		{ "trigger": "OnToggle", "contents": "OnToggle()" },
		{ "trigger": "CDOTA_Item_Lua_OnUnStolen", "contents": "OnUnStolen()" },
		{ "trigger": "OnUnStolen", "contents": "OnUnStolen()" },
		{ "trigger": "CDOTA_Item_Lua_OnUpgrade", "contents": "OnUpgrade()" },
		{ "trigger": "OnUpgrade", "contents": "OnUpgrade()" },
		{ "trigger": "CDOTA_Item_Lua_ProcsMagicStick", "contents": "ProcsMagicStick()" },
		{ "trigger": "ProcsMagicStick", "contents": "ProcsMagicStick()" },
		{ "trigger": "CDOTA_Item_Lua_SpeakTrigger", "contents": "SpeakTrigger()" },
		{ "trigger": "SpeakTrigger", "contents": "SpeakTrigger()" },
		{ "trigger": "CDOTA_Item_Physical_GetContainedItem", "contents": "GetContainedItem()" },
		{ "trigger": "GetContainedItem", "contents": "GetContainedItem()" },
		{ "trigger": "CDOTA_Item_Physical_GetCreationTime", "contents": "GetCreationTime()" },
		{ "trigger": "GetCreationTime", "contents": "GetCreationTime()" },
		{ "trigger": "CDOTA_Item_Physical_SetContainedItem", "contents": "SetContainedItem(${1:hItem})" },
		{ "trigger": "SetContainedItem", "contents": "SetContainedItem(${1:hItem})" },
		{ "trigger": "CDOTA_MapTree_CutDown", "contents": "CutDown(${1:-1 = invalid team})" },
		{ "trigger": "CutDown", "contents": "CutDown(${1:-1 = invalid team})" },
		{ "trigger": "CDOTA_MapTree_CutDownRegrowAfter", "contents": "CutDownRegrowAfter(${1:-1 = never regrow},${2:nTeamNumberKnownTo})" },
		{ "trigger": "CutDownRegrowAfter", "contents": "CutDownRegrowAfter(${1:-1 = never regrow},${2:nTeamNumberKnownTo})" },
		{ "trigger": "CDOTA_MapTree_GrowBack", "contents": "GrowBack()" },
		{ "trigger": "GrowBack", "contents": "GrowBack()" },
		{ "trigger": "CDOTA_MapTree_IsStanding", "contents": "IsStanding()" },
		{ "trigger": "IsStanding", "contents": "IsStanding()" },
		{ "trigger": "CDOTA_Modifier_Lua_AllowIllusionDuplicate", "contents": "AllowIllusionDuplicate()" },
		{ "trigger": "AllowIllusionDuplicate", "contents": "AllowIllusionDuplicate()" },
		{ "trigger": "CDOTA_Modifier_Lua_DestroyOnExpire", "contents": "DestroyOnExpire()" },
		{ "trigger": "DestroyOnExpire", "contents": "DestroyOnExpire()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetAttributes", "contents": "GetAttributes()" },
		{ "trigger": "GetAttributes", "contents": "GetAttributes()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetAuraDuration", "contents": "GetAuraDuration()" },
		{ "trigger": "GetAuraDuration", "contents": "GetAuraDuration()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetAuraEntityReject", "contents": "GetAuraEntityReject(${1:hEntity})" },
		{ "trigger": "GetAuraEntityReject", "contents": "GetAuraEntityReject(${1:hEntity})" },
		{ "trigger": "CDOTA_Modifier_Lua_GetAuraRadius", "contents": "GetAuraRadius()" },
		{ "trigger": "GetAuraRadius", "contents": "GetAuraRadius()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetAuraSearchFlags", "contents": "GetAuraSearchFlags()" },
		{ "trigger": "GetAuraSearchFlags", "contents": "GetAuraSearchFlags()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetAuraSearchTeam", "contents": "GetAuraSearchTeam()" },
		{ "trigger": "GetAuraSearchTeam", "contents": "GetAuraSearchTeam()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetAuraSearchType", "contents": "GetAuraSearchType()" },
		{ "trigger": "GetAuraSearchType", "contents": "GetAuraSearchType()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetEffectAttachType", "contents": "GetEffectAttachType()" },
		{ "trigger": "GetEffectAttachType", "contents": "GetEffectAttachType()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetEffectName", "contents": "GetEffectName()" },
		{ "trigger": "GetEffectName", "contents": "GetEffectName()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetHeroEffectName", "contents": "GetHeroEffectName()" },
		{ "trigger": "GetHeroEffectName", "contents": "GetHeroEffectName()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetModifierAura", "contents": "GetModifierAura()" },
		{ "trigger": "GetModifierAura", "contents": "GetModifierAura()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetStatusEffectName", "contents": "GetStatusEffectName()" },
		{ "trigger": "GetStatusEffectName", "contents": "GetStatusEffectName()" },
		{ "trigger": "CDOTA_Modifier_Lua_GetTexture", "contents": "GetTexture()" },
		{ "trigger": "GetTexture", "contents": "GetTexture()" },
		{ "trigger": "CDOTA_Modifier_Lua_HeroEffectPriority", "contents": "HeroEffectPriority()" },
		{ "trigger": "HeroEffectPriority", "contents": "HeroEffectPriority()" },
		{ "trigger": "CDOTA_Modifier_Lua_IsAura", "contents": "IsAura()" },
		{ "trigger": "IsAura", "contents": "IsAura()" },
		{ "trigger": "CDOTA_Modifier_Lua_IsAuraActiveOnDeath", "contents": "IsAuraActiveOnDeath()" },
		{ "trigger": "IsAuraActiveOnDeath", "contents": "IsAuraActiveOnDeath()" },
		{ "trigger": "CDOTA_Modifier_Lua_IsDebuff", "contents": "IsDebuff()" },
		{ "trigger": "IsDebuff", "contents": "IsDebuff()" },
		{ "trigger": "CDOTA_Modifier_Lua_IsHidden", "contents": "IsHidden()" },
		{ "trigger": "IsHidden", "contents": "IsHidden()" },
		{ "trigger": "CDOTA_Modifier_Lua_IsPurgable", "contents": "IsPurgable()" },
		{ "trigger": "IsPurgable", "contents": "IsPurgable()" },
		{ "trigger": "CDOTA_Modifier_Lua_IsPurgeException", "contents": "IsPurgeException()" },
		{ "trigger": "IsPurgeException", "contents": "IsPurgeException()" },
		{ "trigger": "CDOTA_Modifier_Lua_IsStunDebuff", "contents": "IsStunDebuff()" },
		{ "trigger": "IsStunDebuff", "contents": "IsStunDebuff()" },
		{ "trigger": "CDOTA_Modifier_Lua_OnCreated", "contents": "OnCreated(${1:table})" },
		{ "trigger": "OnCreated", "contents": "OnCreated(${1:table})" },
		{ "trigger": "CDOTA_Modifier_Lua_OnDestroy", "contents": "OnDestroy()" },
		{ "trigger": "OnDestroy", "contents": "OnDestroy()" },
		{ "trigger": "CDOTA_Modifier_Lua_OnIntervalThink", "contents": "OnIntervalThink()" },
		{ "trigger": "OnIntervalThink", "contents": "OnIntervalThink()" },
		{ "trigger": "CDOTA_Modifier_Lua_OnRefresh", "contents": "OnRefresh(${1:table})" },
		{ "trigger": "OnRefresh", "contents": "OnRefresh(${1:table})" },
		{ "trigger": "CDOTA_Modifier_Lua_RemoveOnDeath", "contents": "RemoveOnDeath()" },
		{ "trigger": "RemoveOnDeath", "contents": "RemoveOnDeath()" },
		{ "trigger": "CDOTA_Modifier_Lua_StatusEffectPriority", "contents": "StatusEffectPriority()" },
		{ "trigger": "StatusEffectPriority", "contents": "StatusEffectPriority()" },
		{ "trigger": "CDOTA_Modifier_Lua_Horizontal_Motion_ApplyHorizontalMotionController", "contents": "ApplyHorizontalMotionController()" },
		{ "trigger": "ApplyHorizontalMotionController", "contents": "ApplyHorizontalMotionController()" },
		{ "trigger": "CDOTA_Modifier_Lua_Horizontal_Motion_GetPriority", "contents": "GetPriority()" },
		{ "trigger": "GetPriority", "contents": "GetPriority()" },
		{ "trigger": "CDOTA_Modifier_Lua_Horizontal_Motion_OnHorizontalMotionInterrupted", "contents": "OnHorizontalMotionInterrupted()" },
		{ "trigger": "OnHorizontalMotionInterrupted", "contents": "OnHorizontalMotionInterrupted()" },
		{ "trigger": "CDOTA_Modifier_Lua_Horizontal_Motion_SetPriority", "contents": "SetPriority(${1:nMotionPriority})" },
		{ "trigger": "SetPriority", "contents": "SetPriority(${1:nMotionPriority})" },
		{ "trigger": "CDOTA_Modifier_Lua_Horizontal_Motion_UpdateHorizontalMotion", "contents": "UpdateHorizontalMotion(${1:me},${2:dt})" },
		{ "trigger": "UpdateHorizontalMotion", "contents": "UpdateHorizontalMotion(${1:me},${2:dt})" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_ApplyHorizontalMotionController", "contents": "ApplyHorizontalMotionController()" },
		{ "trigger": "ApplyHorizontalMotionController", "contents": "ApplyHorizontalMotionController()" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_ApplyVerticalMotionController", "contents": "ApplyVerticalMotionController()" },
		{ "trigger": "ApplyVerticalMotionController", "contents": "ApplyVerticalMotionController()" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_GetPriority", "contents": "GetPriority()" },
		{ "trigger": "GetPriority", "contents": "GetPriority()" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_OnHorizontalMotionInterrupted", "contents": "OnHorizontalMotionInterrupted()" },
		{ "trigger": "OnHorizontalMotionInterrupted", "contents": "OnHorizontalMotionInterrupted()" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_OnVerticalMotionInterrupted", "contents": "OnVerticalMotionInterrupted()" },
		{ "trigger": "OnVerticalMotionInterrupted", "contents": "OnVerticalMotionInterrupted()" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_SetPriority", "contents": "SetPriority(${1:nMotionPriority})" },
		{ "trigger": "SetPriority", "contents": "SetPriority(${1:nMotionPriority})" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_UpdateHorizontalMotion", "contents": "UpdateHorizontalMotion(${1:me},${2:dt})" },
		{ "trigger": "UpdateHorizontalMotion", "contents": "UpdateHorizontalMotion(${1:me},${2:dt})" },
		{ "trigger": "CDOTA_Modifier_Lua_Motion_Both_UpdateVerticalMotion", "contents": "UpdateVerticalMotion(${1:me},${2:dt})" },
		{ "trigger": "UpdateVerticalMotion", "contents": "UpdateVerticalMotion(${1:me},${2:dt})" },
		{ "trigger": "CDOTA_Modifier_Lua_Vertical_Motion_ApplyVerticalMotionController", "contents": "ApplyVerticalMotionController()" },
		{ "trigger": "ApplyVerticalMotionController", "contents": "ApplyVerticalMotionController()" },
		{ "trigger": "CDOTA_Modifier_Lua_Vertical_Motion_GetMotionPriority", "contents": "GetMotionPriority()" },
		{ "trigger": "GetMotionPriority", "contents": "GetMotionPriority()" },
		{ "trigger": "CDOTA_Modifier_Lua_Vertical_Motion_OnVerticalMotionInterrupted", "contents": "OnVerticalMotionInterrupted()" },
		{ "trigger": "OnVerticalMotionInterrupted", "contents": "OnVerticalMotionInterrupted()" },
		{ "trigger": "CDOTA_Modifier_Lua_Vertical_Motion_SetMotionPriority", "contents": "SetMotionPriority(${1:nMotionPriority})" },
		{ "trigger": "SetMotionPriority", "contents": "SetMotionPriority(${1:nMotionPriority})" },
		{ "trigger": "CDOTA_Modifier_Lua_Vertical_Motion_UpdateVerticalMotion", "contents": "UpdateVerticalMotion(${1:me},${2:dt})" },
		{ "trigger": "UpdateVerticalMotion", "contents": "UpdateVerticalMotion(${1:me},${2:dt})" },
		{ "trigger": "PlayerResource_AddAegisPickup", "contents": "AddAegisPickup(${1:iPlayerID})" },
		{ "trigger": "AddAegisPickup", "contents": "AddAegisPickup(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_AddClaimedFarm", "contents": "AddClaimedFarm(${1:iPlayerID},${2:flFarmValue},${3:bEarnedValue})" },
		{ "trigger": "AddClaimedFarm", "contents": "AddClaimedFarm(${1:iPlayerID},${2:flFarmValue},${3:bEarnedValue})" },
		{ "trigger": "PlayerResource_AddGoldSpentOnSupport", "contents": "AddGoldSpentOnSupport(${1:iPlayerID},${2:iCost})" },
		{ "trigger": "AddGoldSpentOnSupport", "contents": "AddGoldSpentOnSupport(${1:iPlayerID},${2:iCost})" },
		{ "trigger": "PlayerResource_AddRunePickup", "contents": "AddRunePickup(${1:iPlayerID})" },
		{ "trigger": "AddRunePickup", "contents": "AddRunePickup(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_AreUnitsSharedWithPlayerID", "contents": "AreUnitsSharedWithPlayerID(${1:nUnitOwnerPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "AreUnitsSharedWithPlayerID", "contents": "AreUnitsSharedWithPlayerID(${1:nUnitOwnerPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "PlayerResource_ClearKillsMatrix", "contents": "ClearKillsMatrix(${1:iPlayerID})" },
		{ "trigger": "ClearKillsMatrix", "contents": "ClearKillsMatrix(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_ClearLastHitMultikill", "contents": "ClearLastHitMultikill(${1:iPlayerID})" },
		{ "trigger": "ClearLastHitMultikill", "contents": "ClearLastHitMultikill(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_ClearLastHitStreak", "contents": "ClearLastHitStreak(${1:iPlayerID})" },
		{ "trigger": "ClearLastHitStreak", "contents": "ClearLastHitStreak(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_ClearRawPlayerDamageMatrix", "contents": "ClearRawPlayerDamageMatrix(${1:iPlayerID})" },
		{ "trigger": "ClearRawPlayerDamageMatrix", "contents": "ClearRawPlayerDamageMatrix(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_ClearStreak", "contents": "ClearStreak(${1:iPlayerID})" },
		{ "trigger": "ClearStreak", "contents": "ClearStreak(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetAegisPickups", "contents": "GetAegisPickups(${1:iPlayerID})" },
		{ "trigger": "GetAegisPickups", "contents": "GetAegisPickups(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetAssists", "contents": "GetAssists(${1:iPlayerID})" },
		{ "trigger": "GetAssists", "contents": "GetAssists(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetBroadcasterChannel", "contents": "GetBroadcasterChannel(${1:iPlayerID})" },
		{ "trigger": "GetBroadcasterChannel", "contents": "GetBroadcasterChannel(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetBroadcasterChannelSlot", "contents": "GetBroadcasterChannelSlot(${1:iPlayerID})" },
		{ "trigger": "GetBroadcasterChannelSlot", "contents": "GetBroadcasterChannelSlot(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetClaimedDenies", "contents": "GetClaimedDenies(${1:iPlayerID})" },
		{ "trigger": "GetClaimedDenies", "contents": "GetClaimedDenies(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetClaimedFarm", "contents": "GetClaimedFarm(${1:iPlayerID},${2:bOnlyEarned})" },
		{ "trigger": "GetClaimedFarm", "contents": "GetClaimedFarm(${1:iPlayerID},${2:bOnlyEarned})" },
		{ "trigger": "PlayerResource_GetClaimedMisses", "contents": "GetClaimedMisses(${1:iPlayerID})" },
		{ "trigger": "GetClaimedMisses", "contents": "GetClaimedMisses(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetConnectionState", "contents": "GetConnectionState(${1:iPlayerID})" },
		{ "trigger": "GetConnectionState", "contents": "GetConnectionState(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetCreepDamageTaken", "contents": "GetCreepDamageTaken(${1:iPlayerID},${2:bTotal})" },
		{ "trigger": "GetCreepDamageTaken", "contents": "GetCreepDamageTaken(${1:iPlayerID},${2:bTotal})" },
		{ "trigger": "PlayerResource_GetCustomBuybackCooldown", "contents": "GetCustomBuybackCooldown(${1:iPlayerID})" },
		{ "trigger": "GetCustomBuybackCooldown", "contents": "GetCustomBuybackCooldown(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetCustomBuybackCost", "contents": "GetCustomBuybackCost(${1:iPlayerID})" },
		{ "trigger": "GetCustomBuybackCost", "contents": "GetCustomBuybackCost(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetCustomTeamAssignment", "contents": "GetCustomTeamAssignment(${1:iPlayerID})" },
		{ "trigger": "GetCustomTeamAssignment", "contents": "GetCustomTeamAssignment(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetDamageDoneToHero", "contents": "GetDamageDoneToHero(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "GetDamageDoneToHero", "contents": "GetDamageDoneToHero(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "PlayerResource_GetDeaths", "contents": "GetDeaths(${1:iPlayerID})" },
		{ "trigger": "GetDeaths", "contents": "GetDeaths(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetDenies", "contents": "GetDenies(${1:iPlayerID})" },
		{ "trigger": "GetDenies", "contents": "GetDenies(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetEventPointsForPlayerID", "contents": "GetEventPointsForPlayerID(${1:iPlayerID})" },
		{ "trigger": "GetEventPointsForPlayerID", "contents": "GetEventPointsForPlayerID(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetEventPremiumPoints", "contents": "GetEventPremiumPoints(${1:iPlayerID})" },
		{ "trigger": "GetEventPremiumPoints", "contents": "GetEventPremiumPoints(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetEventRanks", "contents": "GetEventRanks(${1:iPlayerID})" },
		{ "trigger": "GetEventRanks", "contents": "GetEventRanks(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetGold", "contents": "GetGold(${1:iPlayerID})" },
		{ "trigger": "GetGold", "contents": "GetGold(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetGoldLostToDeath", "contents": "GetGoldLostToDeath(${1:iPlayerID})" },
		{ "trigger": "GetGoldLostToDeath", "contents": "GetGoldLostToDeath(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetGoldPerMin", "contents": "GetGoldPerMin(${1:iPlayerID})" },
		{ "trigger": "GetGoldPerMin", "contents": "GetGoldPerMin(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetGoldSpentOnBuybacks", "contents": "GetGoldSpentOnBuybacks(${1:iPlayerID})" },
		{ "trigger": "GetGoldSpentOnBuybacks", "contents": "GetGoldSpentOnBuybacks(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetGoldSpentOnConsumables", "contents": "GetGoldSpentOnConsumables(${1:iPlayerID})" },
		{ "trigger": "GetGoldSpentOnConsumables", "contents": "GetGoldSpentOnConsumables(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetGoldSpentOnItems", "contents": "GetGoldSpentOnItems(${1:iPlayerID})" },
		{ "trigger": "GetGoldSpentOnItems", "contents": "GetGoldSpentOnItems(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetGoldSpentOnSupport", "contents": "GetGoldSpentOnSupport(${1:iPlayerID})" },
		{ "trigger": "GetGoldSpentOnSupport", "contents": "GetGoldSpentOnSupport(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetHealing", "contents": "GetHealing(${1:iPlayerID})" },
		{ "trigger": "GetHealing", "contents": "GetHealing(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetHeroDamageTaken", "contents": "GetHeroDamageTaken(${1:iPlayerID},${2:bTotal})" },
		{ "trigger": "GetHeroDamageTaken", "contents": "GetHeroDamageTaken(${1:iPlayerID},${2:bTotal})" },
		{ "trigger": "PlayerResource_GetKills", "contents": "GetKills(${1:iPlayerID})" },
		{ "trigger": "GetKills", "contents": "GetKills(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetKillsDoneToHero", "contents": "GetKillsDoneToHero(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "GetKillsDoneToHero", "contents": "GetKillsDoneToHero(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "PlayerResource_GetLastHitMultikill", "contents": "GetLastHitMultikill(${1:iPlayerID})" },
		{ "trigger": "GetLastHitMultikill", "contents": "GetLastHitMultikill(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetLastHitStreak", "contents": "GetLastHitStreak(${1:iPlayerID})" },
		{ "trigger": "GetLastHitStreak", "contents": "GetLastHitStreak(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetLastHits", "contents": "GetLastHits(${1:iPlayerID})" },
		{ "trigger": "GetLastHits", "contents": "GetLastHits(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetLevel", "contents": "GetLevel(${1:iPlayerID})" },
		{ "trigger": "GetLevel", "contents": "GetLevel(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetMisses", "contents": "GetMisses(${1:iPlayerID})" },
		{ "trigger": "GetMisses", "contents": "GetMisses(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetNearbyCreepDeaths", "contents": "GetNearbyCreepDeaths(${1:iPlayerID})" },
		{ "trigger": "GetNearbyCreepDeaths", "contents": "GetNearbyCreepDeaths(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetNthCourierForTeam", "contents": "GetNthCourierForTeam(${1:nCourierIndex},${2:nTeamNumber})" },
		{ "trigger": "GetNthCourierForTeam", "contents": "GetNthCourierForTeam(${1:nCourierIndex},${2:nTeamNumber})" },
		{ "trigger": "PlayerResource_GetNthPlayerIDOnTeam", "contents": "GetNthPlayerIDOnTeam(${1:iTeamNumber},${2:iNthPlayer})" },
		{ "trigger": "GetNthPlayerIDOnTeam", "contents": "GetNthPlayerIDOnTeam(${1:iTeamNumber},${2:iNthPlayer})" },
		{ "trigger": "PlayerResource_GetNumConsumablesPurchased", "contents": "GetNumConsumablesPurchased(${1:iPlayerID})" },
		{ "trigger": "GetNumConsumablesPurchased", "contents": "GetNumConsumablesPurchased(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetNumCouriersForTeam", "contents": "GetNumCouriersForTeam(${1:nTeamNumber})" },
		{ "trigger": "GetNumCouriersForTeam", "contents": "GetNumCouriersForTeam(${1:nTeamNumber})" },
		{ "trigger": "PlayerResource_GetNumItemsPurchased", "contents": "GetNumItemsPurchased(${1:iPlayerID})" },
		{ "trigger": "GetNumItemsPurchased", "contents": "GetNumItemsPurchased(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetPlayer", "contents": "GetPlayer(${1:iPlayerID})" },
		{ "trigger": "GetPlayer", "contents": "GetPlayer(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetPlayerCount", "contents": "GetPlayerCount()" },
		{ "trigger": "GetPlayerCount", "contents": "GetPlayerCount()" },
		{ "trigger": "PlayerResource_GetPlayerCountForTeam", "contents": "GetPlayerCountForTeam(${1:iTeam})" },
		{ "trigger": "GetPlayerCountForTeam", "contents": "GetPlayerCountForTeam(${1:iTeam})" },
		{ "trigger": "PlayerResource_GetPlayerLoadedCompletely", "contents": "GetPlayerLoadedCompletely(${1:iPlayerID})" },
		{ "trigger": "GetPlayerLoadedCompletely", "contents": "GetPlayerLoadedCompletely(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetPlayerName", "contents": "GetPlayerName(${1:iPlayerID})" },
		{ "trigger": "GetPlayerName", "contents": "GetPlayerName(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetPlayerReservedState", "contents": "GetPlayerReservedState(${1:iPlayerID})" },
		{ "trigger": "GetPlayerReservedState", "contents": "GetPlayerReservedState(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetRawPlayerDamage", "contents": "GetRawPlayerDamage(${1:iPlayerID})" },
		{ "trigger": "GetRawPlayerDamage", "contents": "GetRawPlayerDamage(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetReliableGold", "contents": "GetReliableGold(${1:iPlayerID})" },
		{ "trigger": "GetReliableGold", "contents": "GetReliableGold(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetRespawnSeconds", "contents": "GetRespawnSeconds(${1:iPlayerID})" },
		{ "trigger": "GetRespawnSeconds", "contents": "GetRespawnSeconds(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetRoshanKills", "contents": "GetRoshanKills(${1:iPlayerID})" },
		{ "trigger": "GetRoshanKills", "contents": "GetRoshanKills(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetRunePickups", "contents": "GetRunePickups(${1:iPlayerID})" },
		{ "trigger": "GetRunePickups", "contents": "GetRunePickups(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetSelectedHeroEntity", "contents": "GetSelectedHeroEntity(${1:iPlayerID})" },
		{ "trigger": "GetSelectedHeroEntity", "contents": "GetSelectedHeroEntity(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetSelectedHeroID", "contents": "GetSelectedHeroID(${1:iPlayerID})" },
		{ "trigger": "GetSelectedHeroID", "contents": "GetSelectedHeroID(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetSelectedHeroName", "contents": "GetSelectedHeroName(${1:iPlayerID})" },
		{ "trigger": "GetSelectedHeroName", "contents": "GetSelectedHeroName(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetSteamAccountID", "contents": "GetSteamAccountID(${1:iPlayerID})" },
		{ "trigger": "GetSteamAccountID", "contents": "GetSteamAccountID(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetSteamID", "contents": "GetSteamID(${1:iPlayerID})" },
		{ "trigger": "GetSteamID", "contents": "GetSteamID(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetStreak", "contents": "GetStreak(${1:iPlayerID})" },
		{ "trigger": "GetStreak", "contents": "GetStreak(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetStuns", "contents": "GetStuns(${1:iPlayerID})" },
		{ "trigger": "GetStuns", "contents": "GetStuns(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTeam", "contents": "GetTeam(${1:iPlayerID})" },
		{ "trigger": "GetTeam", "contents": "GetTeam(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTeamKills", "contents": "GetTeamKills(${1:iTeam})" },
		{ "trigger": "GetTeamKills", "contents": "GetTeamKills(${1:iTeam})" },
		{ "trigger": "PlayerResource_GetTeamPlayerCount", "contents": "GetTeamPlayerCount()" },
		{ "trigger": "GetTeamPlayerCount", "contents": "GetTeamPlayerCount()" },
		{ "trigger": "PlayerResource_GetTimeOfLastConsumablePurchase", "contents": "GetTimeOfLastConsumablePurchase(${1:iPlayerID})" },
		{ "trigger": "GetTimeOfLastConsumablePurchase", "contents": "GetTimeOfLastConsumablePurchase(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTimeOfLastDeath", "contents": "GetTimeOfLastDeath(${1:iPlayerID})" },
		{ "trigger": "GetTimeOfLastDeath", "contents": "GetTimeOfLastDeath(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTimeOfLastItemPurchase", "contents": "GetTimeOfLastItemPurchase(${1:iPlayerID})" },
		{ "trigger": "GetTimeOfLastItemPurchase", "contents": "GetTimeOfLastItemPurchase(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTotalEarnedGold", "contents": "GetTotalEarnedGold(${1:iPlayerID})" },
		{ "trigger": "GetTotalEarnedGold", "contents": "GetTotalEarnedGold(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTotalEarnedXP", "contents": "GetTotalEarnedXP(${1:iPlayerID})" },
		{ "trigger": "GetTotalEarnedXP", "contents": "GetTotalEarnedXP(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTotalGoldSpent", "contents": "GetTotalGoldSpent(${1:iPlayerID})" },
		{ "trigger": "GetTotalGoldSpent", "contents": "GetTotalGoldSpent(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetTowerDamageTaken", "contents": "GetTowerDamageTaken(${1:iPlayerID},${2:bTotal})" },
		{ "trigger": "GetTowerDamageTaken", "contents": "GetTowerDamageTaken(${1:iPlayerID},${2:bTotal})" },
		{ "trigger": "PlayerResource_GetTowerKills", "contents": "GetTowerKills(${1:iPlayerID})" },
		{ "trigger": "GetTowerKills", "contents": "GetTowerKills(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetUnitShareMaskForPlayer", "contents": "GetUnitShareMaskForPlayer(${1:nPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "GetUnitShareMaskForPlayer", "contents": "GetUnitShareMaskForPlayer(${1:nPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "PlayerResource_GetUnreliableGold", "contents": "GetUnreliableGold(${1:iPlayerID})" },
		{ "trigger": "GetUnreliableGold", "contents": "GetUnreliableGold(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_GetXPPerMin", "contents": "GetXPPerMin(${1:iPlayerID})" },
		{ "trigger": "GetXPPerMin", "contents": "GetXPPerMin(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_HasCustomGameTicketForPlayerID", "contents": "HasCustomGameTicketForPlayerID(${1:iPlayerID})" },
		{ "trigger": "HasCustomGameTicketForPlayerID", "contents": "HasCustomGameTicketForPlayerID(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_HasRandomed", "contents": "HasRandomed(${1:iPlayerID})" },
		{ "trigger": "HasRandomed", "contents": "HasRandomed(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_HasRepicked", "contents": "HasRepicked(${1:iPlayerID})" },
		{ "trigger": "HasRepicked", "contents": "HasRepicked(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_HasSelectedHero", "contents": "HasSelectedHero(${1:iPlayerID})" },
		{ "trigger": "HasSelectedHero", "contents": "HasSelectedHero(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_HaveAllPlayersJoined", "contents": "HaveAllPlayersJoined()" },
		{ "trigger": "HaveAllPlayersJoined", "contents": "HaveAllPlayersJoined()" },
		{ "trigger": "PlayerResource_IncrementAssists", "contents": "IncrementAssists(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "IncrementAssists", "contents": "IncrementAssists(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "PlayerResource_IncrementClaimedDenies", "contents": "IncrementClaimedDenies(${1:iPlayerID})" },
		{ "trigger": "IncrementClaimedDenies", "contents": "IncrementClaimedDenies(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementClaimedMisses", "contents": "IncrementClaimedMisses(${1:iPlayerID})" },
		{ "trigger": "IncrementClaimedMisses", "contents": "IncrementClaimedMisses(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementDeaths", "contents": "IncrementDeaths(${1:iPlayerID},${2:iKillerID})" },
		{ "trigger": "IncrementDeaths", "contents": "IncrementDeaths(${1:iPlayerID},${2:iKillerID})" },
		{ "trigger": "PlayerResource_IncrementDenies", "contents": "IncrementDenies(${1:iPlayerID})" },
		{ "trigger": "IncrementDenies", "contents": "IncrementDenies(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementKills", "contents": "IncrementKills(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "IncrementKills", "contents": "IncrementKills(${1:iPlayerID},${2:iVictimID})" },
		{ "trigger": "PlayerResource_IncrementLastHitMultikill", "contents": "IncrementLastHitMultikill(${1:iPlayerID})" },
		{ "trigger": "IncrementLastHitMultikill", "contents": "IncrementLastHitMultikill(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementLastHitStreak", "contents": "IncrementLastHitStreak(${1:iPlayerID})" },
		{ "trigger": "IncrementLastHitStreak", "contents": "IncrementLastHitStreak(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementLastHits", "contents": "IncrementLastHits(${1:iPlayerID})" },
		{ "trigger": "IncrementLastHits", "contents": "IncrementLastHits(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementMisses", "contents": "IncrementMisses(${1:iPlayerID})" },
		{ "trigger": "IncrementMisses", "contents": "IncrementMisses(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementNearbyCreepDeaths", "contents": "IncrementNearbyCreepDeaths(${1:iPlayerID})" },
		{ "trigger": "IncrementNearbyCreepDeaths", "contents": "IncrementNearbyCreepDeaths(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementStreak", "contents": "IncrementStreak(${1:iPlayerID})" },
		{ "trigger": "IncrementStreak", "contents": "IncrementStreak(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IncrementTotalEarnedXP", "contents": "IncrementTotalEarnedXP(${1:iPlayerID},${2:iXP},${3:nReason})" },
		{ "trigger": "IncrementTotalEarnedXP", "contents": "IncrementTotalEarnedXP(${1:iPlayerID},${2:iXP},${3:nReason})" },
		{ "trigger": "PlayerResource_IsBroadcaster", "contents": "IsBroadcaster(${1:iPlayerID})" },
		{ "trigger": "IsBroadcaster", "contents": "IsBroadcaster(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IsDisableHelpSetForPlayerID", "contents": "IsDisableHelpSetForPlayerID(${1:nPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "IsDisableHelpSetForPlayerID", "contents": "IsDisableHelpSetForPlayerID(${1:nPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "PlayerResource_IsFakeClient", "contents": "IsFakeClient(${1:iPlayerID})" },
		{ "trigger": "IsFakeClient", "contents": "IsFakeClient(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IsHeroSelected", "contents": "IsHeroSelected(${1:pHeroname})" },
		{ "trigger": "IsHeroSelected", "contents": "IsHeroSelected(${1:pHeroname})" },
		{ "trigger": "PlayerResource_IsHeroSharedWithPlayerID", "contents": "IsHeroSharedWithPlayerID(${1:nUnitOwnerPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "IsHeroSharedWithPlayerID", "contents": "IsHeroSharedWithPlayerID(${1:nUnitOwnerPlayerID},${2:nOtherPlayerID})" },
		{ "trigger": "PlayerResource_IsValidPlayer", "contents": "IsValidPlayer(${1:iPlayerID})" },
		{ "trigger": "IsValidPlayer", "contents": "IsValidPlayer(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IsValidPlayerID", "contents": "IsValidPlayerID(${1:iPlayerID})" },
		{ "trigger": "IsValidPlayerID", "contents": "IsValidPlayerID(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IsValidTeamPlayer", "contents": "IsValidTeamPlayer(${1:iPlayerID})" },
		{ "trigger": "IsValidTeamPlayer", "contents": "IsValidTeamPlayer(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_IsValidTeamPlayerID", "contents": "IsValidTeamPlayerID(${1:iPlayerID})" },
		{ "trigger": "IsValidTeamPlayerID", "contents": "IsValidTeamPlayerID(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_ModifyGold", "contents": "ModifyGold(${1:iPlayerID},${2:iGoldChange},${3:bReliable},${4:nReason})" },
		{ "trigger": "ModifyGold", "contents": "ModifyGold(${1:iPlayerID},${2:iGoldChange},${3:bReliable},${4:nReason})" },
		{ "trigger": "PlayerResource_ReplaceHeroWith", "contents": "ReplaceHeroWith(${1:playerID},${2:heroClassName},${3:gold},${4:XP})" },
		{ "trigger": "ReplaceHeroWith", "contents": "ReplaceHeroWith(${1:playerID},${2:heroClassName},${3:gold},${4:XP})" },
		{ "trigger": "PlayerResource_ResetBuybackCostTime", "contents": "ResetBuybackCostTime(${1:nPlayerID})" },
		{ "trigger": "ResetBuybackCostTime", "contents": "ResetBuybackCostTime(${1:nPlayerID})" },
		{ "trigger": "PlayerResource_ResetTotalEarnedGold", "contents": "ResetTotalEarnedGold(${1:iPlayerID})" },
		{ "trigger": "ResetTotalEarnedGold", "contents": "ResetTotalEarnedGold(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_SetBuybackCooldownTime", "contents": "SetBuybackCooldownTime(${1:nPlayerID},${2:flBuybackCooldown})" },
		{ "trigger": "SetBuybackCooldownTime", "contents": "SetBuybackCooldownTime(${1:nPlayerID},${2:flBuybackCooldown})" },
		{ "trigger": "PlayerResource_SetBuybackGoldLimitTime", "contents": "SetBuybackGoldLimitTime(${1:nPlayerID},${2:flBuybackCooldown})" },
		{ "trigger": "SetBuybackGoldLimitTime", "contents": "SetBuybackGoldLimitTime(${1:nPlayerID},${2:flBuybackCooldown})" },
		{ "trigger": "PlayerResource_SetCameraTarget", "contents": "SetCameraTarget(${1:playerID},${2:entity})" },
		{ "trigger": "SetCameraTarget", "contents": "SetCameraTarget(${1:playerID},${2:entity})" },
		{ "trigger": "PlayerResource_SetCustomBuybackCooldown", "contents": "SetCustomBuybackCooldown(${1:iPlayerID},${2:flCooldownTime})" },
		{ "trigger": "SetCustomBuybackCooldown", "contents": "SetCustomBuybackCooldown(${1:iPlayerID},${2:flCooldownTime})" },
		{ "trigger": "PlayerResource_SetCustomBuybackCost", "contents": "SetCustomBuybackCost(${1:iPlayerID},${2:iGoldCost})" },
		{ "trigger": "SetCustomBuybackCost", "contents": "SetCustomBuybackCost(${1:iPlayerID},${2:iGoldCost})" },
		{ "trigger": "PlayerResource_SetCustomPlayerColor", "contents": "SetCustomPlayerColor(${1:minimap},${2:scoreboard},${3:etc},${4:b})" },
		{ "trigger": "SetCustomPlayerColor", "contents": "SetCustomPlayerColor(${1:minimap},${2:scoreboard},${3:etc},${4:b})" },
		{ "trigger": "PlayerResource_SetCustomTeamAssignment", "contents": "SetCustomTeamAssignment(${1:iPlayerID},${2:iTeamAssignment})" },
		{ "trigger": "SetCustomTeamAssignment", "contents": "SetCustomTeamAssignment(${1:iPlayerID},${2:iTeamAssignment})" },
		{ "trigger": "PlayerResource_SetGold", "contents": "SetGold(${1:iPlayerID},${2:iGold},${3:bReliable})" },
		{ "trigger": "SetGold", "contents": "SetGold(${1:iPlayerID},${2:iGold},${3:bReliable})" },
		{ "trigger": "PlayerResource_SetHasRandomed", "contents": "SetHasRandomed(${1:iPlayerID})" },
		{ "trigger": "SetHasRandomed", "contents": "SetHasRandomed(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_SetHasRepicked", "contents": "SetHasRepicked(${1:iPlayerID})" },
		{ "trigger": "SetHasRepicked", "contents": "SetHasRepicked(${1:iPlayerID})" },
		{ "trigger": "PlayerResource_SetLastBuybackTime", "contents": "SetLastBuybackTime(${1:iPlayerID},${2:iLastBuybackTime})" },
		{ "trigger": "SetLastBuybackTime", "contents": "SetLastBuybackTime(${1:iPlayerID},${2:iLastBuybackTime})" },
		{ "trigger": "PlayerResource_SetOverrideSelectionEntity", "contents": "SetOverrideSelectionEntity(${1:nPlayerID},${2:hEntity})" },
		{ "trigger": "SetOverrideSelectionEntity", "contents": "SetOverrideSelectionEntity(${1:nPlayerID},${2:hEntity})" },
		{ "trigger": "PlayerResource_SetPlayerReservedState", "contents": "SetPlayerReservedState(${1:iPlayerID},${2:bReserved})" },
		{ "trigger": "SetPlayerReservedState", "contents": "SetPlayerReservedState(${1:iPlayerID},${2:bReserved})" },
		{ "trigger": "PlayerResource_SetUnitShareMaskForPlayer", "contents": "SetUnitShareMaskForPlayer(${1:nPlayerID},${2:nOtherPlayerID},${3:nFlag},${4:bState})" },
		{ "trigger": "SetUnitShareMaskForPlayer", "contents": "SetUnitShareMaskForPlayer(${1:nPlayerID},${2:nOtherPlayerID},${3:nFlag},${4:bState})" },
		{ "trigger": "PlayerResource_SpendGold", "contents": "SpendGold(${1:iPlayerID},${2:iCost},${3:iReason})" },
		{ "trigger": "SpendGold", "contents": "SpendGold(${1:iPlayerID},${2:iCost},${3:iReason})" },
		{ "trigger": "PlayerResource_UpdateTeamSlot", "contents": "UpdateTeamSlot(${1:iPlayerID},${2:iTeamNumber},${3:desiredSlot})" },
		{ "trigger": "UpdateTeamSlot", "contents": "UpdateTeamSlot(${1:iPlayerID},${2:iTeamNumber},${3:desiredSlot})" },
		{ "trigger": "PlayerResource_WhoSelectedHero", "contents": "WhoSelectedHero(${1:pHeroFilename})" },
		{ "trigger": "WhoSelectedHero", "contents": "WhoSelectedHero(${1:pHeroFilename})" },
		{ "trigger": "CDOTA_SimpleObstruction_IsEnabled", "contents": "IsEnabled()" },
		{ "trigger": "IsEnabled", "contents": "IsEnabled()" },
		{ "trigger": "CDOTA_SimpleObstruction_SetEnabled", "contents": "SetEnabled(${1:bEnabled},${2:bForce})" },
		{ "trigger": "SetEnabled", "contents": "SetEnabled(${1:bEnabled},${2:bForce})" },
		{ "trigger": "CDOTA_Unit_Courier_UpgradeToFlyingCourier", "contents": "UpgradeToFlyingCourier()" },
		{ "trigger": "UpgradeToFlyingCourier", "contents": "UpgradeToFlyingCourier()" },
		{ "trigger": "CDOTA_Unit_Nian_GetHorn", "contents": "GetHorn()" },
		{ "trigger": "GetHorn", "contents": "GetHorn()" },
		{ "trigger": "CDOTA_Unit_Nian_GetTail", "contents": "GetTail()" },
		{ "trigger": "GetTail", "contents": "GetTail()" },
		{ "trigger": "CDOTA_Unit_Nian_IsHornAlive", "contents": "IsHornAlive()" },
		{ "trigger": "IsHornAlive", "contents": "IsHornAlive()" },
		{ "trigger": "CDOTA_Unit_Nian_IsTailAlive", "contents": "IsTailAlive()" },
		{ "trigger": "IsTailAlive", "contents": "IsTailAlive()" },
		{ "trigger": "CDebugOverlayScriptHelper_Axis", "contents": "Axis(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:bool_4},${5:float_5})" },
		{ "trigger": "Axis", "contents": "Axis(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:bool_4},${5:float_5})" },
		{ "trigger": "CDebugOverlayScriptHelper_Box", "contents": "Box(${1:Vector_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "Box", "contents": "Box(${1:Vector_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "CDebugOverlayScriptHelper_BoxAngles", "contents": "BoxAngles(${1:Vector_1},${2:Vector_2},${3:Vector_3},${4:Quaternion_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "BoxAngles", "contents": "BoxAngles(${1:Vector_1},${2:Vector_2},${3:Vector_3},${4:Quaternion_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "CDebugOverlayScriptHelper_Capsule", "contents": "Capsule(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "Capsule", "contents": "Capsule(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "CDebugOverlayScriptHelper_Circle", "contents": "Circle(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "Circle", "contents": "Circle(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "CDebugOverlayScriptHelper_CircleScreenOriented", "contents": "CircleScreenOriented(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "CircleScreenOriented", "contents": "CircleScreenOriented(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "CDebugOverlayScriptHelper_Cone", "contents": "Cone(${1:Vector_1},${2:Vector_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "Cone", "contents": "Cone(${1:Vector_1},${2:Vector_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "CDebugOverlayScriptHelper_Cross", "contents": "Cross(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "Cross", "contents": "Cross(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "CDebugOverlayScriptHelper_Cross3D", "contents": "Cross3D(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "Cross3D", "contents": "Cross3D(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "CDebugOverlayScriptHelper_Cross3DOriented", "contents": "Cross3DOriented(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "Cross3DOriented", "contents": "Cross3DOriented(${1:Vector_1},${2:Quaternion_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "CDebugOverlayScriptHelper_DrawTickMarkedLine", "contents": "DrawTickMarkedLine(${1:Vector_1},${2:Vector_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "DrawTickMarkedLine", "contents": "DrawTickMarkedLine(${1:Vector_1},${2:Vector_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "CDebugOverlayScriptHelper_EntityAttachments", "contents": "EntityAttachments(${1:ehandle_1},${2:float_2},${3:float_3})" },
		{ "trigger": "EntityAttachments", "contents": "EntityAttachments(${1:ehandle_1},${2:float_2},${3:float_3})" },
		{ "trigger": "CDebugOverlayScriptHelper_EntityAxis", "contents": "EntityAxis(${1:ehandle_1},${2:float_2},${3:bool_3},${4:float_4})" },
		{ "trigger": "EntityAxis", "contents": "EntityAxis(${1:ehandle_1},${2:float_2},${3:bool_3},${4:float_4})" },
		{ "trigger": "CDebugOverlayScriptHelper_EntityBounds", "contents": "EntityBounds(${1:ehandle_1},${2:int_2},${3:int_3},${4:int_4},${5:int_5},${6:bool_6},${7:float_7})" },
		{ "trigger": "EntityBounds", "contents": "EntityBounds(${1:ehandle_1},${2:int_2},${3:int_3},${4:int_4},${5:int_5},${6:bool_6},${7:float_7})" },
		{ "trigger": "CDebugOverlayScriptHelper_EntitySkeleton", "contents": "EntitySkeleton(${1:ehandle_1},${2:float_2})" },
		{ "trigger": "EntitySkeleton", "contents": "EntitySkeleton(${1:ehandle_1},${2:float_2})" },
		{ "trigger": "CDebugOverlayScriptHelper_EntityText", "contents": "EntityText(${1:ehandle_1},${2:int_2},${3:string_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:float_8})" },
		{ "trigger": "EntityText", "contents": "EntityText(${1:ehandle_1},${2:int_2},${3:string_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:float_8})" },
		{ "trigger": "CDebugOverlayScriptHelper_FilledRect2D", "contents": "FilledRect2D(${1:Vector2D_1},${2:Vector2D_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7})" },
		{ "trigger": "FilledRect2D", "contents": "FilledRect2D(${1:Vector2D_1},${2:Vector2D_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7})" },
		{ "trigger": "CDebugOverlayScriptHelper_HorzArrow", "contents": "HorzArrow(${1:Vector_1},${2:Vector_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "HorzArrow", "contents": "HorzArrow(${1:Vector_1},${2:Vector_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "CDebugOverlayScriptHelper_Line", "contents": "Line(${1:Vector_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "Line", "contents": "Line(${1:Vector_1},${2:Vector_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "CDebugOverlayScriptHelper_Line2D", "contents": "Line2D(${1:Vector2D_1},${2:Vector2D_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7})" },
		{ "trigger": "Line2D", "contents": "Line2D(${1:Vector2D_1},${2:Vector2D_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:float_7})" },
		{ "trigger": "CDebugOverlayScriptHelper_PopDebugOverlayScope", "contents": "PopDebugOverlayScope()" },
		{ "trigger": "PopDebugOverlayScope", "contents": "PopDebugOverlayScope()" },
		{ "trigger": "CDebugOverlayScriptHelper_PushAndClearDebugOverlayScope", "contents": "PushAndClearDebugOverlayScope(${1:utlstringtoken_1})" },
		{ "trigger": "PushAndClearDebugOverlayScope", "contents": "PushAndClearDebugOverlayScope(${1:utlstringtoken_1})" },
		{ "trigger": "CDebugOverlayScriptHelper_PushDebugOverlayScope", "contents": "PushDebugOverlayScope(${1:utlstringtoken_1})" },
		{ "trigger": "PushDebugOverlayScope", "contents": "PushDebugOverlayScope(${1:utlstringtoken_1})" },
		{ "trigger": "CDebugOverlayScriptHelper_RemoveAllInScope", "contents": "RemoveAllInScope(${1:utlstringtoken_1})" },
		{ "trigger": "RemoveAllInScope", "contents": "RemoveAllInScope(${1:utlstringtoken_1})" },
		{ "trigger": "CDebugOverlayScriptHelper_SolidCone", "contents": "SolidCone(${1:Vector_1},${2:Vector_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "SolidCone", "contents": "SolidCone(${1:Vector_1},${2:Vector_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "CDebugOverlayScriptHelper_Sphere", "contents": "Sphere(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "Sphere", "contents": "Sphere(${1:Vector_1},${2:float_2},${3:int_3},${4:int_4},${5:int_5},${6:int_6},${7:bool_7},${8:float_8})" },
		{ "trigger": "CDebugOverlayScriptHelper_SweptBox", "contents": "SweptBox(${1:Vector_1},${2:Vector_2},${3:Vector_3},${4:Vector_4},${5:Quaternion_5},${6:int_6},${7:int_7},${8:int_8},${9:int_9},${10:float_10})" },
		{ "trigger": "SweptBox", "contents": "SweptBox(${1:Vector_1},${2:Vector_2},${3:Vector_3},${4:Vector_4},${5:Quaternion_5},${6:int_6},${7:int_7},${8:int_8},${9:int_9},${10:float_10})" },
		{ "trigger": "CDebugOverlayScriptHelper_Text", "contents": "Text(${1:Vector_1},${2:int_2},${3:string_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:float_9})" },
		{ "trigger": "Text", "contents": "Text(${1:Vector_1},${2:int_2},${3:string_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:float_9})" },
		{ "trigger": "CDebugOverlayScriptHelper_Texture", "contents": "Texture(${1:string_1},${2:Vector2D_2},${3:Vector2D_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:Vector2D_8},${9:Vector2D_9},${10:float_10})" },
		{ "trigger": "Texture", "contents": "Texture(${1:string_1},${2:Vector2D_2},${3:Vector2D_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:Vector2D_8},${9:Vector2D_9},${10:float_10})" },
		{ "trigger": "CDebugOverlayScriptHelper_Triangle", "contents": "Triangle(${1:Vector_1},${2:Vector_2},${3:Vector_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "Triangle", "contents": "Triangle(${1:Vector_1},${2:Vector_2},${3:Vector_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "CDebugOverlayScriptHelper_UnitTestCycleOverlayRenderType", "contents": "UnitTestCycleOverlayRenderType()" },
		{ "trigger": "UnitTestCycleOverlayRenderType", "contents": "UnitTestCycleOverlayRenderType()" },
		{ "trigger": "CDebugOverlayScriptHelper_VectorText3D", "contents": "VectorText3D(${1:Vector_1},${2:Quaternion_2},${3:string_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "VectorText3D", "contents": "VectorText3D(${1:Vector_1},${2:Quaternion_2},${3:string_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "CDebugOverlayScriptHelper_VertArrow", "contents": "VertArrow(${1:Vector_1},${2:Vector_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "VertArrow", "contents": "VertArrow(${1:Vector_1},${2:Vector_2},${3:float_3},${4:int_4},${5:int_5},${6:int_6},${7:int_7},${8:bool_8},${9:float_9})" },
		{ "trigger": "CDebugOverlayScriptHelper_YawArrow", "contents": "YawArrow(${1:Vector_1},${2:float_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "YawArrow", "contents": "YawArrow(${1:Vector_1},${2:float_2},${3:float_3},${4:float_4},${5:int_5},${6:int_6},${7:int_7},${8:int_8},${9:bool_9},${10:float_10})" },
		{ "trigger": "CDotaQuest_AddSubquest", "contents": "AddSubquest(${1:hSubquest})" },
		{ "trigger": "AddSubquest", "contents": "AddSubquest(${1:hSubquest})" },
		{ "trigger": "CDotaQuest_CompleteQuest", "contents": "CompleteQuest()" },
		{ "trigger": "CompleteQuest", "contents": "CompleteQuest()" },
		{ "trigger": "CDotaQuest_GetSubquest", "contents": "GetSubquest(${1:nIndex})" },
		{ "trigger": "GetSubquest", "contents": "GetSubquest(${1:nIndex})" },
		{ "trigger": "CDotaQuest_GetSubquestByName", "contents": "GetSubquestByName(${1:pszName})" },
		{ "trigger": "GetSubquestByName", "contents": "GetSubquestByName(${1:pszName})" },
		{ "trigger": "CDotaQuest_RemoveSubquest", "contents": "RemoveSubquest(${1:hSubquest})" },
		{ "trigger": "RemoveSubquest", "contents": "RemoveSubquest(${1:hSubquest})" },
		{ "trigger": "CDotaQuest_SetTextReplaceString", "contents": "SetTextReplaceString(${1:pszString})" },
		{ "trigger": "SetTextReplaceString", "contents": "SetTextReplaceString(${1:pszString})" },
		{ "trigger": "CDotaQuest_SetTextReplaceValue", "contents": "SetTextReplaceValue(${1:valueSlot},${2:value})" },
		{ "trigger": "SetTextReplaceValue", "contents": "SetTextReplaceValue(${1:valueSlot},${2:value})" },
		{ "trigger": "CDotaSubquestBase_CompleteSubquest", "contents": "CompleteSubquest()" },
		{ "trigger": "CompleteSubquest", "contents": "CompleteSubquest()" },
		{ "trigger": "CDotaSubquestBase_SetTextReplaceString", "contents": "SetTextReplaceString(${1:pszString})" },
		{ "trigger": "SetTextReplaceString", "contents": "SetTextReplaceString(${1:pszString})" },
		{ "trigger": "CDotaSubquestBase_SetTextReplaceValue", "contents": "SetTextReplaceValue(${1:valueSlot},${2:value})" },
		{ "trigger": "SetTextReplaceValue", "contents": "SetTextReplaceValue(${1:valueSlot},${2:value})" },
		{ "trigger": "Entities_CreateByClassname", "contents": "CreateByClassname(${1:string_1})" },
		{ "trigger": "CreateByClassname", "contents": "CreateByClassname(${1:string_1})" },
		{ "trigger": "Entities_FindAllByClassname", "contents": "FindAllByClassname(${1:string_1})" },
		{ "trigger": "FindAllByClassname", "contents": "FindAllByClassname(${1:string_1})" },
		{ "trigger": "Entities_FindAllByClassnameWithin", "contents": "FindAllByClassnameWithin(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "FindAllByClassnameWithin", "contents": "FindAllByClassnameWithin(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "Entities_FindAllByModel", "contents": "FindAllByModel(${1:string_1})" },
		{ "trigger": "FindAllByModel", "contents": "FindAllByModel(${1:string_1})" },
		{ "trigger": "Entities_FindAllByName", "contents": "FindAllByName(${1:string_1})" },
		{ "trigger": "FindAllByName", "contents": "FindAllByName(${1:string_1})" },
		{ "trigger": "Entities_FindAllByNameWithin", "contents": "FindAllByNameWithin(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "FindAllByNameWithin", "contents": "FindAllByNameWithin(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "Entities_FindAllByTarget", "contents": "FindAllByTarget(${1:string_1})" },
		{ "trigger": "FindAllByTarget", "contents": "FindAllByTarget(${1:string_1})" },
		{ "trigger": "Entities_FindAllInSphere", "contents": "FindAllInSphere(${1:Vector_1},${2:float_2})" },
		{ "trigger": "FindAllInSphere", "contents": "FindAllInSphere(${1:Vector_1},${2:float_2})" },
		{ "trigger": "Entities_FindByClassname", "contents": "FindByClassname(${1:handle_1},${2:string_2})" },
		{ "trigger": "FindByClassname", "contents": "FindByClassname(${1:handle_1},${2:string_2})" },
		{ "trigger": "Entities_FindByClassnameNearest", "contents": "FindByClassnameNearest(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "FindByClassnameNearest", "contents": "FindByClassnameNearest(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "Entities_FindByClassnameWithin", "contents": "FindByClassnameWithin(${1:handle_1},${2:string_2},${3:Vector_3},${4:float_4})" },
		{ "trigger": "FindByClassnameWithin", "contents": "FindByClassnameWithin(${1:handle_1},${2:string_2},${3:Vector_3},${4:float_4})" },
		{ "trigger": "Entities_FindByModel", "contents": "FindByModel(${1:handle_1},${2:string_2})" },
		{ "trigger": "FindByModel", "contents": "FindByModel(${1:handle_1},${2:string_2})" },
		{ "trigger": "Entities_FindByModelWithin", "contents": "FindByModelWithin(${1:handle_1},${2:string_2},${3:Vector_3},${4:float_4})" },
		{ "trigger": "FindByModelWithin", "contents": "FindByModelWithin(${1:handle_1},${2:string_2},${3:Vector_3},${4:float_4})" },
		{ "trigger": "Entities_FindByName", "contents": "FindByName(${1:handle_1},${2:string_2})" },
		{ "trigger": "FindByName", "contents": "FindByName(${1:handle_1},${2:string_2})" },
		{ "trigger": "Entities_FindByNameNearest", "contents": "FindByNameNearest(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "FindByNameNearest", "contents": "FindByNameNearest(${1:string_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "Entities_FindByNameWithin", "contents": "FindByNameWithin(${1:handle_1},${2:string_2},${3:Vector_3},${4:float_4})" },
		{ "trigger": "FindByNameWithin", "contents": "FindByNameWithin(${1:handle_1},${2:string_2},${3:Vector_3},${4:float_4})" },
		{ "trigger": "Entities_FindByTarget", "contents": "FindByTarget(${1:handle_1},${2:string_2})" },
		{ "trigger": "FindByTarget", "contents": "FindByTarget(${1:handle_1},${2:string_2})" },
		{ "trigger": "Entities_FindInSphere", "contents": "FindInSphere(${1:handle_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "FindInSphere", "contents": "FindInSphere(${1:handle_1},${2:Vector_2},${3:float_3})" },
		{ "trigger": "Entities_First", "contents": "First()" },
		{ "trigger": "First", "contents": "First()" },
		{ "trigger": "Entities_Next", "contents": "Next(${1:handle_1})" },
		{ "trigger": "Next", "contents": "Next(${1:handle_1})" },
		{ "trigger": "CEntityInstance_ConnectOutput", "contents": "ConnectOutput(${1:string_1},${2:string_2})" },
		{ "trigger": "ConnectOutput", "contents": "ConnectOutput(${1:string_1},${2:string_2})" },
		{ "trigger": "CEntityInstance_Destroy", "contents": "Destroy()" },
		{ "trigger": "Destroy", "contents": "Destroy()" },
		{ "trigger": "CEntityInstance_DisconnectOutput", "contents": "DisconnectOutput(${1:string_1},${2:string_2})" },
		{ "trigger": "DisconnectOutput", "contents": "DisconnectOutput(${1:string_1},${2:string_2})" },
		{ "trigger": "CEntityInstance_DisconnectRedirectedOutput", "contents": "DisconnectRedirectedOutput(${1:string_1},${2:string_2},${3:handle_3})" },
		{ "trigger": "DisconnectRedirectedOutput", "contents": "DisconnectRedirectedOutput(${1:string_1},${2:string_2},${3:handle_3})" },
		{ "trigger": "CEntityInstance_FireOutput", "contents": "FireOutput(${1:string_1},${2:handle_2},${3:handle_3},${4:table_4},${5:float_5})" },
		{ "trigger": "FireOutput", "contents": "FireOutput(${1:string_1},${2:handle_2},${3:handle_3},${4:table_4},${5:float_5})" },
		{ "trigger": "CEntityInstance_GetClassname", "contents": "GetClassname()" },
		{ "trigger": "GetClassname", "contents": "GetClassname()" },
		{ "trigger": "CEntityInstance_GetDebugName", "contents": "GetDebugName()" },
		{ "trigger": "GetDebugName", "contents": "GetDebugName()" },
		{ "trigger": "CEntityInstance_GetEntityHandle", "contents": "GetEntityHandle()" },
		{ "trigger": "GetEntityHandle", "contents": "GetEntityHandle()" },
		{ "trigger": "CEntityInstance_GetEntityIndex", "contents": "GetEntityIndex()" },
		{ "trigger": "GetEntityIndex", "contents": "GetEntityIndex()" },
		{ "trigger": "CEntityInstance_GetIntAttr", "contents": "GetIntAttr(${1:string_1})" },
		{ "trigger": "GetIntAttr", "contents": "GetIntAttr(${1:string_1})" },
		{ "trigger": "CEntityInstance_GetName", "contents": "GetName()" },
		{ "trigger": "GetName", "contents": "GetName()" },
		{ "trigger": "CEntityInstance_GetOrCreatePrivateScriptScope", "contents": "GetOrCreatePrivateScriptScope()" },
		{ "trigger": "GetOrCreatePrivateScriptScope", "contents": "GetOrCreatePrivateScriptScope()" },
		{ "trigger": "CEntityInstance_GetOrCreatePublicScriptScope", "contents": "GetOrCreatePublicScriptScope()" },
		{ "trigger": "GetOrCreatePublicScriptScope", "contents": "GetOrCreatePublicScriptScope()" },
		{ "trigger": "CEntityInstance_GetPrivateScriptScope", "contents": "GetPrivateScriptScope()" },
		{ "trigger": "GetPrivateScriptScope", "contents": "GetPrivateScriptScope()" },
		{ "trigger": "CEntityInstance_GetPublicScriptScope", "contents": "GetPublicScriptScope()" },
		{ "trigger": "GetPublicScriptScope", "contents": "GetPublicScriptScope()" },
		{ "trigger": "CEntityInstance_RedirectOutput", "contents": "RedirectOutput(${1:string_1},${2:string_2},${3:handle_3})" },
		{ "trigger": "RedirectOutput", "contents": "RedirectOutput(${1:string_1},${2:string_2},${3:handle_3})" },
		{ "trigger": "CEntityInstance_RemoveSelf", "contents": "RemoveSelf()" },
		{ "trigger": "RemoveSelf", "contents": "RemoveSelf()" },
		{ "trigger": "CEntityInstance_SetIntAttr", "contents": "SetIntAttr(${1:string_1},${2:int_2})" },
		{ "trigger": "SetIntAttr", "contents": "SetIntAttr(${1:string_1},${2:int_2})" },
		{ "trigger": "CEntityInstance_entindex", "contents": "entindex()" },
		{ "trigger": "entindex", "contents": "entindex()" },
		{ "trigger": "CEnvEntityMaker_SpawnEntity", "contents": "SpawnEntity()" },
		{ "trigger": "SpawnEntity", "contents": "SpawnEntity()" },
		{ "trigger": "CEnvEntityMaker_SpawnEntityAtEntityOrigin", "contents": "SpawnEntityAtEntityOrigin(${1:hEntity})" },
		{ "trigger": "SpawnEntityAtEntityOrigin", "contents": "SpawnEntityAtEntityOrigin(${1:hEntity})" },
		{ "trigger": "CEnvEntityMaker_SpawnEntityAtLocation", "contents": "SpawnEntityAtLocation(${1:pitch},${2:yaw})" },
		{ "trigger": "SpawnEntityAtLocation", "contents": "SpawnEntityAtLocation(${1:pitch},${2:yaw})" },
		{ "trigger": "CEnvEntityMaker_SpawnEntityAtNamedEntityOrigin", "contents": "SpawnEntityAtNamedEntityOrigin(${1:pszName})" },
		{ "trigger": "SpawnEntityAtNamedEntityOrigin", "contents": "SpawnEntityAtNamedEntityOrigin(${1:pszName})" },
		{ "trigger": "CEnvProjectedTexture_SetFarRange", "contents": "SetFarRange(${1:flRange})" },
		{ "trigger": "SetFarRange", "contents": "SetFarRange(${1:flRange})" },
		{ "trigger": "CEnvProjectedTexture_SetLinearAttenuation", "contents": "SetLinearAttenuation(${1:flAtten})" },
		{ "trigger": "SetLinearAttenuation", "contents": "SetLinearAttenuation(${1:flAtten})" },
		{ "trigger": "CEnvProjectedTexture_SetNearRange", "contents": "SetNearRange(${1:flRange})" },
		{ "trigger": "SetNearRange", "contents": "SetNearRange(${1:flRange})" },
		{ "trigger": "CEnvProjectedTexture_SetQuadraticAttenuation", "contents": "SetQuadraticAttenuation(${1:flAtten})" },
		{ "trigger": "SetQuadraticAttenuation", "contents": "SetQuadraticAttenuation(${1:flAtten})" },
		{ "trigger": "CEnvProjectedTexture_SetVolumetrics", "contents": "SetVolumetrics(${1:bOn},${2:flIntensity},${3:flNoise},${4:nPlanes},${5:flPlaneOffset})" },
		{ "trigger": "SetVolumetrics", "contents": "SetVolumetrics(${1:bOn},${2:flIntensity},${3:flNoise},${4:nPlanes},${5:flPlaneOffset})" },
		{ "trigger": "CInfoData_QueryColor", "contents": "QueryColor(${1:tok},${2:vDefault})" },
		{ "trigger": "QueryColor", "contents": "QueryColor(${1:tok},${2:vDefault})" },
		{ "trigger": "CInfoData_QueryFloat", "contents": "QueryFloat(${1:tok},${2:flDefault})" },
		{ "trigger": "QueryFloat", "contents": "QueryFloat(${1:tok},${2:flDefault})" },
		{ "trigger": "CInfoData_QueryInt", "contents": "QueryInt(${1:tok},${2:nDefault})" },
		{ "trigger": "QueryInt", "contents": "QueryInt(${1:tok},${2:nDefault})" },
		{ "trigger": "CInfoData_QueryNumber", "contents": "QueryNumber(${1:tok},${2:flDefault})" },
		{ "trigger": "QueryNumber", "contents": "QueryNumber(${1:tok},${2:flDefault})" },
		{ "trigger": "CInfoData_QueryString", "contents": "QueryString(${1:tok},${2:pDefault})" },
		{ "trigger": "QueryString", "contents": "QueryString(${1:tok},${2:pDefault})" },
		{ "trigger": "CInfoData_QueryVector", "contents": "QueryVector(${1:tok},${2:vDefault})" },
		{ "trigger": "QueryVector", "contents": "QueryVector(${1:tok},${2:vDefault})" },
		{ "trigger": "CMarkupVolumeTagged_HasTag", "contents": "HasTag(${1:pszTagName})" },
		{ "trigger": "HasTag", "contents": "HasTag(${1:pszTagName})" },
		{ "trigger": "CNativeOutputs_AddOutput", "contents": "AddOutput(${1:string_1},${2:string_2})" },
		{ "trigger": "AddOutput", "contents": "AddOutput(${1:string_1},${2:string_2})" },
		{ "trigger": "CNativeOutputs_Init", "contents": "Init(${1:int_1})" },
		{ "trigger": "Init", "contents": "Init(${1:int_1})" },
		{ "trigger": "CPhysicsComponent_ExpensiveInstantRayCast", "contents": "ExpensiveInstantRayCast(${1:i.e. blocking},${2:Vector_2},${3:handle_3})" },
		{ "trigger": "ExpensiveInstantRayCast", "contents": "ExpensiveInstantRayCast(${1:i.e. blocking},${2:Vector_2},${3:handle_3})" },
		{ "trigger": "CPhysicsProp_DisableMotion", "contents": "DisableMotion()" },
		{ "trigger": "DisableMotion", "contents": "DisableMotion()" },
		{ "trigger": "CPhysicsProp_EnableMotion", "contents": "EnableMotion()" },
		{ "trigger": "EnableMotion", "contents": "EnableMotion()" },
		{ "trigger": "CPointTemplate_DeleteCreatedSpawnGroups", "contents": "DeleteCreatedSpawnGroups()" },
		{ "trigger": "DeleteCreatedSpawnGroups", "contents": "DeleteCreatedSpawnGroups()" },
		{ "trigger": "CPointTemplate_ForceSpawn", "contents": "ForceSpawn()" },
		{ "trigger": "ForceSpawn", "contents": "ForceSpawn()" },
		{ "trigger": "CPointTemplate_GetSpawnedEntities", "contents": "GetSpawnedEntities()" },
		{ "trigger": "GetSpawnedEntities", "contents": "GetSpawnedEntities()" },
		{ "trigger": "CPointTemplate_SetSpawnCallback", "contents": "SetSpawnCallback(${1:hCallbackFunc},${2:hCallbackScope})" },
		{ "trigger": "SetSpawnCallback", "contents": "SetSpawnCallback(${1:hCallbackFunc},${2:hCallbackScope})" },
		{ "trigger": "CPointWorldText_SetMessage", "contents": "SetMessage(${1:pMessage})" },
		{ "trigger": "SetMessage", "contents": "SetMessage(${1:pMessage})" },
		{ "trigger": "CPropHMDAvatar_GetVRHand", "contents": "GetVRHand(${1:nHandID})" },
		{ "trigger": "GetVRHand", "contents": "GetVRHand(${1:nHandID})" },
		{ "trigger": "CPropVRHand_AddHandAttachment", "contents": "AddHandAttachment(${1:hAttachment})" },
		{ "trigger": "AddHandAttachment", "contents": "AddHandAttachment(${1:hAttachment})" },
		{ "trigger": "CPropVRHand_GetHandAttachment", "contents": "GetHandAttachment()" },
		{ "trigger": "GetHandAttachment", "contents": "GetHandAttachment()" },
		{ "trigger": "CPropVRHand_SetHandAttachment", "contents": "SetHandAttachment(${1:hAttachment})" },
		{ "trigger": "SetHandAttachment", "contents": "SetHandAttachment(${1:hAttachment})" },
		{ "trigger": "CSceneEntity_AddBroadcastTeamTarget", "contents": "AddBroadcastTeamTarget(${1:by index})" },
		{ "trigger": "AddBroadcastTeamTarget", "contents": "AddBroadcastTeamTarget(${1:by index})" },
		{ "trigger": "CSceneEntity_Cancel", "contents": "Cancel()" },
		{ "trigger": "Cancel", "contents": "Cancel()" },
		{ "trigger": "CSceneEntity_EstimateLength", "contents": "EstimateLength()" },
		{ "trigger": "EstimateLength", "contents": "EstimateLength()" },
		{ "trigger": "CSceneEntity_FindCamera", "contents": "FindCamera()" },
		{ "trigger": "FindCamera", "contents": "FindCamera()" },
		{ "trigger": "CSceneEntity_FindNamedEntity", "contents": "FindNamedEntity(${1:string_1})" },
		{ "trigger": "FindNamedEntity", "contents": "FindNamedEntity(${1:string_1})" },
		{ "trigger": "CSceneEntity_IsPaused", "contents": "IsPaused()" },
		{ "trigger": "IsPaused", "contents": "IsPaused()" },
		{ "trigger": "CSceneEntity_IsPlayingBack", "contents": "IsPlayingBack()" },
		{ "trigger": "IsPlayingBack", "contents": "IsPlayingBack()" },
		{ "trigger": "CSceneEntity_LoadSceneFromString", "contents": "LoadSceneFromString(${1:string_1},${2:string_2})" },
		{ "trigger": "LoadSceneFromString", "contents": "LoadSceneFromString(${1:string_1},${2:string_2})" },
		{ "trigger": "CSceneEntity_RemoveBroadcastTeamTarget", "contents": "RemoveBroadcastTeamTarget(${1:by index})" },
		{ "trigger": "RemoveBroadcastTeamTarget", "contents": "RemoveBroadcastTeamTarget(${1:by index})" },
		{ "trigger": "CSceneEntity_Start", "contents": "Start(${1:handle_1})" },
		{ "trigger": "Start", "contents": "Start(${1:handle_1})" },
		{ "trigger": "CScriptHTTPRequest_Send", "contents": "Send(${1:handle_1})" },
		{ "trigger": "Send", "contents": "Send(${1:handle_1})" },
		{ "trigger": "CScriptHTTPRequest_SetHTTPRequestAbsoluteTimeoutMS", "contents": "SetHTTPRequestAbsoluteTimeoutMS(${1:unsigned_1})" },
		{ "trigger": "SetHTTPRequestAbsoluteTimeoutMS", "contents": "SetHTTPRequestAbsoluteTimeoutMS(${1:unsigned_1})" },
		{ "trigger": "CScriptHTTPRequest_SetHTTPRequestGetOrPostParameter", "contents": "SetHTTPRequestGetOrPostParameter(${1:string_1},${2:string_2})" },
		{ "trigger": "SetHTTPRequestGetOrPostParameter", "contents": "SetHTTPRequestGetOrPostParameter(${1:string_1},${2:string_2})" },
		{ "trigger": "CScriptHTTPRequest_SetHTTPRequestHeaderValue", "contents": "SetHTTPRequestHeaderValue(${1:string_1},${2:string_2})" },
		{ "trigger": "SetHTTPRequestHeaderValue", "contents": "SetHTTPRequestHeaderValue(${1:string_1},${2:string_2})" },
		{ "trigger": "CScriptHTTPRequest_SetHTTPRequestNetworkActivityTimeout", "contents": "SetHTTPRequestNetworkActivityTimeout(${1:unsigned_1})" },
		{ "trigger": "SetHTTPRequestNetworkActivityTimeout", "contents": "SetHTTPRequestNetworkActivityTimeout(${1:unsigned_1})" },
		{ "trigger": "CScriptHTTPRequest_SetHTTPRequestRawPostBody", "contents": "SetHTTPRequestRawPostBody(${1:string_1},${2:string_2})" },
		{ "trigger": "SetHTTPRequestRawPostBody", "contents": "SetHTTPRequestRawPostBody(${1:string_1},${2:string_2})" },
		{ "trigger": "HeroList_GetAllHeroes", "contents": "GetAllHeroes()" },
		{ "trigger": "GetAllHeroes", "contents": "GetAllHeroes()" },
		{ "trigger": "HeroList_GetHero", "contents": "GetHero(${1:int_1})" },
		{ "trigger": "GetHero", "contents": "GetHero(${1:int_1})" },
		{ "trigger": "HeroList_GetHeroCount", "contents": "GetHeroCount()" },
		{ "trigger": "GetHeroCount", "contents": "GetHeroCount()" },
		{ "trigger": "CScriptKeyValues_GetValue", "contents": "GetValue(${1:string_1})" },
		{ "trigger": "GetValue", "contents": "GetValue(${1:string_1})" },
		{ "trigger": "ParticleManager_CreateParticle", "contents": "CreateParticle(${1:string_1},${2:int_2},${3:handle_3})" },
		{ "trigger": "CreateParticle", "contents": "CreateParticle(${1:string_1},${2:int_2},${3:handle_3})" },
		{ "trigger": "ParticleManager_CreateParticleForPlayer", "contents": "CreateParticleForPlayer(${1:string_1},${2:int_2},${3:handle_3},${4:handle_4})" },
		{ "trigger": "CreateParticleForPlayer", "contents": "CreateParticleForPlayer(${1:string_1},${2:int_2},${3:handle_3},${4:handle_4})" },
		{ "trigger": "ParticleManager_CreateParticleForTeam", "contents": "CreateParticleForTeam(${1:string_1},${2:int_2},${3:handle_3},${4:int_4})" },
		{ "trigger": "CreateParticleForTeam", "contents": "CreateParticleForTeam(${1:string_1},${2:int_2},${3:handle_3},${4:int_4})" },
		{ "trigger": "ParticleManager_DestroyParticle", "contents": "DestroyParticle(${1:int index},${2:bool bDestroyImmediately})" },
		{ "trigger": "DestroyParticle", "contents": "DestroyParticle(${1:int index},${2:bool bDestroyImmediately})" },
		{ "trigger": "ParticleManager_GetParticleReplacement", "contents": "GetParticleReplacement(${1:string_1},${2:handle_2})" },
		{ "trigger": "GetParticleReplacement", "contents": "GetParticleReplacement(${1:string_1},${2:handle_2})" },
		{ "trigger": "ParticleManager_ReleaseParticleIndex", "contents": "ReleaseParticleIndex(${1:int_1})" },
		{ "trigger": "ReleaseParticleIndex", "contents": "ReleaseParticleIndex(${1:int_1})" },
		{ "trigger": "ParticleManager_SetParticleAlwaysSimulate", "contents": "SetParticleAlwaysSimulate(${1:int_1})" },
		{ "trigger": "SetParticleAlwaysSimulate", "contents": "SetParticleAlwaysSimulate(${1:int_1})" },
		{ "trigger": "ParticleManager_SetParticleControl", "contents": "SetParticleControl(${1:int_1},${2:int_2},${3:Vector_3})" },
		{ "trigger": "SetParticleControl", "contents": "SetParticleControl(${1:int_1},${2:int_2},${3:Vector_3})" },
		{ "trigger": "ParticleManager_SetParticleControlEnt", "contents": "SetParticleControlEnt(${1:int_1},${2:int_2},${3:handle_3},${4:int_4},${5:string_5},${6:Vector_6},${7:bool_7})" },
		{ "trigger": "SetParticleControlEnt", "contents": "SetParticleControlEnt(${1:int_1},${2:int_2},${3:handle_3},${4:int_4},${5:string_5},${6:Vector_6},${7:bool_7})" },
		{ "trigger": "ParticleManager_SetParticleControlForward", "contents": "SetParticleControlForward(${1:int nFXIndex},${2:int nPoint},${3:vForward})" },
		{ "trigger": "SetParticleControlForward", "contents": "SetParticleControlForward(${1:int nFXIndex},${2:int nPoint},${3:vForward})" },
		{ "trigger": "ParticleManager_SetParticleControlOrientation", "contents": "SetParticleControlOrientation(${1:int nFXIndex},${2:int nPoint},${3:vForward},${4:vRight},${5:vUp})" },
		{ "trigger": "SetParticleControlOrientation", "contents": "SetParticleControlOrientation(${1:int nFXIndex},${2:int nPoint},${3:vForward},${4:vRight},${5:vUp})" },
		{ "trigger": "CScriptPrecacheContext_AddResource", "contents": "AddResource(${1:string_1})" },
		{ "trigger": "AddResource", "contents": "AddResource(${1:string_1})" },
		{ "trigger": "CScriptPrecacheContext_GetValue", "contents": "GetValue(${1:string_1})" },
		{ "trigger": "GetValue", "contents": "GetValue(${1:string_1})" },
		{ "trigger": "ConVars_GetBool", "contents": "GetBool(${1:name})" },
		{ "trigger": "GetBool", "contents": "GetBool(${1:name})" },
		{ "trigger": "ConVars_GetCommandClient", "contents": "GetCommandClient()" },
		{ "trigger": "GetCommandClient", "contents": "GetCommandClient()" },
		{ "trigger": "ConVars_GetDOTACommandClient", "contents": "GetDOTACommandClient()" },
		{ "trigger": "GetDOTACommandClient", "contents": "GetDOTACommandClient()" },
		{ "trigger": "ConVars_GetFloat", "contents": "GetFloat(${1:name})" },
		{ "trigger": "GetFloat", "contents": "GetFloat(${1:name})" },
		{ "trigger": "ConVars_GetInt", "contents": "GetInt(${1:name})" },
		{ "trigger": "GetInt", "contents": "GetInt(${1:name})" },
		{ "trigger": "ConVars_GetStr", "contents": "GetStr(${1:name})" },
		{ "trigger": "GetStr", "contents": "GetStr(${1:name})" },
		{ "trigger": "ConVars_RegisterCommand", "contents": "RegisterCommand(${1:name},${2:fn},${3:helpString},${4:flags})" },
		{ "trigger": "RegisterCommand", "contents": "RegisterCommand(${1:name},${2:fn},${3:helpString},${4:flags})" },
		{ "trigger": "ConVars_RegisterConvar", "contents": "RegisterConvar(${1:name},${2:defaultValue},${3:helpString},${4:flags})" },
		{ "trigger": "RegisterConvar", "contents": "RegisterConvar(${1:name},${2:defaultValue},${3:helpString},${4:flags})" },
		{ "trigger": "ConVars_SetBool", "contents": "SetBool(${1:name},${2:val})" },
		{ "trigger": "SetBool", "contents": "SetBool(${1:name},${2:val})" },
		{ "trigger": "ConVars_SetFloat", "contents": "SetFloat(${1:name},${2:val})" },
		{ "trigger": "SetFloat", "contents": "SetFloat(${1:name},${2:val})" },
		{ "trigger": "ConVars_SetInt", "contents": "SetInt(${1:name},${2:val})" },
		{ "trigger": "SetInt", "contents": "SetInt(${1:name},${2:val})" },
		{ "trigger": "ConVars_SetStr", "contents": "SetStr(${1:name},${2:val})" },
		{ "trigger": "SetStr", "contents": "SetStr(${1:name},${2:val})" },
		{ "trigger": "GlobalSys_CommandLineCheck", "contents": "CommandLineCheck(${1:name})" },
		{ "trigger": "CommandLineCheck", "contents": "CommandLineCheck(${1:name})" },
		{ "trigger": "GlobalSys_CommandLineFloat", "contents": "CommandLineFloat(${1:name},${2:float_2})" },
		{ "trigger": "CommandLineFloat", "contents": "CommandLineFloat(${1:name},${2:float_2})" },
		{ "trigger": "GlobalSys_CommandLineInt", "contents": "CommandLineInt(${1:name},${2:int_2})" },
		{ "trigger": "CommandLineInt", "contents": "CommandLineInt(${1:name},${2:int_2})" },
		{ "trigger": "GlobalSys_CommandLineStr", "contents": "CommandLineStr(${1:name},${2:string_2})" },
		{ "trigger": "CommandLineStr", "contents": "CommandLineStr(${1:name},${2:string_2})" },
		{ "trigger": "GridNav_CanFindPath", "contents": "CanFindPath(${1:vStart},${2:vEnd})" },
		{ "trigger": "CanFindPath", "contents": "CanFindPath(${1:vStart},${2:vEnd})" },
		{ "trigger": "GridNav_DestroyTreesAroundPoint", "contents": "DestroyTreesAroundPoint(${1:Vector_1},${2:float_2},${3:bool_3})" },
		{ "trigger": "DestroyTreesAroundPoint", "contents": "DestroyTreesAroundPoint(${1:Vector_1},${2:float_2},${3:bool_3})" },
		{ "trigger": "GridNav_FindPathLength", "contents": "FindPathLength(${1:vStart},${2:vEnd})" },
		{ "trigger": "FindPathLength", "contents": "FindPathLength(${1:vStart},${2:vEnd})" },
		{ "trigger": "GridNav_GetAllTreesAroundPoint", "contents": "GetAllTreesAroundPoint(${1:vPosition},${2:flRadius},${3:bFullCollision})" },
		{ "trigger": "GetAllTreesAroundPoint", "contents": "GetAllTreesAroundPoint(${1:vPosition},${2:flRadius},${3:bFullCollision})" },
		{ "trigger": "GridNav_GridPosToWorldCenterX", "contents": "GridPosToWorldCenterX(${1:int_1})" },
		{ "trigger": "GridPosToWorldCenterX", "contents": "GridPosToWorldCenterX(${1:int_1})" },
		{ "trigger": "GridNav_GridPosToWorldCenterY", "contents": "GridPosToWorldCenterY(${1:int_1})" },
		{ "trigger": "GridPosToWorldCenterY", "contents": "GridPosToWorldCenterY(${1:int_1})" },
		{ "trigger": "GridNav_IsBlocked", "contents": "IsBlocked(${1:Vector_1})" },
		{ "trigger": "IsBlocked", "contents": "IsBlocked(${1:Vector_1})" },
		{ "trigger": "GridNav_IsNearbyTree", "contents": "IsNearbyTree(${1:position},${2:radius},${3:checkFullTreeRadius?})" },
		{ "trigger": "IsNearbyTree", "contents": "IsNearbyTree(${1:position},${2:radius},${3:checkFullTreeRadius?})" },
		{ "trigger": "GridNav_IsTraversable", "contents": "IsTraversable(${1:Vector_1})" },
		{ "trigger": "IsTraversable", "contents": "IsTraversable(${1:Vector_1})" },
		{ "trigger": "GridNav_RegrowAllTrees", "contents": "RegrowAllTrees()" },
		{ "trigger": "RegrowAllTrees", "contents": "RegrowAllTrees()" },
		{ "trigger": "GridNav_WorldToGridPosX", "contents": "WorldToGridPosX(${1:float_1})" },
		{ "trigger": "WorldToGridPosX", "contents": "WorldToGridPosX(${1:float_1})" },
		{ "trigger": "GridNav_WorldToGridPosY", "contents": "WorldToGridPosY(${1:float_1})" },
		{ "trigger": "WorldToGridPosY", "contents": "WorldToGridPosY(${1:float_1})" },
		{ "trigger": "ProjectileManager_CreateLinearProjectile", "contents": "CreateLinearProjectile(${1:handle_1})" },
		{ "trigger": "CreateLinearProjectile", "contents": "CreateLinearProjectile(${1:handle_1})" },
		{ "trigger": "ProjectileManager_CreateTrackingProjectile", "contents": "CreateTrackingProjectile(${1:handle_1})" },
		{ "trigger": "CreateTrackingProjectile", "contents": "CreateTrackingProjectile(${1:handle_1})" },
		{ "trigger": "ProjectileManager_DestroyLinearProjectile", "contents": "DestroyLinearProjectile(${1:int_1})" },
		{ "trigger": "DestroyLinearProjectile", "contents": "DestroyLinearProjectile(${1:int_1})" },
		{ "trigger": "ProjectileManager_GetLinearProjectileVelocity", "contents": "GetLinearProjectileVelocity(${1:int_1})" },
		{ "trigger": "GetLinearProjectileVelocity", "contents": "GetLinearProjectileVelocity(${1:int_1})" },
		{ "trigger": "ProjectileManager_ProjectileDodge", "contents": "ProjectileDodge(${1:handle_1})" },
		{ "trigger": "ProjectileDodge", "contents": "ProjectileDodge(${1:handle_1})" }
	]
}